[{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs?","title":"CONTRIBUTING","text":"Submit issue Issues page","code":""},{"path":"https://docs.ropensci.org/geojsonio/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"CONTRIBUTING","text":"Please keep text/code/docs within 80 character width files. Thanks! Fork repo Github account Clone version account machine account, e.g,. git clone https://github.com/<yourgithubusername>/geojsonio.git Make sure track progress upstream (.e., version geojsonio ropensci/geojsonio) git remote add upstream https://github.com/ropensci/geojsonio.git. making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes (bonus points making changes new feature branch) Please write test(s) changes affect code just docs Push account Submit pull request home base ropensci/geojsonio","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 geojsonio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/geojsonio/articles/geojson_spec.html","id":"the-structure-of-geojson","dir":"Articles","previous_headings":"","what":"The Structure of GeoJSON","title":"GeoJSON Specification","text":"See https://tools.ietf.org/html/rfc7946#section-3 information. GeoJSON text: JSON text consists single GeoJSON object. GeoJSON object: represents Geometry, Feature, collection Features (.e., FeatureCollection). member name “type”. value member MUST one GeoJSON types. MAY “bbox” member, value MUST bounding box array (see Section 5). MAY members (see Section 6). Geometry object: represents points, curves, surfaces coordinate space. Every Geometry object GeoJSON object matter occurs GeoJSON text. value Geometry object’s “type” member MUST one seven geometry types. GeoJSON Geometry object type “GeometryCollection” member name “coordinates”. value “coordinates” member array. structure elements array determined type geometry. Position: fundamental geometry construct. “coordinates” member Geometry object composed either: one position case Point geometry, array positions case LineString MultiPoint geometry, array LineString linear ring coordinates case Polygon MultiLineString geometry, array Polygon coordinates case MultiPolygon geometry Type Geometries: Point MultiPoint LineString MultiLineString Polygon MultiPolygon GeometryCollection Feature Object: Feature object represents spatially bounded thing. Every Feature object GeoJSON object matter occurs GeoJSON text. Feature object “type” member value “Feature”; member name “geometry”, value geometry member defined JSON null value. Feature object member name “properties”; value properties member object (JSON object JSON null value). FeatureCollection Object: GeoJSON object type “FeatureCollection” FeatureCollection object. FeatureCollection object member name “features”. value “features” JSON array. element array Feature object defined . possible array empty.","code":""},{"path":"https://docs.ropensci.org/geojsonio/articles/geojson_spec.html","id":"crs-coordinate-reference-system","dir":"Articles","previous_headings":"","what":"CRS (Coordinate Reference System)","title":"GeoJSON Specification","text":"See https://tools.ietf.org/html/rfc7946#page-12 information. coordinate reference system GeoJSON coordinates geographic coordinate reference system, using World Geodetic System 1984 (WGS84) datum, longitude latitude units decimal degrees. equivalent coordinate reference system identified Open Geospatial Consortium (OGC) URN urn:ogc:def:crs:OGC::CRS84. OPTIONAL third-position element SHALL height meters WGS 84 reference ellipsoid. absence elevation values, applications sensitive height depth interpret positions local ground sea level. crs member removed. RFC7946 “involved parties prior arrangement, alternative coordinate reference systems can used without risk data misinterpreted.”","code":""},{"path":"https://docs.ropensci.org/geojsonio/articles/geojson_spec.html","id":"bounding-boxes","dir":"Articles","previous_headings":"","what":"Bounding Boxes","title":"GeoJSON Specification","text":"See https://tools.ietf.org/html/rfc7946#page-12 information. include information coordinate range Geometries, Features, FeatureCollections, GeoJSON object may member named bbox. value bbox member must 2*n array n number dimensions represented contained geometries, lowest values axes followed highest values. axes order bbox follows axes order geometries. Example 2D bbox member Feature: Example 2D bbox member FeatureCollection: Example 3D bbox member depth 100 meters FeatureCollection:","code":"{   \"type\": \"Feature\",   \"bbox\": [-10.0, -10.0, 10.0, 10.0],   \"geometry\": {     \"type\": \"Polygon\",     \"coordinates\": [[       [-10.0, -10.0], [10.0, -10.0], [10.0, 10.0], [-10.0, -10.0]     ]]   }   ... } {   \"type\": \"FeatureCollection\",   \"bbox\": [100.0, 0.0, 105.0, 1.0],   \"features\": [     ...   ] } {   \"type\": \"FeatureCollection\",   \"bbox\": [100.0, 0.0, -100.0, 105.0, 1.0, 0.0],   \"features\": [     ...   ] }"},{"path":"https://docs.ropensci.org/geojsonio/articles/geojson_spec.html","id":"coordinate-precision","dir":"Articles","previous_headings":"","what":"Coordinate Precision","title":"GeoJSON Specification","text":"See https://tools.ietf.org/html/rfc7946#page-18 information. size GeoJSON text bytes major interoperability consideration, precision coordinate values large impact size texts. GeoJSON text containing many detailed Polygons can inflated almost factor two increasing coordinate precision 6 15 decimal places. geographic coordinates units degrees, 6 decimal places (default common , e.g., sprintf) amounts 10 centimeters, precision well within current GPS systems. Implementations consider cost using greater precision necessary.","code":""},{"path":"https://docs.ropensci.org/geojsonio/articles/geojsonio.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"geojsonio vignette","text":"Install rgdal - case can’t get installed binary , ’s works Mac (change version rgdal GDAL ). Stable version CRAN Development version GitHub","code":"install.packages(\"http://cran.r-project.org/src/contrib/rgdal_1.1-3.tar.gz\", repos = NULL, type=\"source\", configure.args = \"--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.11/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib\") install.packages(\"geojsonio\") remotes::install_github(\"ropensci/geojsonio\") library(\"geojsonio\")"},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/articles/geojsonio.html","id":"convert-various-formats-to-geojson","dir":"Articles","previous_headings":"GeoJSON","what":"Convert various formats to geojson","title":"geojsonio vignette","text":"numeric vector length 2 json list data.frame json list SpatialPolygons class json list SpatialPoints class json list","code":"geojson_json(c(32.45, -99.74)) #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  1  #>   features (1st 5):  Point geojson_list(c(32.45, -99.74)) #> $type #> [1] \"FeatureCollection\" #>  #> $features #> $features[[1]] #> $features[[1]]$type #> [1] \"Feature\" #>  #> $features[[1]]$geometry #> $features[[1]]$geometry$type ... library('maps') data(us.cities) geojson_json(us.cities[1:2, ], lat = 'lat', lon = 'long') #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  2  #>   features (1st 5):  Point, Point geojson_list(us.cities[1:2, ], lat = 'lat', lon = 'long') #> $type #> [1] \"FeatureCollection\" #>  #> $features #> $features[[1]] #> $features[[1]]$type #> [1] \"Feature\" #>  #> $features[[1]]$geometry #> $features[[1]]$geometry$type ... library('sp') poly1 <- Polygons(list(Polygon(cbind(c(-100,-90,-85,-100),   c(40,50,45,40)))), \"1\") poly2 <- Polygons(list(Polygon(cbind(c(-90,-80,-75,-90),   c(30,40,35,30)))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) geojson_json(sp_poly) #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  2  #>   features (1st 5):  Polygon, Polygon geojson_list(sp_poly) #> $type #> [1] \"FeatureCollection\" #>  #> $name #> [1] \"filebbf679f97e3\" #>  #> $features #> $features[[1]] #> $features[[1]]$type #> [1] \"Feature\" ... x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPoints(cbind(x, y)) geojson_json(s) #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  5  #>   features (1st 5):  Point, Point, Point, Point, Point geojson_list(s) #> $type #> [1] \"FeatureCollection\" #>  #> $name #> [1] \"filebbf7faa70aa\" #>  #> $features #> $features[[1]] #> $features[[1]]$type #> [1] \"Feature\" ..."},{"path":"https://docs.ropensci.org/geojsonio/articles/geojsonio.html","id":"write-geojson","dir":"Articles","previous_headings":"GeoJSON","what":"Write geojson","title":"geojsonio vignette","text":"","code":"library('maps') data(us.cities) geojson_write(us.cities[1:2, ], lat = 'lat', lon = 'long') #> <geojson-file> #>   Path:       myfile.geojson #>   From class: data.frame"},{"path":"https://docs.ropensci.org/geojsonio/articles/geojsonio.html","id":"read-geojson","dir":"Articles","previous_headings":"GeoJSON","what":"Read geojson","title":"geojsonio vignette","text":"","code":"library(\"sp\") file <- system.file(\"examples\", \"california.geojson\", package = \"geojsonio\") out <- geojson_read(file, what = \"sp\") plot(out)"},{"path":"https://docs.ropensci.org/geojsonio/articles/geojsonio.html","id":"topojson","dir":"Articles","previous_headings":"","what":"Topojson","title":"geojsonio vignette","text":"JSON list Read file Read URL use .location() first","code":"topojson_json(c(-99.74,32.45)) #> {\"type\":\"Topology\",\"objects\":{\"foo\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Point\",\"coordinates\":[-99.74,32.45]}]}},\"arcs\":[],\"bbox\":[-99.74,32.45,-99.74,32.45]} library(sp) x <- c(1,2,3,4,5) y <- c(3,2,5,1,4) s <- SpatialPoints(cbind(x,y)) topojson_list(s) #> $type #> [1] \"Topology\" #>  #> $objects #> $objects$foo #> $objects$foo$type #> [1] \"GeometryCollection\" #>  #> $objects$foo$geometries #> $objects$foo$geometries[[1]] #> $objects$foo$geometries[[1]]$type #> [1] \"Point\" #>  #> $objects$foo$geometries[[1]]$coordinates #> [1] 1 3 #>  #> $objects$foo$geometries[[1]]$properties #> $objects$foo$geometries[[1]]$properties$dat #> [1] 1 #>  ... file <- system.file(\"examples\", \"us_states.topojson\", package = \"geojsonio\") out <- topojson_read(file) summary(out) #>       id                    geometry  #>  Length:51          MULTIPOLYGON:51   #>  Class :character   epsg:NA     : 0   #>  Mode  :character url <- \"https://raw.githubusercontent.com/shawnbot/d3-cartogram/master/data/us-states.topojson\" out <- topojson_read(url) (loc <- as.location(file)) #> <location>  #>    Type:  file  #>    Location:  /usr/local/lib/R/site-library/geojsonio/examples/us_states.topojson out <- topojson_read(loc)"},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"from-a-file","dir":"Articles","previous_headings":"Mapping with leaflet > With geojsonio::map_leaf()","what":"From a file","title":"maps with geojsonio","text":"","code":"file <- \"myfile.geojson\" geojson_write(us_cities[1:20, ], lat='lat', lon='long', file = file) map_leaf(as.location(file))"},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"from-a-spatialgriddataframe","dir":"Articles","previous_headings":"Mapping with leaflet > With geojsonio::map_leaf()","what":"From a SpatialGridDataFrame","title":"maps with geojsonio","text":"","code":"sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) map_leaf(sgdf)"},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"example-1-map-of-california","dir":"Articles","previous_headings":"Mapping with leaflet > DIY","what":"Example 1: Map of California","title":"maps with geojsonio","text":"","code":"library(\"leaflet\") file <- system.file(\"examples\", \"california.geojson\", package = \"geojsonio\") out <- as.json(geojson_read(file)) leaflet() %>%    addProviderTiles(\"Stamen.Toner\") %>%    setView(lng = -119, lat = 37, zoom = 6) %>%   addGeoJSON(out)"},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"example-2-map-of-two-polygons","dir":"Articles","previous_headings":"Mapping with leaflet > DIY","what":"Example 2: Map of two polygons","title":"maps with geojsonio","text":"","code":"library('sp') poly1 <- Polygons(list(Polygon(cbind(c(-100,-90,-85,-100),     c(40,50,45,40)))), \"1\") poly2 <- Polygons(list(Polygon(cbind(c(-90,-80,-75,-90),     c(30,40,35,30)))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) json <- geojson_json(sp_poly)  leaflet() %>%    addProviderTiles(\"Stamen.Toner\") %>%    setView(lng = -90, lat = 41, zoom = 4) %>%   addGeoJSON(json)"},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"data-frame","dir":"Articles","previous_headings":"Mapping with GitHub gists","what":"data.frame","title":"maps with geojsonio","text":"Also, can data.frames polygons, lists, matrices, vectors, json strings","code":"map_gist(us_cities)"},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"spatialpoints-class","dir":"Articles","previous_headings":"Mapping with GitHub gists","what":"SpatialPoints class","title":"maps with geojsonio","text":"","code":"library(\"sp\") x <- c(1,2,3,4,5) y <- c(3,2,5,1,4) s <- SpatialPoints(cbind(x,y)) map_gist(s)"},{"path":"https://docs.ropensci.org/geojsonio/articles/maps.html","id":"spatialpixelsdataframe-class","dir":"Articles","previous_headings":"Mapping with GitHub gists","what":"SpatialPixelsDataFrame class","title":"maps with geojsonio","text":"Many spatial classes supported","code":"library(\"sp\") pixelsdf <- suppressWarnings(  SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities) ) map_gist(pixelsdf)"},{"path":"https://docs.ropensci.org/geojsonio/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Author. Andy Teucher. Author. Michael Mahoney. Author, maintainer.","code":""},{"path":"https://docs.ropensci.org/geojsonio/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S, Teucher , Mahoney M (2024). geojsonio: Convert Data 'GeoJSON' 'TopoJSON'. R package version 0.11.3.9000, https://docs.ropensci.org/geojsonio/, https://github.com/ropensci/geojsonio.","code":"@Manual{,   title = {geojsonio: Convert Data from and to 'GeoJSON' or 'TopoJSON'},   author = {Scott Chamberlain and Andy Teucher and Michael Mahoney},   year = {2024},   note = {R package version 0.11.3.9000, https://docs.ropensci.org/geojsonio/},   url = {https://github.com/ropensci/geojsonio}, }"},{"path":"https://docs.ropensci.org/geojsonio/index.html","id":"geojsonio","dir":"","previous_headings":"","what":"Convert Data from and to GeoJSON or TopoJSON","title":"Convert Data from and to GeoJSON or TopoJSON","text":"Convert various data formats GeoJSON TopoJSON package utility convert geographic data GeoJSON TopoJSON formats. Nothing else. hope one job well, handle reasonable use cases. Functions package organized first around ’re working want get, GeoJSON TopoJSON, convert read various formats: geojson_list()/topojson_list() - convert GeoJSON/TopoJSON R list format geojson_json()/topojson_json() - convert GeoJSON/TopoJSON JSON geojson_sp() - convert output geojson_list() geojson_json() sp spatial objects geojson_sf() - convert output geojson_list() geojson_json() sf objects geojson_read()/topojson_read() - read GeoJSON/TopoJSON file file path URL geojson_write()/topojson_write() - write GeoJSON/TopoJSON file locally functions methods various objects/classes, including numeric, data.frame, list, SpatialPolygons, SpatialLines, SpatialPoints, etc. Additional functions: map_gist() - push GeoJSON topojson file GitHub gist (renders interactive map) map_leaf() - create local interactive map using leaflet package","code":""},{"path":"https://docs.ropensci.org/geojsonio/index.html","id":"json-info","dir":"","previous_headings":"","what":"*json Info","title":"Convert Data from and to GeoJSON or TopoJSON","text":"GeoJSON - spec GeoJSON lint TopoJSON - spec","code":""},{"path":"https://docs.ropensci.org/geojsonio/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Convert Data from and to GeoJSON or TopoJSON","text":"Mac Install GDAL command line first, e.g., using homebrew Linux Get deps first Install geojsonio Stable version CRAN development version GitHub","code":"brew install gdal remotes::system_requirements(\"ubuntu\", \"20.04\", package = \"geojsonio\") #>  [1] \"apt-get install -y make\"                 #>  [2] \"apt-get install -y libssl-dev\"           #>  [3] \"apt-get install -y libgdal-dev\"          #>  [4] \"apt-get install -y gdal-bin\"             #>  [5] \"apt-get install -y libgeos-dev\"          #>  [6] \"apt-get install -y libproj-dev\"          #>  [7] \"apt-get install -y libsqlite3-dev\"       #>  [8] \"apt-get install -y libudunits2-dev\"      #>  [9] \"apt-get install -y libprotobuf-dev\"      #> [10] \"apt-get install -y protobuf-compiler\"    #> [11] \"apt-get install -y libcurl4-openssl-dev\" #> [12] \"apt-get install -y libnode-dev\"          #> [13] \"apt-get install -y libjq-dev\" install.packages(\"geojsonio\") install.packages(\"remotes\") remotes::install_github(\"ropensci/geojsonio\") library(\"geojsonio\")"},{"path":"https://docs.ropensci.org/geojsonio/index.html","id":"whats-the-future-of-geojsonio","dir":"","previous_headings":"","what":"What’s the future of geojsonio?","title":"Convert Data from and to GeoJSON or TopoJSON","text":"geojsonio stable expect stay CRAN. package dependency number packages downloaded tens thousands times per month; moving forward priority package make sure packages users able keep using package. said, anticipate much development; likely many major new features added new interfaces developed. ’ll avoid making breaking changes much possible. find bugs geojsonio want contribute new features: please feel free submit PRs! long existing interface stays intact, ’d happy make package useful . said, don’t anticipate particularly responsive feature requests (without matching PR) moving forward.","code":""},{"path":"https://docs.ropensci.org/geojsonio/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Convert Data from and to GeoJSON or TopoJSON","text":"Please report issues bugs. License: MIT Get citation information geojsonio R citation(package = 'geojsonio') Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/as.json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert inputs to JSON — as.json","title":"Convert inputs to JSON — as.json","text":"Convert inputs JSON","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/as.json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert inputs to JSON — as.json","text":"","code":"as.json(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/as.json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert inputs to JSON — as.json","text":"x Input ... args passed jsonlite::toJSON()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/as.json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert inputs to JSON — as.json","text":"output topojson_list() given function use special internal fxn astjl() parse object - see fxn let us know problems run ","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/as.json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert inputs to JSON — as.json","text":"","code":"if (FALSE) { (res <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\")) as.json(res) as.json(res, pretty = TRUE)  vec <- c(-99.74, 32.45) as.json(geojson_list(vec)) as.json(geojson_list(vec), pretty = TRUE) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/as.location.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a path or URL to a location object. — as.location","title":"Convert a path or URL to a location object. — as.location","text":"Convert path URL location object.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/as.location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a path or URL to a location object. — as.location","text":"","code":"as.location(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/as.location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a path or URL to a location object. — as.location","text":"x Input. ... Ignored.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/as.location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a path or URL to a location object. — as.location","text":"","code":"if (FALSE) { # A file file <- system.file(\"examples\", \"zillow_or.geojson\", package = \"geojsonio\") as.location(file)  # A URL url <- \"https://raw.githubusercontent.com/glynnbird/usstatesgeojson/master/california.geojson\" as.location(url) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounds for a list or geo_list — bounds","title":"Get bounds for a list or geo_list — bounds","text":"Get bounds list geo_list","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounds for a list or geo_list — bounds","text":"","code":"bounds(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounds for a list or geo_list — bounds","text":"x object class list geo_list ... Ignored","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounds for a list or geo_list — bounds","text":"vector form min longitude, min latitude, max longitude, max latitude","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bounds for a list or geo_list — bounds","text":"","code":"# numeric vec <- c(-99.74, 32.45) x <- geojson_list(vec) bounds(x) #> [1] -99.74  32.45 -99.74  32.45  # list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) x <- geojson_list(mylist) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively bounds(x) #> [1] 120  30 130  30  # data.frame x <- geojson_list(states[1:20, ]) #> Assuming 'long' and 'lat' are longitude and latitude, respectively bounds(x) #> [1] -88.01778  30.24071 -87.46201  30.38968"},{"path":"https://docs.ropensci.org/geojsonio/reference/canada_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the same data set from the maps library, named differently — canada_cities","title":"This is the same data set from the maps library, named differently — canada_cities","text":"database Canadian cities population greater 1,000. Also included province capitals population size.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/canada_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"This is the same data set from the maps library, named differently — canada_cities","text":"list 6 components, namely \"name\", \"country.etc\", \"pop\", \"lat\", \"long\", \"capital\", containing city name, province abbreviation, approximate population (January 2006), latitude, longitude capital status indication (0 non-capital, 1 capital, 2 provincial","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get centroid for a geo_list — centroid","title":"Get centroid for a geo_list — centroid","text":"Get centroid geo_list","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get centroid for a geo_list — centroid","text":"","code":"centroid(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get centroid for a geo_list — centroid","text":"x object class geo_list ... Ignored","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get centroid for a geo_list — centroid","text":"vector form longitude, latitude","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/centroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get centroid for a geo_list — centroid","text":"","code":"# numeric vec <- c(-99.74, 32.45) x <- geojson_list(vec) centroid(x) #> [1] -99.74  32.45  # list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) x <- geojson_list(mylist) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively centroid(x) #> [1] 125  30  # data.frame x <- geojson_list(states[1:20, ]) #> Assuming 'long' and 'lat' are longitude and latitude, respectively centroid(x) #> [1] -87.76539  30.29342"},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"can use web interface called Ogre, conversions locally using sf package.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"","code":"file_to_geojson(   input,   method = \"web\",   output = \".\",   parse = FALSE,   encoding = \"CP1250\",   verbose = FALSE,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"input file uploaded, path file machine. method (character) One \"web\" (default) \"local\". Matches partial strings. parameter determines data read. \"web\" means use Ogre web service, \"local\" means use sf. See Details fore . output Destination output geojson file. Defaults current working directory, gives random alphanumeric file name parse (logical) parse geojson data.frame like structures possible. Default: FALSE encoding (character) encoding passed sf::st_read(). Default: CP1250 verbose (logical) Printing sf::st_read() progress. Default: FALSE ... Additional parameters passed st_read","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"path geojson file","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"method-parameter","dir":"Reference","previous_headings":"","what":"Method parameter","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"web option uses Ogre web API. Ogre currently output size limit 15MB. See http://ogre.adc4gis.com/ info Ogre web API. local option uses function st_write package rgdal.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"ogre","dir":"Reference","previous_headings":"","what":"Ogre","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"Note Shapefiles, GML, MapInfo, VRT, need send zip files Ogre. file types (.bna, .csv, .dgn, .dxf, .gxt, .txt, .json, .geojson, .rss, .georss, .xml, .gmt, .kml, .kmz) send actual file file extension.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"linting-geojson","dir":"Reference","previous_headings":"","what":"Linting GeoJSON","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"trouble rendering GeoJSON files, ensure valid GeoJSON file running package geojsonlint, variety different GeoJSON linters.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"file-size","dir":"Reference","previous_headings":"","what":"File size","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"using method=\"web\", aware file sizes. https://ogre.adc4gis.com use option document file size large, get error message like \"maximum file length exceeded\" happens. method=\"local\" sensitive file sizes.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/file_to_geojson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert spatial data files to GeoJSON from various formats. — file_to_geojson","text":"","code":"if (FALSE) { file <- system.file(\"examples\", \"norway_maple.kml\", package = \"geojsonio\")  # KML type file - using the web method file_to_geojson(input = file, method = \"web\", output = \"kml_web\") ## read into memory file_to_geojson(input = file, method = \"web\", output = \":memory:\") file_to_geojson(input = file, method = \"local\", output = \":memory:\")  # KML type file - using the local method file_to_geojson(input = file, method = \"local\", output = \"kml_local\")  # Shp type file - using the web method - input is a zipped shp bundle file <- system.file(\"examples\", \"bison.zip\", package = \"geojsonio\") file_to_geojson(file, method = \"web\", output = \"shp_web\")  # Shp type file - using the local method - input is the actual .shp file file <- system.file(\"examples\", \"bison.zip\", package = \"geojsonio\") dir <- tempdir() unzip(file, exdir = dir) list.files(dir) shpfile <- file.path(dir, \"bison-Bison_bison-20130704-120856.shp\") file_to_geojson(shpfile, method = \"local\", output = \"shp_local\")  # geojson with .json extension ## this doesn't work anymore, hmmm # x <- gsub(\"\\n\", \"\", paste0('https://gist.githubusercontent.com/hunterowens/ # 25ea24e198c80c9fbcc7/raw/7fd3efda9009f902b5a991a506cea52db19ba143/ # wards2014.json', collapse = \"\")) # res <- file_to_geojson(x) # jsonlite::fromJSON(res) # res <- file_to_geojson(x, method = \"local\") # jsonlite::fromJSON(res) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geo2topo.html","id":null,"dir":"Reference","previous_headings":"","what":"GeoJSON to TopoJSON and back — geo2topo","title":"GeoJSON to TopoJSON and back — geo2topo","text":"GeoJSON TopoJSON back","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geo2topo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeoJSON to TopoJSON and back — geo2topo","text":"","code":"geo2topo(x, object_name = \"foo\", quantization = 0, ...)  topo2geo(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/geo2topo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeoJSON to TopoJSON and back — geo2topo","text":"x GeoJSON TopoJSON character string, json, file path, url object_name (character) name give TopoJSON object created. Default: \"foo\" quantization (numeric) quantization parameter, use quantize geometry prior computing topology. Typical values powers ten (1e4, 1e5, ...), default 0 perform quantization. information quantization, see Mike Bostock https://stackoverflow.com/questions/18900022/topojson-quantization-vs-simplification/18921214#18921214 ... geo2topo args passed  jsonlite::fromJSON(), topo2geo args passed  sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geo2topo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeoJSON to TopoJSON and back — geo2topo","text":"object class json, either GeoJSON TopoJSON","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/geo2topo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GeoJSON to TopoJSON and back — geo2topo","text":"","code":"# geojson to topojson x <- '{\"type\": \"LineString\", \"coordinates\": [ [100.0, 0.0], [101.0, 1.0] ]}' z <- geo2topo(x) jsonlite::prettify(z) #> { #>     \"type\": \"Topology\", #>     \"objects\": { #>         \"foo\": { #>             \"type\": \"LineString\", #>             \"arcs\": [ #>                 0 #>             ] #>         } #>     }, #>     \"arcs\": [ #>         [ #>             [ #>                 100, #>                 0 #>             ], #>             [ #>                 101, #>                 1 #>             ] #>         ] #>     ], #>     \"bbox\": [ #>         100, #>         0, #>         101, #>         1 #>     ] #> } #>   if (FALSE) { library(leaflet) leaflet() %>%   addProviderTiles(provider = \"Stamen.Terrain\") %>%   addTopoJSON(z) }  # geojson to topojson as a list x <- list(   '{\"type\": \"LineString\", \"coordinates\": [ [100, 0], [101, 1] ]}',   '{\"type\": \"LineString\", \"coordinates\": [ [110, 0], [110, 1] ]}',   '{\"type\": \"LineString\", \"coordinates\": [ [120, 0], [121, 1] ]}' ) geo2topo(x) #> [[1]] #> {\"type\":\"Topology\",\"objects\":{\"foo\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[100,0],[101,1]]],\"bbox\":[100,0,101,1]}  #>  #> [[2]] #> {\"type\":\"Topology\",\"objects\":{\"foo\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[110,0],[110,1]]],\"bbox\":[110,0,110,1]}  #>  #> [[3]] #> {\"type\":\"Topology\",\"objects\":{\"foo\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[120,0],[121,1]]],\"bbox\":[120,0,121,1]}  #>   # change the object name created x <- '{\"type\": \"LineString\", \"coordinates\": [ [100.0, 0.0], [101.0, 1.0] ]}' geo2topo(x, object_name = \"HelloWorld\") #> {\"type\":\"Topology\",\"objects\":{\"HelloWorld\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[100,0],[101,1]]],\"bbox\":[100,0,101,1]}  geo2topo(x, object_name = \"4\") #> {\"type\":\"Topology\",\"objects\":{\"4\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[100,0],[101,1]]],\"bbox\":[100,0,101,1]}   x <- list(   '{\"type\": \"LineString\", \"coordinates\": [ [100, 0], [101, 1] ]}',   '{\"type\": \"LineString\", \"coordinates\": [ [110, 0], [110, 1] ]}',   '{\"type\": \"LineString\", \"coordinates\": [ [120, 0], [121, 1] ]}' ) geo2topo(x, \"HelloWorld\") #> [[1]] #> {\"type\":\"Topology\",\"objects\":{\"HelloWorld\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[100,0],[101,1]]],\"bbox\":[100,0,101,1]}  #>  #> [[2]] #> {\"type\":\"Topology\",\"objects\":{\"HelloWorld\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[110,0],[110,1]]],\"bbox\":[110,0,110,1]}  #>  #> [[3]] #> {\"type\":\"Topology\",\"objects\":{\"HelloWorld\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[120,0],[121,1]]],\"bbox\":[120,0,121,1]}  #>  geo2topo(x, c(\"A\", \"B\", \"C\")) #> [[1]] #> {\"type\":\"Topology\",\"objects\":{\"A\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[100,0],[101,1]]],\"bbox\":[100,0,101,1]}  #>  #> [[2]] #> {\"type\":\"Topology\",\"objects\":{\"B\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[110,0],[110,1]]],\"bbox\":[110,0,110,1]}  #>  #> [[3]] #> {\"type\":\"Topology\",\"objects\":{\"C\":{\"type\":\"LineString\",\"arcs\":[0]}},\"arcs\":[[[120,0],[121,1]]],\"bbox\":[120,0,121,1]}  #>    # topojson to geojson w <- topo2geo(z) #> Loading required namespace: stringi jsonlite::prettify(w) #> { #>     \"type\": \"FeatureCollection\", #>     \"features\": [ #>         { #>             \"type\": \"Feature\", #>             \"properties\": { #>                 \"id\": \"foo\" #>             }, #>             \"geometry\": { #>                 \"type\": \"LineString\", #>                 \"coordinates\": [ #>                     [ #>                         100, #>                         0 #>                     ], #>                     [ #>                         101, #>                         1 #>                     ] #>                 ] #>             } #>         } #>     ] #> } #>    ## larger examples file <- system.file(\"examples\", \"us_states.topojson\", package = \"geojsonio\") topo2geo(file) #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  51  #>   features (1st 5):  MultiPolygon, MultiPolygon, MultiPolygon, MultiPolygon, MultiPolygon"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson-add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add together geo_list or json objects — geojson-add","title":"Add together geo_list or json objects — geojson-add","text":"Add together geo_list json objects","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson-add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add together geo_list or json objects — geojson-add","text":"","code":"# S3 method for geo_list +(x1, x2)  # S3 method for json +(x1, x2)"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson-add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add together geo_list or json objects — geojson-add","text":"x1 object class geo_list json x2 component add x1, class geo_list json","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson-add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add together geo_list or json objects — geojson-add","text":"first object object class geo_list, can add another object class geo_list class json, result  geo_list object. first object object class json, can add another object class json class geo_list, result json object.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson-add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add together geo_list or json objects — geojson-add","text":"","code":"if (FALSE) { # geo_list + geo_list ## Note: geo_list is the output type from geojson_list, it's just a list with ## a class attached so we know it's geojson :) vec <- c(-99.74, 32.45) a <- geojson_list(vec) vecs <- list(   c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0),   c(100.0, 1.0), c(100.0, 0.0) ) b <- geojson_list(vecs, geometry = \"polygon\") a + b  # json + json c <- geojson_json(c(-99.74, 32.45)) vecs <- list(   c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0),   c(100.0, 1.0), c(100.0, 0.0) ) d <- geojson_json(vecs, geometry = \"polygon\") c + d (c + d) %>% pretty() }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":null,"dir":"Reference","previous_headings":"","what":"Atomize — geojson_atomize","title":"Atomize — geojson_atomize","text":"Atomize","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atomize — geojson_atomize","text":"","code":"geojson_atomize(x, combine = TRUE)"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Atomize — geojson_atomize","text":"x (geo_list/geo_json/json/character) input object, either geo_json, geo_list, json, character class. character, must valid JSON combine (logical) applies geo_json/json type inputs. combine valid JSON objects single valid JSON object. Default: TRUE","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Atomize — geojson_atomize","text":"class input object, modified","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Atomize — geojson_atomize","text":"FeatureCollection split many Feature's, GeometryCollection split many geometries Internally use jqr JSON parsing","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_atomize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atomize — geojson_atomize","text":"","code":"################# lists # featurecollection -> features mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) (x <- geojson_list(mylist)) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively #> $type #> [1] \"FeatureCollection\" #>  #> $features #> $features[[1]] #> $features[[1]]$type #> [1] \"Feature\" #>  #> $features[[1]]$geometry #> $features[[1]]$geometry$type #> [1] \"Point\" #>  #> $features[[1]]$geometry$coordinates #> [1] 120  30 #>  #>  #> $features[[1]]$properties #> $features[[1]]$properties$marker #> [1] \"red\" #>  #>  #>  #> $features[[2]] #> $features[[2]]$type #> [1] \"Feature\" #>  #> $features[[2]]$geometry #> $features[[2]]$geometry$type #> [1] \"Point\" #>  #> $features[[2]]$geometry$coordinates #> [1] 130  30 #>  #>  #> $features[[2]]$properties #> $features[[2]]$properties$marker #> [1] \"blue\" #>  #>  #>  #>  #> attr(,\"class\") #> [1] \"geo_list\" #> attr(,\"from\") #> [1] \"list\" geojson_atomize(x) #> [[1]] #> [[1]]$type #> [1] \"Feature\" #>  #> [[1]]$geometry #> [[1]]$geometry$type #> [1] \"Point\" #>  #> [[1]]$geometry$coordinates #> [1] 120  30 #>  #>  #> [[1]]$properties #> [[1]]$properties$marker #> [1] \"red\" #>  #>  #>  #> [[2]] #> [[2]]$type #> [1] \"Feature\" #>  #> [[2]]$geometry #> [[2]]$geometry$type #> [1] \"Point\" #>  #> [[2]]$geometry$coordinates #> [1] 130  30 #>  #>  #> [[2]]$properties #> [[2]]$properties$marker #> [1] \"blue\" #>  #>  #>   # geometrycollection -> geometries mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) (x <- geojson_list(mylist, type = \"GeometryCollection\")) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively #> $type #> [1] \"GeometryCollection\" #>  #> $geometries #> $geometries[[1]] #> $geometries[[1]]$type #> [1] \"Point\" #>  #> $geometries[[1]]$coordinates #> [1] 120  30 #>  #>  #> $geometries[[2]] #> $geometries[[2]]$type #> [1] \"Point\" #>  #> $geometries[[2]]$coordinates #> [1] 130  30 #>  #>  #>  #> attr(,\"class\") #> [1] \"geo_list\" #> attr(,\"from\") #> [1] \"list\" geojson_atomize(x) #> [[1]] #> [[1]]$type #> [1] \"Point\" #>  #> [[1]]$coordinates #> [1] 120  30 #>  #>  #> [[2]] #> [[2]]$type #> [1] \"Point\" #>  #> [[2]]$coordinates #> [1] 130  30 #>  #>   # sf class library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0)) poly <- rbind(c(1, 1), c(1, 2), c(2, 2), c(1, 1)) poly_sfg <- st_polygon(list(p1)) (x <- geojson_list(poly_sfg)) #> $type #> [1] \"Polygon\" #>  #> $coordinates #> $coordinates[[1]] #>      [,1] [,2] #> [1,]    0    0 #> [2,]    1    0 #> [3,]    3    2 #> [4,]    2    4 #> [5,]    1    4 #> [6,]    0    0 #>  #>  #> attr(,\"class\") #> [1] \"geo_list\" #> attr(,\"from\") #> [1] \"sfg\" geojson_atomize(x) #> $type #> [1] \"Feature\" #>  #> $geometry #> $geometry$type #> [1] \"Polygon\" #>  #> $geometry$coordinates #> $geometry$coordinates[[1]] #>      [,1] [,2] #> [1,]    0    0 #> [2,]    1    0 #> [3,]    3    2 #> [4,]    2    4 #> [5,]    1    4 #> [6,]    0    0 #>  #>  #>   ################# json # featurecollection -> features mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) (x <- geojson_json(mylist)) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  2  #>   features (1st 5):  Point, Point  geojson_atomize(x) #> [{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[120,30]},\"properties\":{\"marker\":\"red\"}}, {\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[130,30]},\"properties\":{\"marker\":\"blue\"}}]  geojson_atomize(x, FALSE) #> {\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[120,30]},\"properties\":{\"marker\":\"red\"}} {\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[130,30]},\"properties\":{\"marker\":\"blue\"}}   # geometrycollection -> geometries mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) (x <- geojson_json(mylist, type = \"GeometryCollection\")) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively #> <GeometryCollection>  #>   geometries (n): 2  #>   geometries (geometry / length): #>     Point / 2 #>     Point / 2  geojson_atomize(x) #> [{\"type\":\"Point\",\"coordinates\":[120,30]}, {\"type\":\"Point\",\"coordinates\":[130,30]}]  geojson_atomize(x, FALSE) #> {\"type\":\"Point\",\"coordinates\":[120,30]} {\"type\":\"Point\",\"coordinates\":[130,30]}   # sf class library(sf) nc <- st_read(system.file(\"shape/nc.shp\", package = \"sf\"), quiet = TRUE) (x <- geojson_json(nc)) #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  100  #>   features (1st 5):  MultiPolygon, MultiPolygon, MultiPolygon, MultiPolygon, MultiPolygon  geojson_atomize(x) #> [{\"type\":\"Feature\",\"properties\":{\"AREA\":0.114,\"PERIMETER\":1.442,\"CNTY_\":1825,\"CNTY_ID\":1825,\"NAME\":\"Ashe\",\"FIPS\":\"37009\",\"FIPSNO\":37009,\"CRESS_ID\":5,\"BIR74\":1091,\"SID74\":1,\"NWBIR74\":10,\"BIR79\":1364,\"SID79\":0,\"NWBIR79\":19},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.4727554,36.2343559],[-81.5408401,36.2725067],[-81.5619812,36.2735939],[-81.6330643,36.3406868],[-81.7410736,36.3917847],[-81.6982803,36.4717789],[-81.7027969,36.5193405],[-81.6699982,36.5896492],[-81.3452988,36.5728645],[-81.3475418,36.5379143],[-81.3247757,36.5136795],[-81.313324,36.4806976],[-81.2662354,36.4372063],[-81.2628403,36.4050407],[-81.2406921,36.3794174],[-81.2398911,36.3653641],[-81.2642441,36.3524132],[-81.3289948,36.3635025],[-81.3613739,36.3531609],[-81.3656921,36.3390503],[-81.3541336,36.2997169],[-81.3674545,36.278698],[-81.4063873,36.2850533],[-81.4123306,36.267292],[-81.4310379,36.2607193],[-81.4528885,36.2395859],[-81.4727554,36.2343559]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.061,\"PERIMETER\":1.231,\"CNTY_\":1827,\"CNTY_ID\":1827,\"NAME\":\"Alleghany\",\"FIPS\":\"37005\",\"FIPSNO\":37005,\"CRESS_ID\":3,\"BIR74\":487,\"SID74\":0,\"NWBIR74\":10,\"BIR79\":542,\"SID79\":3,\"NWBIR79\":12},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.2398911,36.3653641],[-81.2406921,36.3794174],[-81.2628403,36.4050407],[-81.2662354,36.4372063],[-81.313324,36.4806976],[-81.3247757,36.5136795],[-81.3475418,36.5379143],[-81.3452988,36.5728645],[-80.9034424,36.5652122],[-80.933548,36.4983139],[-80.9657745,36.4672203],[-80.9496689,36.4147339],[-80.9563904,36.4037971],[-80.977951,36.3913765],[-80.9828415,36.3718338],[-81.0027771,36.3666801],[-81.0246429,36.3778343],[-81.0428009,36.4103355],[-81.0842514,36.4299202],[-81.0985641,36.4311523],[-81.1133118,36.4228516],[-81.1293793,36.4263306],[-81.1383972,36.4176254],[-81.1533661,36.4247398],[-81.1766739,36.4154434],[-81.2398911,36.3653641]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.63,\"CNTY_\":1828,\"CNTY_ID\":1828,\"NAME\":\"Surry\",\"FIPS\":\"37171\",\"FIPSNO\":37171,\"CRESS_ID\":86,\"BIR74\":3188,\"SID74\":5,\"NWBIR74\":208,\"BIR79\":3616,\"SID79\":6,\"NWBIR79\":260},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4563446,36.2425575],[-80.476387,36.2547264],[-80.5368805,36.2567368],[-80.5450134,36.2766571],[-80.5541534,36.2784309],[-80.5905991,36.2682762],[-80.6243134,36.273098],[-80.6674423,36.2461014],[-80.6966553,36.2590904],[-80.7240372,36.2584724],[-80.7343674,36.2647591],[-80.7525635,36.258297],[-80.7662964,36.261837],[-80.7826996,36.2485771],[-80.874382,36.2338829],[-80.8708649,36.3246231],[-80.8889236,36.3544273],[-80.9245682,36.3727531],[-80.9563904,36.4037971],[-80.9496689,36.4147339],[-80.9657745,36.4672203],[-80.933548,36.4983139],[-80.9034424,36.5652122],[-80.8381577,36.5634384],[-80.6110535,36.5572968],[-80.4353104,36.5510445],[-80.4530106,36.2570877],[-80.4563446,36.2425575]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.07,\"PERIMETER\":2.968,\"CNTY_\":1831,\"CNTY_ID\":1831,\"NAME\":\"Currituck\",\"FIPS\":\"37053\",\"FIPSNO\":37053,\"CRESS_ID\":27,\"BIR74\":508,\"SID74\":1,\"NWBIR74\":123,\"BIR79\":830,\"SID79\":2,\"NWBIR79\":145},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.0089722,36.3195953],[-76.0173492,36.3377304],[-76.0328751,36.3359756],[-76.0439529,36.3535919],[-76.0950851,36.3489151],[-76.1609268,36.3918991],[-76.1581497,36.4126892],[-76.1682892,36.4270859],[-76.3302536,36.556057],[-76.1273956,36.5571632],[-76.0459595,36.5569534],[-76.0332108,36.5143738],[-76.0910645,36.5035667],[-75.9760742,36.4362144],[-75.9697647,36.4151192],[-76.0016098,36.4189148],[-75.9512558,36.3654709],[-75.9281235,36.4232445],[-75.9245911,36.3509483],[-75.8000565,36.1128159],[-75.798851,36.0728188],[-75.8551636,36.1056671],[-75.913765,36.2448006],[-75.9575119,36.2594528],[-75.9419327,36.2943382],[-76.0089722,36.3195953]]],[[[-76.0271683,36.5567169],[-75.9986649,36.5566521],[-75.9119186,36.5425301],[-75.9248047,36.4739761],[-75.9772797,36.4780159],[-75.9762878,36.5179253],[-76.0271683,36.5567169]]],[[[-75.9019852,36.5561981],[-75.8781662,36.5558739],[-75.7731552,36.2292557],[-75.7831726,36.225193],[-75.9019852,36.5561981]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.153,\"PERIMETER\":2.206,\"CNTY_\":1832,\"CNTY_ID\":1832,\"NAME\":\"Northampton\",\"FIPS\":\"37131\",\"FIPSNO\":37131,\"CRESS_ID\":66,\"BIR74\":1421,\"SID74\":9,\"NWBIR74\":1066,\"BIR79\":1606,\"SID79\":3,\"NWBIR79\":1197},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.2176666,36.2409821],[-77.2346115,36.2145996],[-77.2986145,36.2115288],[-77.2935104,36.1628609],[-77.3094788,36.1627655],[-77.3349915,36.1828499],[-77.3890305,36.2031021],[-77.378624,36.2400856],[-77.4134674,36.2558174],[-77.4188538,36.2817955],[-77.4541168,36.3197556],[-77.5380783,36.3024597],[-77.5574341,36.3042145],[-77.5719528,36.3144951],[-77.5800781,36.32827],[-77.5596848,36.375946],[-77.5604172,36.4063568],[-77.6359711,36.4405365],[-77.6509933,36.4725876],[-77.6988754,36.4789581],[-77.7494049,36.4735718],[-77.901207,36.5098877],[-77.8988571,36.5529442],[-77.7639313,36.5534401],[-77.3200531,36.5539169],[-77.1773529,36.5562859],[-77.1544189,36.5262527],[-77.0921326,36.5075188],[-77.0753098,36.4835167],[-77.0832748,36.4700966],[-77.127327,36.4707108],[-77.1393204,36.4564781],[-77.1419601,36.4170647],[-77.2176666,36.2409821]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.097,\"PERIMETER\":1.67,\"CNTY_\":1833,\"CNTY_ID\":1833,\"NAME\":\"Hertford\",\"FIPS\":\"37091\",\"FIPSNO\":37091,\"CRESS_ID\":46,\"BIR74\":1452,\"SID74\":7,\"NWBIR74\":954,\"BIR79\":1838,\"SID79\":5,\"NWBIR79\":1237},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.7450638,36.2339172],[-76.98069,36.2302361],[-76.994751,36.2355804],[-77.1300735,36.2334633],[-77.2176666,36.2409821],[-77.1419601,36.4170647],[-77.1393204,36.4564781],[-77.127327,36.4707108],[-77.0832748,36.4700966],[-77.0753098,36.4835167],[-77.0921326,36.5075188],[-77.1544189,36.5262527],[-77.1773529,36.5562859],[-76.9241333,36.5541458],[-76.9084244,36.5042839],[-76.9457703,36.4589615],[-76.9536743,36.4192314],[-76.943512,36.4017296],[-76.9240799,36.3924446],[-76.7413483,36.3151665],[-76.7074966,36.2661324],[-76.7450638,36.2339172]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.062,\"PERIMETER\":1.547,\"CNTY_\":1834,\"CNTY_ID\":1834,\"NAME\":\"Camden\",\"FIPS\":\"37029\",\"FIPSNO\":37029,\"CRESS_ID\":15,\"BIR74\":286,\"SID74\":0,\"NWBIR74\":115,\"BIR79\":350,\"SID79\":2,\"NWBIR79\":139},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.0089722,36.3195953],[-75.9571838,36.1937714],[-75.9813385,36.1697273],[-76.1831665,36.315239],[-76.1934814,36.324852],[-76.2161942,36.3278465],[-76.238533,36.3612289],[-76.2612839,36.3637581],[-76.2741318,36.3814087],[-76.30336,36.3918457],[-76.3213654,36.4096451],[-76.4059677,36.4471588],[-76.4983444,36.5039024],[-76.5635834,36.5552521],[-76.4975586,36.5558128],[-76.3302536,36.556057],[-76.1682892,36.4270859],[-76.1581497,36.4126892],[-76.1609268,36.3918991],[-76.0950851,36.3489151],[-76.0439529,36.3535919],[-76.0328751,36.3359756],[-76.0173492,36.3377304],[-76.0089722,36.3195953]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.284,\"CNTY_\":1835,\"CNTY_ID\":1835,\"NAME\":\"Gates\",\"FIPS\":\"37073\",\"FIPSNO\":37073,\"CRESS_ID\":37,\"BIR74\":420,\"SID74\":0,\"NWBIR74\":254,\"BIR79\":594,\"SID79\":2,\"NWBIR79\":371},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.5625076,36.3405685],[-76.6042404,36.3149834],[-76.6482162,36.3153152],[-76.688736,36.2945175],[-76.7766418,36.3583298],[-76.9240799,36.3924446],[-76.943512,36.4017296],[-76.9536743,36.4192314],[-76.9457703,36.4589615],[-76.9084244,36.5042839],[-76.9241333,36.5541458],[-76.9216309,36.5541573],[-76.5635834,36.5552521],[-76.4983444,36.5039024],[-76.5024643,36.4522858],[-76.46035,36.3738976],[-76.5625076,36.3405685]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.421,\"CNTY_\":1836,\"CNTY_ID\":1836,\"NAME\":\"Warren\",\"FIPS\":\"37185\",\"FIPSNO\":37185,\"CRESS_ID\":93,\"BIR74\":968,\"SID74\":4,\"NWBIR74\":748,\"BIR79\":1190,\"SID79\":2,\"NWBIR79\":844},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.3087616,36.2600403],[-78.2829285,36.2918816],[-78.3212509,36.5455322],[-78.0516663,36.552475],[-77.8988571,36.5529442],[-77.901207,36.5098877],[-77.9169235,36.5006371],[-77.9301376,36.3529854],[-77.9520874,36.2812309],[-78.0062866,36.1959457],[-78.0583496,36.2113228],[-78.1096268,36.2135086],[-78.1347198,36.2365837],[-78.3087616,36.2600403]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.124,\"PERIMETER\":1.428,\"CNTY_\":1837,\"CNTY_ID\":1837,\"NAME\":\"Stokes\",\"FIPS\":\"37169\",\"FIPSNO\":37169,\"CRESS_ID\":85,\"BIR74\":1612,\"SID74\":1,\"NWBIR74\":160,\"BIR79\":2038,\"SID79\":5,\"NWBIR79\":176},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0256729,36.2502327],[-80.4530106,36.2570877],[-80.4353104,36.5510445],[-80.0480957,36.5471344],[-80.0240555,36.5450249],[-80.0256729,36.2502327]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.114,\"PERIMETER\":1.352,\"CNTY_\":1838,\"CNTY_ID\":1838,\"NAME\":\"Caswell\",\"FIPS\":\"37033\",\"FIPSNO\":37033,\"CRESS_ID\":17,\"BIR74\":1035,\"SID74\":2,\"NWBIR74\":550,\"BIR79\":1253,\"SID79\":2,\"NWBIR79\":597},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5305099,36.2461357],[-79.5102997,36.547657],[-79.2170639,36.5497818],[-79.1443253,36.5460587],[-79.1592712,36.2336693],[-79.2584991,36.2356873],[-79.5305099,36.2461357]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.153,\"PERIMETER\":1.616,\"CNTY_\":1839,\"CNTY_ID\":1839,\"NAME\":\"Rockingham\",\"FIPS\":\"37157\",\"FIPSNO\":37157,\"CRESS_ID\":79,\"BIR74\":4449,\"SID74\":16,\"NWBIR74\":1243,\"BIR79\":5386,\"SID79\":5,\"NWBIR79\":1369},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5305099,36.2461357],[-79.5305786,36.2361565],[-80.0256729,36.2502327],[-80.0240555,36.5450249],[-79.7174454,36.5478897],[-79.5102997,36.547657],[-79.5305099,36.2461357]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.663,\"CNTY_\":1840,\"CNTY_ID\":1840,\"NAME\":\"Granville\",\"FIPS\":\"37077\",\"FIPSNO\":37077,\"CRESS_ID\":39,\"BIR74\":1671,\"SID74\":4,\"NWBIR74\":930,\"BIR79\":2074,\"SID79\":4,\"NWBIR79\":1058},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.7491226,36.063591],[-78.788414,36.0621834],[-78.8040543,36.0809402],[-78.8103561,36.1145744],[-78.8068008,36.231575],[-78.7966995,36.5435333],[-78.7373886,36.5460739],[-78.4588089,36.541481],[-78.4637527,36.5238571],[-78.5025024,36.5043907],[-78.5170898,36.461483],[-78.5147171,36.1752243],[-78.4925232,36.1735878],[-78.5458527,36.0680885],[-78.548027,36.0141258],[-78.6955719,36.0666466],[-78.7491226,36.063591]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.109,\"PERIMETER\":1.325,\"CNTY_\":1841,\"CNTY_ID\":1841,\"NAME\":\"Person\",\"FIPS\":\"37145\",\"FIPSNO\":37145,\"CRESS_ID\":73,\"BIR74\":1556,\"SID74\":4,\"NWBIR74\":613,\"BIR79\":1790,\"SID79\":4,\"NWBIR79\":650},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.8068008,36.231575],[-78.9510803,36.2338371],[-79.1592712,36.2336693],[-79.1443253,36.5460587],[-78.7966995,36.5435333],[-78.8068008,36.231575]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.072,\"PERIMETER\":1.085,\"CNTY_\":1842,\"CNTY_ID\":1842,\"NAME\":\"Vance\",\"FIPS\":\"37181\",\"FIPSNO\":37181,\"CRESS_ID\":91,\"BIR74\":2180,\"SID74\":4,\"NWBIR74\":1179,\"BIR79\":2753,\"SID79\":6,\"NWBIR79\":1492},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.4925232,36.1735878],[-78.5147171,36.1752243],[-78.5170898,36.461483],[-78.5025024,36.5043907],[-78.4637527,36.5238571],[-78.4588089,36.541481],[-78.3212509,36.5455322],[-78.2829285,36.2918816],[-78.3087616,36.2600403],[-78.3460464,36.2251816],[-78.3808517,36.2247505],[-78.416954,36.1621742],[-78.4925232,36.1735878]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.19,\"PERIMETER\":2.204,\"CNTY_\":1846,\"CNTY_ID\":1846,\"NAME\":\"Halifax\",\"FIPS\":\"37083\",\"FIPSNO\":37083,\"CRESS_ID\":42,\"BIR74\":3608,\"SID74\":18,\"NWBIR74\":2365,\"BIR79\":4463,\"SID79\":17,\"NWBIR79\":2980},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.3322067,36.0679817],[-77.4053116,35.9947166],[-77.4257431,35.9960632],[-77.4382172,36.0140343],[-77.463974,36.0263824],[-77.5251312,36.0353851],[-77.5358582,36.0555725],[-77.5366898,36.0823631],[-77.5478821,36.0884933],[-77.6062546,36.097393],[-77.6423569,36.1267014],[-77.6856232,36.1466026],[-77.7005081,36.1441689],[-77.7201843,36.1341133],[-77.7471695,36.1464233],[-77.8013687,36.1442566],[-77.8113022,36.1358185],[-77.8868408,36.1444397],[-77.9178391,36.1567802],[-77.9224014,36.1777306],[-77.9392319,36.1875496],[-77.955864,36.1837502],[-77.9733963,36.1890411],[-77.9851151,36.1774445],[-78.0062866,36.1959457],[-77.9520874,36.2812309],[-77.9301376,36.3529854],[-77.9169235,36.5006371],[-77.901207,36.5098877],[-77.7494049,36.4735718],[-77.6988754,36.4789581],[-77.6509933,36.4725876],[-77.6359711,36.4405365],[-77.5604172,36.4063568],[-77.5596848,36.375946],[-77.5800781,36.32827],[-77.5719528,36.3144951],[-77.5574341,36.3042145],[-77.5380783,36.3024597],[-77.4541168,36.3197556],[-77.4188538,36.2817955],[-77.4134674,36.2558174],[-77.378624,36.2400856],[-77.3890305,36.2031021],[-77.3349915,36.1828499],[-77.3094788,36.1627655],[-77.2935104,36.1628609],[-77.2704086,36.1555252],[-77.2559128,36.1306877],[-77.2574997,36.1184731],[-77.2410355,36.1013031],[-77.3098755,36.0874443],[-77.3322067,36.0679817]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.053,\"PERIMETER\":1.171,\"CNTY_\":1848,\"CNTY_ID\":1848,\"NAME\":\"Pasquotank\",\"FIPS\":\"37139\",\"FIPSNO\":37139,\"CRESS_ID\":70,\"BIR74\":1638,\"SID74\":3,\"NWBIR74\":622,\"BIR79\":2275,\"SID79\":4,\"NWBIR79\":933},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.2989273,36.2142296],[-76.324234,36.2336235],[-76.3724213,36.252346],[-76.46035,36.3738976],[-76.5024643,36.4522858],[-76.4983444,36.5039024],[-76.4059677,36.4471588],[-76.3213654,36.4096451],[-76.30336,36.3918457],[-76.2741318,36.3814087],[-76.2612839,36.3637581],[-76.238533,36.3612289],[-76.2161942,36.3278465],[-76.1934814,36.324852],[-76.1831665,36.315239],[-76.2189026,36.296608],[-76.112709,36.1744194],[-76.1419373,36.1476898],[-76.2349777,36.1633606],[-76.2989273,36.2142296]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.199,\"PERIMETER\":1.984,\"CNTY_\":1874,\"CNTY_ID\":1874,\"NAME\":\"Wilkes\",\"FIPS\":\"37193\",\"FIPSNO\":37193,\"CRESS_ID\":97,\"BIR74\":3146,\"SID74\":4,\"NWBIR74\":200,\"BIR79\":3725,\"SID79\":7,\"NWBIR79\":222},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.0205688,36.034935],[-81.0840836,36.0207672],[-81.1240616,36.0312843],[-81.1574631,36.0209808],[-81.2360077,36.0238228],[-81.3218689,35.9893265],[-81.3473511,36.015358],[-81.38871,36.0375671],[-81.3981476,36.056057],[-81.4296341,36.0656624],[-81.4544373,36.0830574],[-81.5173111,36.0954323],[-81.5461044,36.111393],[-81.499321,36.1360359],[-81.4508057,36.1906204],[-81.4727554,36.2343559],[-81.4528885,36.2395859],[-81.4310379,36.2607193],[-81.4123306,36.267292],[-81.4063873,36.2850533],[-81.3674545,36.278698],[-81.3541336,36.2997169],[-81.3656921,36.3390503],[-81.3613739,36.3531609],[-81.3289948,36.3635025],[-81.2642441,36.3524132],[-81.2398911,36.3653641],[-81.1766739,36.4154434],[-81.1533661,36.4247398],[-81.1383972,36.4176254],[-81.1293793,36.4263306],[-81.1133118,36.4228516],[-81.0985641,36.4311523],[-81.0842514,36.4299202],[-81.0428009,36.4103355],[-81.0246429,36.3778343],[-81.0027771,36.3666801],[-80.9828415,36.3718338],[-80.977951,36.3913765],[-80.9563904,36.4037971],[-80.9245682,36.3727531],[-80.8889236,36.3544273],[-80.8708649,36.3246231],[-80.874382,36.2338829],[-80.8774109,36.0524063],[-80.9889526,36.0533485],[-81.0205688,36.034935]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.081,\"PERIMETER\":1.288,\"CNTY_\":1880,\"CNTY_ID\":1880,\"NAME\":\"Watauga\",\"FIPS\":\"37189\",\"FIPSNO\":37189,\"CRESS_ID\":95,\"BIR74\":1323,\"SID74\":1,\"NWBIR74\":17,\"BIR79\":1775,\"SID79\":1,\"NWBIR79\":33},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.806221,36.1045609],[-81.8171539,36.1093864],[-81.8223114,36.157856],[-81.8502426,36.1814728],[-81.8851929,36.1886368],[-81.8985672,36.1988564],[-81.9065628,36.2218666],[-81.8939972,36.266983],[-81.9111557,36.2907524],[-81.830574,36.3346558],[-81.7304916,36.3293419],[-81.7094574,36.333725],[-81.7403793,36.3618584],[-81.7410736,36.3917847],[-81.6330643,36.3406868],[-81.5619812,36.2735939],[-81.5408401,36.2725067],[-81.4727554,36.2343559],[-81.4508057,36.1906204],[-81.499321,36.1360359],[-81.5461044,36.111393],[-81.6590042,36.1175919],[-81.806221,36.1045609]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.063,\"PERIMETER\":1,\"CNTY_\":1881,\"CNTY_ID\":1881,\"NAME\":\"Perquimans\",\"FIPS\":\"37143\",\"FIPSNO\":37143,\"CRESS_ID\":72,\"BIR74\":484,\"SID74\":1,\"NWBIR74\":230,\"BIR79\":676,\"SID79\":0,\"NWBIR79\":310},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.4805298,36.079792],[-76.5369568,36.087925],[-76.5755997,36.1026573],[-76.5944901,36.2398186],[-76.5710831,36.277729],[-76.5625076,36.3405685],[-76.46035,36.3738976],[-76.3724213,36.252346],[-76.324234,36.2336235],[-76.2989273,36.2142296],[-76.2755051,36.1103706],[-76.4805298,36.079792]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.044,\"PERIMETER\":1.158,\"CNTY_\":1887,\"CNTY_ID\":1887,\"NAME\":\"Chowan\",\"FIPS\":\"37041\",\"FIPSNO\":37041,\"CRESS_ID\":21,\"BIR74\":751,\"SID74\":1,\"NWBIR74\":368,\"BIR79\":899,\"SID79\":1,\"NWBIR79\":491},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.688736,36.2945175],[-76.6482162,36.3153152],[-76.6042404,36.3149834],[-76.5625076,36.3405685],[-76.5710831,36.277729],[-76.5944901,36.2398186],[-76.5755997,36.1026573],[-76.5369568,36.087925],[-76.4805298,36.079792],[-76.4204254,36.0586052],[-76.5230103,36.0071678],[-76.5940018,36.0101318],[-76.6490173,36.0657082],[-76.6332092,36.037117],[-76.690155,36.0496101],[-76.7265091,36.1568222],[-76.688736,36.2945175]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.064,\"PERIMETER\":1.213,\"CNTY_\":1892,\"CNTY_ID\":1892,\"NAME\":\"Avery\",\"FIPS\":\"37011\",\"FIPSNO\":37011,\"CRESS_ID\":6,\"BIR74\":781,\"SID74\":0,\"NWBIR74\":4,\"BIR79\":977,\"SID79\":0,\"NWBIR79\":5},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.9413452,35.9549751],[-81.9613953,35.9392204],[-81.9449539,35.9186134],[-81.9470215,35.9104118],[-81.9883652,35.9056435],[-82.0050659,35.9144402],[-82.0491028,35.9672356],[-82.0427246,36.0050087],[-82.0623245,36.0355263],[-82.0777588,36.1001396],[-82.0204544,36.1297112],[-81.9331131,36.2633209],[-81.9111557,36.2907524],[-81.8939972,36.266983],[-81.9065628,36.2218666],[-81.8985672,36.1988564],[-81.8851929,36.1886368],[-81.8502426,36.1814728],[-81.8223114,36.157856],[-81.8171539,36.1093864],[-81.806221,36.1045609],[-81.7322693,36.0584755],[-81.8027878,35.960331],[-81.8598709,35.9703407],[-81.8808136,35.9895248],[-81.9008484,35.9946518],[-81.9221497,35.9825134],[-81.9413452,35.9549751]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.086,\"PERIMETER\":1.267,\"CNTY_\":1893,\"CNTY_ID\":1893,\"NAME\":\"Yadkin\",\"FIPS\":\"37197\",\"FIPSNO\":37197,\"CRESS_ID\":99,\"BIR74\":1269,\"SID74\":1,\"NWBIR74\":65,\"BIR79\":1568,\"SID79\":1,\"NWBIR79\":76},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4955444,36.0432663],[-80.6895752,36.0454788],[-80.8774109,36.0524063],[-80.874382,36.2338829],[-80.7826996,36.2485771],[-80.7662964,36.261837],[-80.7525635,36.258297],[-80.7343674,36.2647591],[-80.7240372,36.2584724],[-80.6966553,36.2590904],[-80.6674423,36.2461014],[-80.6243134,36.273098],[-80.5905991,36.2682762],[-80.5541534,36.2784309],[-80.5450134,36.2766571],[-80.5368805,36.2567368],[-80.476387,36.2547264],[-80.4563446,36.2425575],[-80.4408112,36.2194862],[-80.444809,36.1233063],[-80.4919815,36.1076965],[-80.5049896,36.0949402],[-80.5082474,36.0708847],[-80.4955444,36.0432663]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.128,\"PERIMETER\":1.554,\"CNTY_\":1897,\"CNTY_ID\":1897,\"NAME\":\"Franklin\",\"FIPS\":\"37069\",\"FIPSNO\":37069,\"CRESS_ID\":35,\"BIR74\":1399,\"SID74\":2,\"NWBIR74\":736,\"BIR79\":1863,\"SID79\":0,\"NWBIR79\":950},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.2545471,35.8155251],[-78.2668457,35.8483772],[-78.3084106,35.8934479],[-78.3295441,35.8878479],[-78.3601151,35.9186745],[-78.3944778,35.9323006],[-78.4311447,35.9727173],[-78.548027,36.0141258],[-78.5458527,36.0680885],[-78.4925232,36.1735878],[-78.416954,36.1621742],[-78.3808517,36.2247505],[-78.3460464,36.2251816],[-78.3087616,36.2600403],[-78.1347198,36.2365837],[-78.1096268,36.2135086],[-78.0583496,36.2113228],[-78.0062866,36.1959457],[-78.1309128,36.0214691],[-78.2545471,35.8155251]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.108,\"PERIMETER\":1.483,\"CNTY_\":1900,\"CNTY_ID\":1900,\"NAME\":\"Forsyth\",\"FIPS\":\"37067\",\"FIPSNO\":37067,\"CRESS_ID\":34,\"BIR74\":11858,\"SID74\":10,\"NWBIR74\":3919,\"BIR79\":15704,\"SID79\":18,\"NWBIR79\":5031},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0381012,36.0061836],[-80.1211472,36.021553],[-80.209877,36.0214272],[-80.2120667,35.9901237],[-80.3343048,35.9925652],[-80.3302841,35.9812355],[-80.3802414,35.9679298],[-80.4115906,35.9846115],[-80.4179764,36.0086327],[-80.4499512,36.0298386],[-80.4648666,36.0501938],[-80.4841309,36.0383224],[-80.4955444,36.0432663],[-80.5082474,36.0708847],[-80.5049896,36.0949402],[-80.4919815,36.1076965],[-80.444809,36.1233063],[-80.4408112,36.2194862],[-80.4563446,36.2425575],[-80.4530106,36.2570877],[-80.0256729,36.2502327],[-80.0381012,36.0061836]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.17,\"PERIMETER\":1.68,\"CNTY_\":1903,\"CNTY_ID\":1903,\"NAME\":\"Guilford\",\"FIPS\":\"37081\",\"FIPSNO\":37081,\"CRESS_ID\":41,\"BIR74\":16184,\"SID74\":23,\"NWBIR74\":5483,\"BIR79\":20543,\"SID79\":38,\"NWBIR79\":7089},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5378189,35.8909683],[-80.0426025,35.9168129],[-80.0381012,36.0061836],[-80.0256729,36.2502327],[-79.5305786,36.2361565],[-79.5378189,35.8909683]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.111,\"PERIMETER\":1.392,\"CNTY_\":1904,\"CNTY_ID\":1904,\"NAME\":\"Alamance\",\"FIPS\":\"37001\",\"FIPSNO\":37001,\"CRESS_ID\":1,\"BIR74\":4672,\"SID74\":13,\"NWBIR74\":1243,\"BIR79\":5767,\"SID79\":11,\"NWBIR79\":1397},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.2461929,35.8681526],[-79.2379913,35.8372459],[-79.5409851,35.8369904],[-79.5378189,35.8909683],[-79.5305786,36.2361565],[-79.5305099,36.2461357],[-79.2584991,36.2356873],[-79.2597733,36.0478935],[-79.2708206,35.9046021],[-79.2461929,35.8681526]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.18,\"PERIMETER\":2.151,\"CNTY_\":1905,\"CNTY_ID\":1905,\"NAME\":\"Bertie\",\"FIPS\":\"37015\",\"FIPSNO\":37015,\"CRESS_ID\":8,\"BIR74\":1324,\"SID74\":6,\"NWBIR74\":921,\"BIR79\":1616,\"SID79\":5,\"NWBIR79\":1161},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.7830658,35.8592339],[-76.8105316,35.8813095],[-76.8348389,35.8842278],[-76.8567276,35.8357811],[-76.8784866,35.8172913],[-76.8984833,35.8141823],[-76.904808,35.8679123],[-76.9360962,35.8945999],[-76.9907303,35.8778381],[-77.004425,35.8618393],[-77.048317,35.8574905],[-77.0341797,35.9143333],[-77.0408859,35.9317513],[-77.0662994,35.9360085],[-77.0900116,35.9252434],[-77.1886749,35.9312477],[-77.1958923,35.935955],[-77.1933975,35.9880943],[-77.215538,35.9890671],[-77.2138062,36.0053635],[-77.2767181,36.0276985],[-77.3152542,36.0480843],[-77.3322067,36.0679817],[-77.3098755,36.0874443],[-77.2410355,36.1013031],[-77.2574997,36.1184731],[-77.2559128,36.1306877],[-77.2704086,36.1555252],[-77.2935104,36.1628609],[-77.2986145,36.2115288],[-77.2346115,36.2145996],[-77.2176666,36.2409821],[-77.1300735,36.2334633],[-76.994751,36.2355804],[-76.98069,36.2302361],[-76.7450638,36.2339172],[-76.7606735,36.1445923],[-76.6937637,35.9929695],[-76.741127,35.9366264],[-76.6972198,35.9415436],[-76.7083206,35.9198341],[-76.7285995,35.9108582],[-76.7417221,35.8830757],[-76.761261,35.8645439],[-76.7830658,35.8592339]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.104,\"PERIMETER\":1.294,\"CNTY_\":1907,\"CNTY_ID\":1907,\"NAME\":\"Orange\",\"FIPS\":\"37135\",\"FIPSNO\":37135,\"CRESS_ID\":68,\"BIR74\":3164,\"SID74\":4,\"NWBIR74\":776,\"BIR79\":4478,\"SID79\":6,\"NWBIR79\":1086},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.0181351,35.8578644],[-79.0953674,35.8539429],[-79.2461929,35.8681526],[-79.2708206,35.9046021],[-79.2597733,36.0478935],[-79.2584991,36.2356873],[-79.1592712,36.2336693],[-78.9510803,36.2338371],[-79.0181351,35.8578644]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.077,\"PERIMETER\":1.271,\"CNTY_\":1908,\"CNTY_ID\":1908,\"NAME\":\"Durham\",\"FIPS\":\"37063\",\"FIPSNO\":37063,\"CRESS_ID\":32,\"BIR74\":7970,\"SID74\":16,\"NWBIR74\":3732,\"BIR79\":10432,\"SID79\":22,\"NWBIR79\":4948},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.0181351,35.8578644],[-78.9510803,36.2338371],[-78.8068008,36.231575],[-78.8103561,36.1145744],[-78.8040543,36.0809402],[-78.788414,36.0621834],[-78.7491226,36.063591],[-78.7533951,36.0114632],[-78.7281036,36.0270729],[-78.7161713,36.0264931],[-78.704155,35.9973259],[-78.7073441,35.976944],[-78.7341995,35.9345856],[-78.763504,35.9144745],[-78.8082962,35.9199257],[-78.8279572,35.8602295],[-78.9057159,35.8605156],[-79.0181351,35.8578644]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.142,\"PERIMETER\":1.64,\"CNTY_\":1913,\"CNTY_ID\":1913,\"NAME\":\"Nash\",\"FIPS\":\"37127\",\"FIPSNO\":37127,\"CRESS_ID\":64,\"BIR74\":4021,\"SID74\":8,\"NWBIR74\":1851,\"BIR79\":5189,\"SID79\":7,\"NWBIR79\":2274},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1869278,35.7251129],[-78.2056198,35.7253952],[-78.2115479,35.7381935],[-78.2340469,35.7457924],[-78.2545471,35.8155251],[-78.1309128,36.0214691],[-78.0062866,36.1959457],[-77.9851151,36.1774445],[-77.9733963,36.1890411],[-77.955864,36.1837502],[-77.9392319,36.1875496],[-77.9224014,36.1777306],[-77.9178391,36.1567802],[-77.8868408,36.1444397],[-77.8113022,36.1358185],[-77.8013687,36.1442566],[-77.7471695,36.1464233],[-77.7201843,36.1341133],[-77.7005081,36.1441689],[-77.8301468,35.854496],[-77.8449249,35.8355751],[-77.8730469,35.8447075],[-78.1869278,35.7251129]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.059,\"PERIMETER\":1.319,\"CNTY_\":1927,\"CNTY_ID\":1927,\"NAME\":\"Mitchell\",\"FIPS\":\"37121\",\"FIPSNO\":37121,\"CRESS_ID\":61,\"BIR74\":671,\"SID74\":0,\"NWBIR74\":1,\"BIR79\":919,\"SID79\":2,\"NWBIR79\":4},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.1188507,35.818531],[-82.1466522,35.8184814],[-82.1410141,35.9002724],[-82.1495667,35.9214478],[-82.1846085,35.9348755],[-82.1957703,35.9473763],[-82.1990509,36.00177],[-82.2321014,36.0038757],[-82.2406158,35.9842033],[-82.2588577,35.9856758],[-82.3016968,36.0293274],[-82.3096924,36.0114746],[-82.3296814,36.0142632],[-82.3402634,36.0253983],[-82.3444977,36.07024],[-82.3851776,36.0785065],[-82.4084244,36.0753174],[-82.3738556,36.0986977],[-82.3119278,36.1221504],[-82.2623062,36.1203766],[-82.2077332,36.1470146],[-82.1540527,36.1396217],[-82.1180801,36.0962563],[-82.0777588,36.1001396],[-82.0623245,36.0355263],[-82.0427246,36.0050087],[-82.0491028,35.9672356],[-82.0050659,35.9144402],[-81.9883652,35.9056435],[-81.983345,35.8875771],[-81.9908981,35.8724747],[-82.0346832,35.8535805],[-82.0979919,35.8438568],[-82.1188507,35.818531]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.131,\"PERIMETER\":1.521,\"CNTY_\":1928,\"CNTY_ID\":1928,\"NAME\":\"Edgecombe\",\"FIPS\":\"37065\",\"FIPSNO\":37065,\"CRESS_ID\":33,\"BIR74\":3657,\"SID74\":10,\"NWBIR74\":2186,\"BIR79\":4359,\"SID79\":9,\"NWBIR79\":2696},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.6712189,35.6702652],[-77.7331467,35.7395477],[-77.7574921,35.7981033],[-77.7550049,35.8248367],[-77.7671356,35.8368645],[-77.8301468,35.854496],[-77.7005081,36.1441689],[-77.6856232,36.1466026],[-77.6423569,36.1267014],[-77.6062546,36.097393],[-77.5478821,36.0884933],[-77.5366898,36.0823631],[-77.5358582,36.0555725],[-77.5251312,36.0353851],[-77.463974,36.0263824],[-77.4382172,36.0140343],[-77.4257431,35.9960632],[-77.4053116,35.9947166],[-77.3423691,35.9080048],[-77.3581009,35.8153114],[-77.3968048,35.8284187],[-77.4056931,35.8172646],[-77.4185791,35.8220863],[-77.4269943,35.808197],[-77.4547119,35.7938156],[-77.4732361,35.7996597],[-77.5055161,35.7667542],[-77.6712189,35.6702652]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.122,\"PERIMETER\":1.516,\"CNTY_\":1932,\"CNTY_ID\":1932,\"NAME\":\"Caldwell\",\"FIPS\":\"37027\",\"FIPSNO\":37027,\"CRESS_ID\":14,\"BIR74\":3609,\"SID74\":6,\"NWBIR74\":309,\"BIR79\":4249,\"SID79\":9,\"NWBIR79\":360},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3281326,35.7950592],[-81.3766556,35.7500343],[-81.417572,35.7559052],[-81.4571457,35.7799339],[-81.560257,35.7754478],[-81.5933685,35.8131256],[-81.701828,35.8687973],[-81.7484436,35.9207573],[-81.7734756,35.9222031],[-81.7756882,35.9439468],[-81.8027878,35.960331],[-81.7322693,36.0584755],[-81.806221,36.1045609],[-81.6590042,36.1175919],[-81.5461044,36.111393],[-81.5173111,36.0954323],[-81.4544373,36.0830574],[-81.4296341,36.0656624],[-81.3981476,36.056057],[-81.38871,36.0375671],[-81.3473511,36.015358],[-81.3218689,35.9893265],[-81.3292618,35.9892464],[-81.3395691,35.9292412],[-81.3306808,35.8758011],[-81.3372116,35.8276291],[-81.3281326,35.7950592]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.08,\"PERIMETER\":1.307,\"CNTY_\":1936,\"CNTY_ID\":1936,\"NAME\":\"Yancey\",\"FIPS\":\"37199\",\"FIPSNO\":37199,\"CRESS_ID\":100,\"BIR74\":770,\"SID74\":0,\"NWBIR74\":12,\"BIR79\":869,\"SID79\":1,\"NWBIR79\":10},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2792053,35.6975555],[-82.2815781,35.7202034],[-82.321846,35.7398491],[-82.3418503,35.7635078],[-82.3453979,35.8051949],[-82.3752518,35.8164024],[-82.4058151,35.8139725],[-82.4414825,35.8822289],[-82.4870911,35.9048843],[-82.4839478,35.9476089],[-82.5069351,35.9725418],[-82.4751968,35.9931755],[-82.4084244,36.0753174],[-82.3851776,36.0785065],[-82.3444977,36.07024],[-82.3402634,36.0253983],[-82.3296814,36.0142632],[-82.3096924,36.0114746],[-82.3016968,36.0293274],[-82.2588577,35.9856758],[-82.2406158,35.9842033],[-82.2321014,36.0038757],[-82.1990509,36.00177],[-82.1957703,35.9473763],[-82.1846085,35.9348755],[-82.1495667,35.9214478],[-82.1410141,35.9002724],[-82.1466522,35.8184814],[-82.1188507,35.818531],[-82.1545944,35.7983704],[-82.1642914,35.7605247],[-82.2117844,35.7169876],[-82.2792053,35.6975555]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.899,\"CNTY_\":1937,\"CNTY_ID\":1937,\"NAME\":\"Martin\",\"FIPS\":\"37117\",\"FIPSNO\":37117,\"CRESS_ID\":59,\"BIR74\":1549,\"SID74\":2,\"NWBIR74\":883,\"BIR79\":1849,\"SID79\":1,\"NWBIR79\":1033},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1784592,35.732193],[-77.2076645,35.755127],[-77.2608185,35.7590904],[-77.2645035,35.7827797],[-77.3581009,35.8153114],[-77.3423691,35.9080048],[-77.4053116,35.9947166],[-77.3322067,36.0679817],[-77.3152542,36.0480843],[-77.2767181,36.0276985],[-77.2138062,36.0053635],[-77.215538,35.9890671],[-77.1933975,35.9880943],[-77.1958923,35.935955],[-77.1886749,35.9312477],[-77.0900116,35.9252434],[-77.0662994,35.9360085],[-77.0408859,35.9317513],[-77.0341797,35.9143333],[-77.048317,35.8574905],[-77.004425,35.8618393],[-76.9907303,35.8778381],[-76.9360962,35.8945999],[-76.904808,35.8679123],[-76.8984833,35.8141823],[-76.8784866,35.8172913],[-76.8567276,35.8357811],[-76.8348389,35.8842278],[-76.8105316,35.8813095],[-76.7830658,35.8592339],[-76.8066788,35.8108406],[-76.805275,35.7903748],[-76.8259583,35.7568817],[-76.8383102,35.7054558],[-76.9799118,35.6501274],[-77.1612854,35.7367783],[-77.1784592,35.732193]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.219,\"PERIMETER\":2.13,\"CNTY_\":1938,\"CNTY_ID\":1938,\"NAME\":\"Wake\",\"FIPS\":\"37183\",\"FIPSNO\":37183,\"CRESS_ID\":92,\"BIR74\":14484,\"SID74\":16,\"NWBIR74\":4397,\"BIR79\":20857,\"SID79\":31,\"NWBIR79\":6221},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.9210739,35.5788574],[-78.9988098,35.6013222],[-78.9388885,35.7614441],[-78.9444351,35.7701149],[-78.9057159,35.8605156],[-78.8279572,35.8602295],[-78.8082962,35.9199257],[-78.763504,35.9144745],[-78.7341995,35.9345856],[-78.7073441,35.976944],[-78.704155,35.9973259],[-78.7161713,36.0264931],[-78.7281036,36.0270729],[-78.7533951,36.0114632],[-78.7491226,36.063591],[-78.6955719,36.0666466],[-78.548027,36.0141258],[-78.4311447,35.9727173],[-78.3944778,35.9323006],[-78.3601151,35.9186745],[-78.3295441,35.8878479],[-78.3084106,35.8934479],[-78.2668457,35.8483772],[-78.2545471,35.8155251],[-78.4776382,35.6956139],[-78.7032166,35.5199394],[-78.9210739,35.5788574]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.601,\"CNTY_\":1946,\"CNTY_ID\":1946,\"NAME\":\"Madison\",\"FIPS\":\"37115\",\"FIPSNO\":37115,\"CRESS_ID\":58,\"BIR74\":765,\"SID74\":2,\"NWBIR74\":5,\"BIR79\":926,\"SID79\":2,\"NWBIR79\":3},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.8959732,35.9483604],[-82.8562698,35.9474258],[-82.80867,35.9208717],[-82.7764435,35.9565735],[-82.7735977,35.9875031],[-82.7632294,35.9995461],[-82.6438904,36.0517235],[-82.6280441,36.0543404],[-82.6044006,36.0429878],[-82.5922318,36.0224495],[-82.6058044,36.0035477],[-82.5993042,35.9632988],[-82.5541458,35.9561081],[-82.5069351,35.9725418],[-82.4839478,35.9476089],[-82.4870911,35.9048843],[-82.4414825,35.8822289],[-82.4058151,35.8139725],[-82.5005493,35.7961273],[-82.766304,35.6940002],[-82.8056259,35.684906],[-82.8432693,35.6917267],[-82.8811111,35.6735611],[-82.9075394,35.7278481],[-82.9521866,35.7389984],[-82.9430466,35.7664642],[-82.9627533,35.791851],[-82.9068222,35.8722153],[-82.9140701,35.9278679],[-82.8959732,35.9483604]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.155,\"PERIMETER\":1.781,\"CNTY_\":1947,\"CNTY_ID\":1947,\"NAME\":\"Iredell\",\"FIPS\":\"37097\",\"FIPSNO\":37097,\"CRESS_ID\":49,\"BIR74\":4139,\"SID74\":4,\"NWBIR74\":1144,\"BIR79\":5400,\"SID79\":5,\"NWBIR79\":1305},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.7265167,35.5075684],[-80.7762299,35.5068092],[-80.9553452,35.5091209],[-80.9510727,35.5286674],[-80.9614334,35.5435638],[-80.9312744,35.6195908],[-81.0035782,35.6970558],[-81.0547791,35.7134018],[-81.0722046,35.7436485],[-81.1088867,35.7719002],[-81.0491028,35.835968],[-80.9953461,35.9770775],[-81.0205688,36.034935],[-80.9889526,36.0533485],[-80.8774109,36.0524063],[-80.6895752,36.0454788],[-80.7059708,35.8516579],[-80.7661209,35.6820374],[-80.7265167,35.5075684]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.069,\"PERIMETER\":1.201,\"CNTY_\":1948,\"CNTY_ID\":1948,\"NAME\":\"Davie\",\"FIPS\":\"37059\",\"FIPSNO\":37059,\"CRESS_ID\":30,\"BIR74\":1207,\"SID74\":1,\"NWBIR74\":148,\"BIR79\":1438,\"SID79\":3,\"NWBIR79\":177},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4567719,35.7457962],[-80.4886932,35.7756157],[-80.5267258,35.7818069],[-80.5723267,35.8138123],[-80.6075592,35.822258],[-80.6349411,35.8402596],[-80.7059708,35.8516579],[-80.6895752,36.0454788],[-80.4955444,36.0432663],[-80.4841309,36.0383224],[-80.4648666,36.0501938],[-80.4499512,36.0298386],[-80.4179764,36.0086327],[-80.4115906,35.9846115],[-80.3802414,35.9679298],[-80.3630676,35.9421234],[-80.3617096,35.8958511],[-80.4059372,35.8843689],[-80.3865051,35.8585701],[-80.3864365,35.8454132],[-80.3954849,35.8394852],[-80.4148026,35.8448639],[-80.4260712,35.830307],[-80.4465027,35.8306847],[-80.4577942,35.8224754],[-80.4794235,35.8332787],[-80.4728851,35.7861176],[-80.4506454,35.7648773],[-80.4567719,35.7457962]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.066,\"PERIMETER\":1.07,\"CNTY_\":1950,\"CNTY_ID\":1950,\"NAME\":\"Alexander\",\"FIPS\":\"37003\",\"FIPSNO\":37003,\"CRESS_ID\":2,\"BIR74\":1333,\"SID74\":0,\"NWBIR74\":128,\"BIR79\":1683,\"SID79\":2,\"NWBIR79\":150},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.1088867,35.7719002],[-81.1272812,35.7889671],[-81.1414032,35.8233185],[-81.3281326,35.7950592],[-81.3372116,35.8276291],[-81.3306808,35.8758011],[-81.3395691,35.9292412],[-81.3292618,35.9892464],[-81.3218689,35.9893265],[-81.2360077,36.0238228],[-81.1574631,36.0209808],[-81.1240616,36.0312843],[-81.0840836,36.0207672],[-81.0205688,36.034935],[-80.9953461,35.9770775],[-81.0491028,35.835968],[-81.1088867,35.7719002]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.145,\"PERIMETER\":1.791,\"CNTY_\":1951,\"CNTY_ID\":1951,\"NAME\":\"Davidson\",\"FIPS\":\"37057\",\"FIPSNO\":37057,\"CRESS_ID\":29,\"BIR74\":5509,\"SID74\":8,\"NWBIR74\":736,\"BIR79\":7143,\"SID79\":8,\"NWBIR79\":941},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0644073,35.5056992],[-80.1819077,35.5051193],[-80.2092133,35.5745125],[-80.2512207,35.6248016],[-80.2857819,35.6369743],[-80.325592,35.6831551],[-80.3262863,35.7140121],[-80.3772583,35.7106857],[-80.4567719,35.7457962],[-80.4506454,35.7648773],[-80.4728851,35.7861176],[-80.4794235,35.8332787],[-80.4577942,35.8224754],[-80.4465027,35.8306847],[-80.4260712,35.830307],[-80.4148026,35.8448639],[-80.3954849,35.8394852],[-80.3864365,35.8454132],[-80.3865051,35.8585701],[-80.4059372,35.8843689],[-80.3617096,35.8958511],[-80.3630676,35.9421234],[-80.3802414,35.9679298],[-80.3302841,35.9812355],[-80.3343048,35.9925652],[-80.2120667,35.9901237],[-80.209877,36.0214272],[-80.1211472,36.021553],[-80.0381012,36.0061836],[-80.0426025,35.9168129],[-80.0644073,35.5056992]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.134,\"PERIMETER\":1.755,\"CNTY_\":1958,\"CNTY_ID\":1958,\"NAME\":\"Burke\",\"FIPS\":\"37023\",\"FIPSNO\":37023,\"CRESS_ID\":12,\"BIR74\":3573,\"SID74\":5,\"NWBIR74\":326,\"BIR79\":4314,\"SID79\":15,\"NWBIR79\":407},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.8162842,35.574379],[-81.8656235,35.718853],[-81.9855957,35.7999535],[-81.975296,35.8182793],[-81.9329834,35.8275986],[-81.9062576,35.8479958],[-81.9062271,35.8920135],[-81.9413452,35.9549751],[-81.9221497,35.9825134],[-81.9008484,35.9946518],[-81.8808136,35.9895248],[-81.8598709,35.9703407],[-81.8027878,35.960331],[-81.7756882,35.9439468],[-81.7734756,35.9222031],[-81.7484436,35.9207573],[-81.701828,35.8687973],[-81.5933685,35.8131256],[-81.560257,35.7754478],[-81.4571457,35.7799339],[-81.417572,35.7559052],[-81.3766556,35.7500343],[-81.4057236,35.6975098],[-81.495697,35.6065483],[-81.5236435,35.5612602],[-81.5625381,35.5553093],[-81.5881119,35.5617752],[-81.6439056,35.553299],[-81.6843185,35.5654373],[-81.6951981,35.5716362],[-81.7008209,35.5956116],[-81.7496109,35.6017113],[-81.7656097,35.5842247],[-81.8162842,35.574379]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.1,\"PERIMETER\":1.331,\"CNTY_\":1962,\"CNTY_ID\":1962,\"NAME\":\"Washington\",\"FIPS\":\"37187\",\"FIPSNO\":37187,\"CRESS_ID\":94,\"BIR74\":990,\"SID74\":5,\"NWBIR74\":521,\"BIR79\":1141,\"SID79\":0,\"NWBIR79\":651},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.408432,35.6991158],[-76.6338196,35.7030029],[-76.8383102,35.7054558],[-76.8259583,35.7568817],[-76.805275,35.7903748],[-76.8066788,35.8108406],[-76.7830658,35.8592339],[-76.761261,35.8645439],[-76.7417221,35.8830757],[-76.7285995,35.9108582],[-76.7083206,35.9198341],[-76.6972198,35.9415436],[-76.4094696,35.9774666],[-76.3714828,35.9323425],[-76.3835602,35.9004135],[-76.3581924,35.8605919],[-76.408699,35.7894821],[-76.408432,35.6991158]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.099,\"PERIMETER\":1.411,\"CNTY_\":1963,\"CNTY_ID\":1963,\"NAME\":\"Tyrrell\",\"FIPS\":\"37177\",\"FIPSNO\":37177,\"CRESS_ID\":89,\"BIR74\":248,\"SID74\":0,\"NWBIR74\":116,\"BIR79\":319,\"SID79\":0,\"NWBIR79\":141},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.167305,35.6968422],[-76.2102356,35.6043892],[-76.2327957,35.5946655],[-76.2976303,35.6116943],[-76.2734451,35.6894989],[-76.408432,35.6991158],[-76.408699,35.7894821],[-76.3581924,35.8605919],[-76.3835602,35.9004135],[-76.3714828,35.9323425],[-76.213768,35.9768753],[-76.0896378,35.9629135],[-76.0260468,35.9204254],[-76.0759125,35.7568016],[-76.0430679,35.6838493],[-76.167305,35.6968422]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.116,\"PERIMETER\":1.664,\"CNTY_\":1964,\"CNTY_ID\":1964,\"NAME\":\"McDowell\",\"FIPS\":\"37111\",\"FIPSNO\":37111,\"CRESS_ID\":56,\"BIR74\":1946,\"SID74\":5,\"NWBIR74\":134,\"BIR79\":2215,\"SID79\":5,\"NWBIR79\":128},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.8162842,35.574379],[-81.8318939,35.5650635],[-81.840271,35.5372429],[-81.8621521,35.5305481],[-81.9670486,35.5215874],[-82.0016022,35.5459747],[-82.0361862,35.5285873],[-82.1167526,35.5190048],[-82.1707077,35.5284653],[-82.2680054,35.5688591],[-82.2906723,35.5893021],[-82.2653427,35.6124878],[-82.2842407,35.6389046],[-82.2891846,35.6714897],[-82.2792053,35.6975555],[-82.2117844,35.7169876],[-82.1642914,35.7605247],[-82.1545944,35.7983704],[-82.1188507,35.818531],[-82.0979919,35.8438568],[-82.0346832,35.8535805],[-81.9908981,35.8724747],[-81.983345,35.8875771],[-81.9883652,35.9056435],[-81.9470215,35.9104118],[-81.9449539,35.9186134],[-81.9613953,35.9392204],[-81.9413452,35.9549751],[-81.9062271,35.8920135],[-81.9062576,35.8479958],[-81.9329834,35.8275986],[-81.975296,35.8182793],[-81.9855957,35.7999535],[-81.8656235,35.718853],[-81.8162842,35.574379]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.201,\"PERIMETER\":1.805,\"CNTY_\":1968,\"CNTY_ID\":1968,\"NAME\":\"Randolph\",\"FIPS\":\"37151\",\"FIPSNO\":37151,\"CRESS_ID\":76,\"BIR74\":4456,\"SID74\":7,\"NWBIR74\":384,\"BIR79\":5711,\"SID79\":12,\"NWBIR79\":483},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.7649918,35.5059357],[-80.0644073,35.5056992],[-80.0426025,35.9168129],[-79.5378189,35.8909683],[-79.5409851,35.8369904],[-79.5553589,35.5130501],[-79.7649918,35.5059357]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.18,\"PERIMETER\":2.142,\"CNTY_\":1973,\"CNTY_ID\":1973,\"NAME\":\"Chatham\",\"FIPS\":\"37037\",\"FIPSNO\":37037,\"CRESS_ID\":19,\"BIR74\":1646,\"SID74\":2,\"NWBIR74\":591,\"BIR79\":2398,\"SID79\":3,\"NWBIR79\":687},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5553589,35.5130501],[-79.5409851,35.8369904],[-79.2379913,35.8372459],[-79.2461929,35.8681526],[-79.0953674,35.8539429],[-79.0181351,35.8578644],[-78.9057159,35.8605156],[-78.9444351,35.7701149],[-78.9388885,35.7614441],[-78.9988098,35.6013222],[-78.9210739,35.5788574],[-78.9744873,35.5171547],[-79.0384979,35.5494614],[-79.0672913,35.5987053],[-79.1326065,35.6246147],[-79.1942444,35.5751305],[-79.2097321,35.5534515],[-79.2205048,35.5508003],[-79.2271347,35.5653648],[-79.2760925,35.5302773],[-79.2861328,35.5444069],[-79.3053665,35.5427055],[-79.3150101,35.5391312],[-79.3128586,35.5268669],[-79.3315506,35.5219803],[-79.3429489,35.5102425],[-79.5553589,35.5130501]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.094,\"PERIMETER\":1.307,\"CNTY_\":1979,\"CNTY_ID\":1979,\"NAME\":\"Wilson\",\"FIPS\":\"37195\",\"FIPSNO\":37195,\"CRESS_ID\":98,\"BIR74\":3702,\"SID74\":11,\"NWBIR74\":1827,\"BIR79\":4706,\"SID79\":13,\"NWBIR79\":2330},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.0653305,35.5820389],[-78.1249008,35.5975189],[-78.1624451,35.6829834],[-78.1618042,35.7092934],[-78.1869278,35.7251129],[-77.8730469,35.8447075],[-77.8449249,35.8355751],[-77.8301468,35.854496],[-77.7671356,35.8368645],[-77.7550049,35.8248367],[-77.7574921,35.7981033],[-77.7331467,35.7395477],[-77.6712189,35.6702652],[-77.6983261,35.6539993],[-77.8262939,35.5742569],[-77.827179,35.582901],[-78.0021362,35.5759964],[-78.0604858,35.5946693],[-78.0653305,35.5820389]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.134,\"PERIMETER\":1.59,\"CNTY_\":1980,\"CNTY_ID\":1980,\"NAME\":\"Rowan\",\"FIPS\":\"37159\",\"FIPSNO\":37159,\"CRESS_ID\":80,\"BIR74\":4606,\"SID74\":3,\"NWBIR74\":1057,\"BIR79\":6427,\"SID79\":8,\"NWBIR79\":1504},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.2982407,35.4948997],[-80.7265167,35.5075684],[-80.7661209,35.6820374],[-80.7059708,35.8516579],[-80.6349411,35.8402596],[-80.6075592,35.822258],[-80.5723267,35.8138123],[-80.5267258,35.7818069],[-80.4886932,35.7756157],[-80.4567719,35.7457962],[-80.3772583,35.7106857],[-80.3262863,35.7140121],[-80.325592,35.6831551],[-80.2857819,35.6369743],[-80.2512207,35.6248016],[-80.2092133,35.5745125],[-80.1819077,35.5051193],[-80.2982407,35.4948997]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.168,\"PERIMETER\":1.791,\"CNTY_\":1984,\"CNTY_ID\":1984,\"NAME\":\"Pitt\",\"FIPS\":\"37147\",\"FIPSNO\":37147,\"CRESS_ID\":74,\"BIR74\":5094,\"SID74\":14,\"NWBIR74\":2620,\"BIR79\":6635,\"SID79\":11,\"NWBIR79\":3059},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.4738846,35.4215279],[-77.5045624,35.4848328],[-77.5039368,35.503891],[-77.5210495,35.5165062],[-77.5234299,35.5301781],[-77.5495758,35.5257263],[-77.5646439,35.5319405],[-77.6341324,35.5878258],[-77.6983261,35.6539993],[-77.6712189,35.6702652],[-77.5055161,35.7667542],[-77.4732361,35.7996597],[-77.4547119,35.7938156],[-77.4269943,35.808197],[-77.4185791,35.8220863],[-77.4056931,35.8172646],[-77.3968048,35.8284187],[-77.3581009,35.8153114],[-77.2645035,35.7827797],[-77.2608185,35.7590904],[-77.2076645,35.755127],[-77.1784592,35.732193],[-77.1774216,35.7144623],[-77.1922379,35.7120934],[-77.1955185,35.699913],[-77.1754379,35.6762848],[-77.1872101,35.6643066],[-77.1746826,35.6354103],[-77.1520538,35.6198845],[-77.1483459,35.5980034],[-77.1193924,35.5854988],[-77.1037674,35.5501862],[-77.1473999,35.5475883],[-77.1722107,35.5191231],[-77.1949615,35.4229546],[-77.2112045,35.3956413],[-77.2405472,35.3799858],[-77.2443008,35.3541908],[-77.2641907,35.3501129],[-77.2938004,35.373951],[-77.3542175,35.323555],[-77.3861618,35.3292618],[-77.4014893,35.3427696],[-77.4439468,35.3545952],[-77.4738846,35.4215279]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.106,\"PERIMETER\":1.444,\"CNTY_\":1986,\"CNTY_ID\":1986,\"NAME\":\"Catawba\",\"FIPS\":\"37035\",\"FIPSNO\":37035,\"CRESS_ID\":18,\"BIR74\":5754,\"SID74\":5,\"NWBIR74\":790,\"BIR79\":6883,\"SID79\":21,\"NWBIR79\":914},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.9614334,35.5435638],[-81.5236435,35.5612602],[-81.495697,35.6065483],[-81.4057236,35.6975098],[-81.3766556,35.7500343],[-81.3281326,35.7950592],[-81.1414032,35.8233185],[-81.1272812,35.7889671],[-81.1088867,35.7719002],[-81.0722046,35.7436485],[-81.0547791,35.7134018],[-81.0035782,35.6970558],[-80.9312744,35.6195908],[-80.9614334,35.5435638]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.168,\"PERIMETER\":1.995,\"CNTY_\":1988,\"CNTY_ID\":1988,\"NAME\":\"Buncombe\",\"FIPS\":\"37021\",\"FIPSNO\":37021,\"CRESS_ID\":11,\"BIR74\":7515,\"SID74\":9,\"NWBIR74\":930,\"BIR79\":9956,\"SID79\":18,\"NWBIR79\":1206},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2581024,35.4637299],[-82.322876,35.4951591],[-82.3709641,35.4787712],[-82.3648376,35.463459],[-82.3736877,35.4573784],[-82.4090652,35.4689217],[-82.4749222,35.4444046],[-82.519516,35.4439163],[-82.5269012,35.4283218],[-82.5511322,35.4268951],[-82.5639343,35.4384232],[-82.6186829,35.4376755],[-82.6689835,35.4551659],[-82.7141571,35.4391518],[-82.7438889,35.4180336],[-82.7808838,35.4416885],[-82.7947235,35.4649696],[-82.7706299,35.5327339],[-82.7720337,35.5712929],[-82.8133392,35.6175346],[-82.8231049,35.6213875],[-82.8448639,35.6131477],[-82.8655243,35.6358032],[-82.8811111,35.6735611],[-82.8432693,35.6917267],[-82.8056259,35.684906],[-82.766304,35.6940002],[-82.5005493,35.7961273],[-82.4058151,35.8139725],[-82.3752518,35.8164024],[-82.3453979,35.8051949],[-82.3418503,35.7635078],[-82.321846,35.7398491],[-82.2815781,35.7202034],[-82.2792053,35.6975555],[-82.2891846,35.6714897],[-82.2842407,35.6389046],[-82.2653427,35.6124878],[-82.2906723,35.5893021],[-82.2680054,35.5688591],[-82.1707077,35.5284653],[-82.222908,35.5156937],[-82.2276001,35.4829216],[-82.2401581,35.4681549],[-82.2581024,35.4637299]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.207,\"PERIMETER\":1.851,\"CNTY_\":1989,\"CNTY_ID\":1989,\"NAME\":\"Johnston\",\"FIPS\":\"37101\",\"FIPSNO\":37101,\"CRESS_ID\":51,\"BIR74\":3999,\"SID74\":6,\"NWBIR74\":1165,\"BIR79\":4780,\"SID79\":13,\"NWBIR79\":1349},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.5387421,35.3151169],[-78.5394669,35.3364639],[-78.6008224,35.4030304],[-78.6231766,35.4464149],[-78.6887436,35.5075264],[-78.7089691,35.5141029],[-78.7032166,35.5199394],[-78.4776382,35.6956139],[-78.2545471,35.8155251],[-78.2340469,35.7457924],[-78.2115479,35.7381935],[-78.2056198,35.7253952],[-78.1869278,35.7251129],[-78.1618042,35.7092934],[-78.1624451,35.6829834],[-78.1249008,35.5975189],[-78.0653305,35.5820389],[-78.1459732,35.4289932],[-78.1568909,35.3506317],[-78.1774597,35.3395996],[-78.2090378,35.3391762],[-78.2372284,35.3146324],[-78.2681656,35.3173599],[-78.3101273,35.2802849],[-78.4166794,35.2490768],[-78.4936218,35.2596207],[-78.5387421,35.3151169]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.144,\"PERIMETER\":1.69,\"CNTY_\":1996,\"CNTY_ID\":1996,\"NAME\":\"Haywood\",\"FIPS\":\"37087\",\"FIPSNO\":37087,\"CRESS_ID\":44,\"BIR74\":2110,\"SID74\":2,\"NWBIR74\":57,\"BIR79\":2463,\"SID79\":8,\"NWBIR79\":62},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.7438889,35.4180336],[-82.8332367,35.3155708],[-82.9191132,35.2907677],[-82.9536209,35.3085289],[-82.9853592,35.3563232],[-83.0385971,35.3899307],[-83.0460434,35.4069939],[-83.0877151,35.4463272],[-83.1282349,35.4566154],[-83.1423721,35.4843941],[-83.1813965,35.5124092],[-83.1570206,35.5516624],[-83.1803741,35.5828209],[-83.1781006,35.623291],[-83.1951294,35.6378174],[-83.1842957,35.6630783],[-83.2152557,35.6853981],[-83.2591248,35.6910095],[-83.2533035,35.7007065],[-83.2438507,35.7182159],[-83.1853485,35.7288857],[-83.1436615,35.7626839],[-83.118187,35.7638092],[-83.0599594,35.7825775],[-82.9870071,35.7739906],[-82.9627533,35.791851],[-82.9430466,35.7664642],[-82.9521866,35.7389984],[-82.9075394,35.7278481],[-82.8811111,35.6735611],[-82.8655243,35.6358032],[-82.8448639,35.6131477],[-82.8231049,35.6213875],[-82.8133392,35.6175346],[-82.7720337,35.5712929],[-82.7706299,35.5327339],[-82.7947235,35.4649696],[-82.7808838,35.4416885],[-82.7438889,35.4180336]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.094,\"PERIMETER\":3.64,\"CNTY_\":2000,\"CNTY_ID\":2000,\"NAME\":\"Dare\",\"FIPS\":\"37055\",\"FIPSNO\":37055,\"CRESS_ID\":28,\"BIR74\":521,\"SID74\":0,\"NWBIR74\":43,\"BIR79\":1059,\"SID79\":1,\"NWBIR79\":73},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-75.7831726,36.225193],[-75.7731552,36.2292557],[-75.5449677,35.7883606],[-75.7027359,36.0498619],[-75.7408676,36.0503235],[-75.7831726,36.225193]]],[[[-75.8914948,35.6312675],[-75.9080276,35.665638],[-76.0212097,35.6690941],[-75.987854,35.8927078],[-75.8180542,35.9235191],[-75.7489624,35.869339],[-75.7293701,35.6651726],[-75.7790527,35.5786858],[-75.8914948,35.6312675]]],[[[-75.4912186,35.6704979],[-75.5336227,35.768856],[-75.4569778,35.6173973],[-75.5262985,35.2279167],[-75.7492905,35.189827],[-75.6915665,35.2349892],[-75.5214844,35.2813568],[-75.4754181,35.5644951],[-75.4912186,35.6704979]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.203,\"PERIMETER\":3.197,\"CNTY_\":2004,\"CNTY_ID\":2004,\"NAME\":\"Beaufort\",\"FIPS\":\"37013\",\"FIPSNO\":37013,\"CRESS_ID\":7,\"BIR74\":2692,\"SID74\":7,\"NWBIR74\":1131,\"BIR79\":2909,\"SID79\":4,\"NWBIR79\":1163},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1037674,35.5501862],[-77.1193924,35.5854988],[-77.1483459,35.5980034],[-77.1520538,35.6198845],[-77.1746826,35.6354103],[-77.1872101,35.6643066],[-77.1754379,35.6762848],[-77.1955185,35.699913],[-77.1922379,35.7120934],[-77.1774216,35.7144623],[-77.1784592,35.732193],[-77.1612854,35.7367783],[-76.9799118,35.6501274],[-76.8383102,35.7054558],[-76.6338196,35.7030029],[-76.6089172,35.6641541],[-76.6079483,35.635067],[-76.5858765,35.6094551],[-76.5395966,35.5940361],[-76.5189438,35.5776443],[-76.4925385,35.5417862],[-76.6381989,35.5203362],[-76.6287689,35.4378967],[-76.7053757,35.4119339],[-77.1037674,35.5501862]]],[[[-76.6145172,35.2729187],[-76.640213,35.2372475],[-76.8505707,35.2171669],[-76.8976059,35.2515717],[-77.1949615,35.4229546],[-77.1722107,35.5191231],[-77.1473999,35.5475883],[-77.1037674,35.5501862],[-76.9831848,35.4365005],[-76.6949005,35.3504257],[-76.6145172,35.2729187]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.141,\"PERIMETER\":2.316,\"CNTY_\":2013,\"CNTY_ID\":2013,\"NAME\":\"Swain\",\"FIPS\":\"37173\",\"FIPSNO\":37173,\"CRESS_ID\":87,\"BIR74\":675,\"SID74\":3,\"NWBIR74\":281,\"BIR79\":883,\"SID79\":2,\"NWBIR79\":406},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.3318176,35.3193436],[-83.4246826,35.3153191],[-83.4732285,35.2916451],[-83.6791916,35.2722206],[-83.6900864,35.2877808],[-83.6893845,35.3082428],[-83.6342163,35.334034],[-83.5988846,35.3623657],[-83.5803833,35.4010849],[-83.5867157,35.4276886],[-83.6323242,35.4367409],[-83.6536102,35.4210968],[-83.744957,35.4414024],[-83.8549881,35.4501266],[-83.8798904,35.4620285],[-83.9300766,35.4490166],[-83.9547043,35.4554596],[-83.9100113,35.4764786],[-83.8812256,35.5105858],[-83.8302002,35.519062],[-83.7758789,35.5526047],[-83.6728745,35.5649719],[-83.6138611,35.5717392],[-83.5610352,35.5551758],[-83.5057983,35.5595512],[-83.4582901,35.5972786],[-83.3870926,35.6252174],[-83.3430252,35.6532593],[-83.2984161,35.6563263],[-83.2591248,35.6910095],[-83.2152557,35.6853981],[-83.1842957,35.6630783],[-83.1951294,35.6378174],[-83.1781006,35.623291],[-83.1803741,35.5828209],[-83.1570206,35.5516624],[-83.1813965,35.5124092],[-83.2266617,35.5134544],[-83.2473068,35.5069885],[-83.3098602,35.4634743],[-83.3530273,35.4558983],[-83.3647156,35.4133301],[-83.3298111,35.3639107],[-83.3318176,35.3193436]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.07,\"PERIMETER\":1.105,\"CNTY_\":2016,\"CNTY_ID\":2016,\"NAME\":\"Greene\",\"FIPS\":\"37079\",\"FIPSNO\":37079,\"CRESS_ID\":40,\"BIR74\":870,\"SID74\":4,\"NWBIR74\":534,\"BIR79\":1178,\"SID79\":4,\"NWBIR79\":664},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.8051834,35.3645897],[-77.8041077,35.4017982],[-77.8305817,35.4236259],[-77.8262939,35.5742569],[-77.6983261,35.6539993],[-77.6341324,35.5878258],[-77.5646439,35.5319405],[-77.5495758,35.5257263],[-77.5234299,35.5301781],[-77.5210495,35.5165062],[-77.5039368,35.503891],[-77.5045624,35.4848328],[-77.4738846,35.4215279],[-77.4946747,35.407444],[-77.5349731,35.4178238],[-77.537178,35.4019814],[-77.5587234,35.3810883],[-77.6218033,35.3664856],[-77.6660538,35.3396721],[-77.6844711,35.3459396],[-77.6984177,35.3698196],[-77.7606964,35.3619385],[-77.8051834,35.3645897]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.065,\"PERIMETER\":1.093,\"CNTY_\":2026,\"CNTY_ID\":2026,\"NAME\":\"Lee\",\"FIPS\":\"37105\",\"FIPSNO\":37105,\"CRESS_ID\":53,\"BIR74\":2252,\"SID74\":5,\"NWBIR74\":736,\"BIR79\":2949,\"SID79\":6,\"NWBIR79\":905},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.1824417,35.3045387],[-79.2643204,35.3445702],[-79.284729,35.392807],[-79.3031998,35.4088058],[-79.324585,35.4148293],[-79.3310928,35.4448204],[-79.3624878,35.4704132],[-79.3436737,35.491642],[-79.3429489,35.5102425],[-79.3315506,35.5219803],[-79.3128586,35.5268669],[-79.3150101,35.5391312],[-79.3053665,35.5427055],[-79.2861328,35.5444069],[-79.2760925,35.5302773],[-79.2271347,35.5653648],[-79.2205048,35.5508003],[-79.2097321,35.5534515],[-79.1942444,35.5751305],[-79.1326065,35.6246147],[-79.0672913,35.5987053],[-79.0384979,35.5494614],[-78.9744873,35.5171547],[-79.1824417,35.3045387]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.146,\"PERIMETER\":1.778,\"CNTY_\":2027,\"CNTY_ID\":2027,\"NAME\":\"Rutherford\",\"FIPS\":\"37161\",\"FIPSNO\":37161,\"CRESS_ID\":81,\"BIR74\":2992,\"SID74\":12,\"NWBIR74\":495,\"BIR79\":3543,\"SID79\":8,\"NWBIR79\":576},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.9714432,35.188282],[-81.9645157,35.2474251],[-82.0515823,35.3231277],[-82.0841522,35.3393555],[-82.1221695,35.3886185],[-82.1551285,35.3971024],[-82.2582779,35.3933563],[-82.2787247,35.4356422],[-82.2746811,35.4516068],[-82.2581024,35.4637299],[-82.2401581,35.4681549],[-82.2276001,35.4829216],[-82.222908,35.5156937],[-82.1707077,35.5284653],[-82.1167526,35.5190048],[-82.0361862,35.5285873],[-82.0016022,35.5459747],[-81.9670486,35.5215874],[-81.8621521,35.5305481],[-81.840271,35.5372429],[-81.8318939,35.5650635],[-81.8162842,35.574379],[-81.7656097,35.5842247],[-81.7496109,35.6017113],[-81.7008209,35.5956116],[-81.6951981,35.5716362],[-81.6843185,35.5654373],[-81.6976852,35.3532639],[-81.7371674,35.2541733],[-81.759491,35.2206993],[-81.765358,35.1824722],[-81.8705902,35.1831169],[-81.9714432,35.188282]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.142,\"PERIMETER\":1.655,\"CNTY_\":2029,\"CNTY_ID\":2029,\"NAME\":\"Wayne\",\"FIPS\":\"37191\",\"FIPSNO\":37191,\"CRESS_ID\":96,\"BIR74\":6638,\"SID74\":18,\"NWBIR74\":2593,\"BIR79\":8227,\"SID79\":23,\"NWBIR79\":3073},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1631927,35.1822891],[-78.1651764,35.1932182],[-78.2574005,35.2209511],[-78.3101273,35.2802849],[-78.2681656,35.3173599],[-78.2372284,35.3146324],[-78.2090378,35.3391762],[-78.1774597,35.3395996],[-78.1568909,35.3506317],[-78.1459732,35.4289932],[-78.0653305,35.5820389],[-78.0604858,35.5946693],[-78.0021362,35.5759964],[-77.827179,35.582901],[-77.8262939,35.5742569],[-77.8305817,35.4236259],[-77.8041077,35.4017982],[-77.8051834,35.3645897],[-77.8300629,35.34235],[-77.8365784,35.1717415],[-77.8876724,35.1549644],[-77.8941574,35.1441803],[-77.9139786,35.1599731],[-77.9446945,35.168232],[-77.9639282,35.1640244],[-78.0021591,35.1864777],[-78.0365067,35.1856918],[-78.087532,35.1701851],[-78.1631927,35.1822891]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.154,\"PERIMETER\":1.68,\"CNTY_\":2030,\"CNTY_ID\":2030,\"NAME\":\"Harnett\",\"FIPS\":\"37085\",\"FIPSNO\":37085,\"CRESS_ID\":43,\"BIR74\":3776,\"SID74\":6,\"NWBIR74\":1051,\"BIR79\":4789,\"SID79\":10,\"NWBIR79\":1453},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6127396,35.2438316],[-78.7160645,35.2599792],[-78.8123856,35.2587204],[-78.8745728,35.2425346],[-78.8860168,35.2299347],[-78.9125824,35.2224655],[-79.0958939,35.1899643],[-79.1468353,35.2130432],[-79.1690979,35.2359009],[-79.2166519,35.2652779],[-79.1824417,35.3045387],[-78.9744873,35.5171547],[-78.9210739,35.5788574],[-78.7032166,35.5199394],[-78.7089691,35.5141029],[-78.6887436,35.5075264],[-78.6231766,35.4464149],[-78.6008224,35.4030304],[-78.5394669,35.3364639],[-78.5387421,35.3151169],[-78.5804138,35.2865753],[-78.6127396,35.2438316]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.506,\"CNTY_\":2032,\"CNTY_ID\":2032,\"NAME\":\"Cleveland\",\"FIPS\":\"37045\",\"FIPSNO\":37045,\"CRESS_ID\":23,\"BIR74\":4866,\"SID74\":10,\"NWBIR74\":1491,\"BIR79\":5526,\"SID79\":21,\"NWBIR79\":1729},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3228226,35.1637573],[-81.362175,35.1628532],[-81.765358,35.1824722],[-81.759491,35.2206993],[-81.7371674,35.2541733],[-81.6976852,35.3532639],[-81.6843185,35.5654373],[-81.6439056,35.553299],[-81.5881119,35.5617752],[-81.5625381,35.5553093],[-81.5236435,35.5612602],[-81.506958,35.5464973],[-81.5155029,35.5214233],[-81.445076,35.4133682],[-81.4074173,35.3598061],[-81.3532639,35.327301],[-81.3647995,35.3103714],[-81.3523483,35.2751045],[-81.3194275,35.260498],[-81.3114243,35.1879501],[-81.3228226,35.1637573]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.078,\"PERIMETER\":1.384,\"CNTY_\":2034,\"CNTY_ID\":2034,\"NAME\":\"Lincoln\",\"FIPS\":\"37109\",\"FIPSNO\":37109,\"CRESS_ID\":55,\"BIR74\":2216,\"SID74\":8,\"NWBIR74\":302,\"BIR79\":2817,\"SID79\":7,\"NWBIR79\":350},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.9567719,35.3974533],[-81.445076,35.4133682],[-81.5155029,35.5214233],[-81.506958,35.5464973],[-81.5236435,35.5612602],[-80.9614334,35.5435638],[-80.9510727,35.5286674],[-80.9553452,35.5091209],[-80.9421997,35.4511299],[-80.9538651,35.436058],[-80.9567719,35.3974533]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.125,\"PERIMETER\":1.601,\"CNTY_\":2039,\"CNTY_ID\":2039,\"NAME\":\"Jackson\",\"FIPS\":\"37099\",\"FIPSNO\":37099,\"CRESS_ID\":50,\"BIR74\":1143,\"SID74\":2,\"NWBIR74\":215,\"BIR79\":1504,\"SID79\":5,\"NWBIR79\":307},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.1062851,35.0002785],[-83.161499,35.0592232],[-83.1450577,35.0832863],[-83.148201,35.0913811],[-83.1771469,35.111496],[-83.1934814,35.1392174],[-83.2179337,35.1589928],[-83.2200394,35.2225266],[-83.2327805,35.2308083],[-83.2639389,35.2217712],[-83.2849808,35.226635],[-83.3106384,35.2599869],[-83.3318176,35.3193436],[-83.3298111,35.3639107],[-83.3647156,35.4133301],[-83.3530273,35.4558983],[-83.3098602,35.4634743],[-83.2473068,35.5069885],[-83.2266617,35.5134544],[-83.1813965,35.5124092],[-83.1423721,35.4843941],[-83.1282349,35.4566154],[-83.0877151,35.4463272],[-83.0460434,35.4069939],[-83.0385971,35.3899307],[-82.9853592,35.3563232],[-82.9536209,35.3085289],[-82.9191132,35.2907677],[-82.926857,35.2279053],[-82.978714,35.18573],[-82.9905853,35.1581764],[-82.9820786,35.1275063],[-83.0520859,35.0634766],[-83.0438538,35.0400696],[-83.0072784,35.0242043],[-83.1062851,35.0002785]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.181,\"PERIMETER\":1.98,\"CNTY_\":2040,\"CNTY_ID\":2040,\"NAME\":\"Moore\",\"FIPS\":\"37125\",\"FIPSNO\":37125,\"CRESS_ID\":63,\"BIR74\":2648,\"SID74\":5,\"NWBIR74\":844,\"BIR79\":3534,\"SID79\":5,\"NWBIR79\":1151},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.6074677,35.1591873],[-79.6483765,35.1897316],[-79.7082367,35.2784157],[-79.7649918,35.5059357],[-79.5553589,35.5130501],[-79.3429489,35.5102425],[-79.3436737,35.491642],[-79.3624878,35.4704132],[-79.3310928,35.4448204],[-79.324585,35.4148293],[-79.3031998,35.4088058],[-79.284729,35.392807],[-79.2643204,35.3445702],[-79.1824417,35.3045387],[-79.2166519,35.2652779],[-79.1690979,35.2359009],[-79.1468353,35.2130432],[-79.0958939,35.1899643],[-79.0971756,35.1768074],[-79.1220016,35.1701851],[-79.1472778,35.1735497],[-79.2352905,35.2032089],[-79.3500519,35.1407967],[-79.4553604,35.0373573],[-79.4950638,35.0625076],[-79.5529022,35.064106],[-79.5741959,35.0732651],[-79.5756302,35.1191254],[-79.6074677,35.1591873]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.887,\"CNTY_\":2041,\"CNTY_ID\":2041,\"NAME\":\"Mecklenburg\",\"FIPS\":\"37119\",\"FIPSNO\":37119,\"CRESS_ID\":60,\"BIR74\":21588,\"SID74\":44,\"NWBIR74\":8027,\"BIR79\":30757,\"SID79\":35,\"NWBIR79\":11631},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.0493011,35.1515312],[-81.0239639,35.1490326],[-81.0072784,35.16325],[-81.0015182,35.1959877],[-81.0140533,35.2499008],[-80.9796448,35.3332672],[-80.9262772,35.3486748],[-80.9377594,35.3649254],[-80.9829254,35.3690948],[-80.9567719,35.3974533],[-80.9538651,35.436058],[-80.9421997,35.4511299],[-80.9553452,35.5091209],[-80.7762299,35.5068092],[-80.775383,35.4795723],[-80.7616882,35.4651375],[-80.7454376,35.419857],[-80.7627411,35.4006805],[-80.6899872,35.3407593],[-80.6594467,35.2646751],[-80.5396423,35.2058182],[-80.7596817,35.0366211],[-80.7972183,35.0281982],[-80.8401642,35.002018],[-80.8947144,35.0597343],[-80.9277954,35.1012497],[-81.0398865,35.0372009],[-81.0655518,35.0664825],[-81.0284424,35.1054077],[-81.0490417,35.1320114],[-81.0493011,35.1515312]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.321,\"CNTY_\":2042,\"CNTY_ID\":2042,\"NAME\":\"Cabarrus\",\"FIPS\":\"37025\",\"FIPSNO\":37025,\"CRESS_ID\":13,\"BIR74\":4099,\"SID74\":3,\"NWBIR74\":856,\"BIR79\":5669,\"SID79\":20,\"NWBIR79\":1203},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.5029449,35.1869125],[-80.5396423,35.2058182],[-80.6594467,35.2646751],[-80.6899872,35.3407593],[-80.7627411,35.4006805],[-80.7454376,35.419857],[-80.7616882,35.4651375],[-80.775383,35.4795723],[-80.7762299,35.5068092],[-80.7265167,35.5075684],[-80.2982407,35.4948997],[-80.3784714,35.3848381],[-80.48172,35.2106094],[-80.5029449,35.1869125]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.13,\"PERIMETER\":1.732,\"CNTY_\":2044,\"CNTY_ID\":2044,\"NAME\":\"Montgomery\",\"FIPS\":\"37123\",\"FIPSNO\":37123,\"CRESS_ID\":62,\"BIR74\":1258,\"SID74\":3,\"NWBIR74\":472,\"BIR79\":1598,\"SID79\":8,\"NWBIR79\":588},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0714111,35.1507416],[-80.0590668,35.1770782],[-80.0658417,35.207943],[-80.0923462,35.2542267],[-80.0935135,35.2914467],[-80.0507507,35.3663712],[-80.0518875,35.3768082],[-80.1163101,35.4643593],[-80.1620712,35.4747429],[-80.1819077,35.5051193],[-80.0644073,35.5056992],[-79.7649918,35.5059357],[-79.7082367,35.2784157],[-79.6483765,35.1897316],[-79.6074677,35.1591873],[-79.6372986,35.1538353],[-79.6979523,35.1730728],[-79.7598419,35.1673126],[-79.836319,35.1738014],[-79.909462,35.1557198],[-79.9758224,35.1507568],[-80.0106812,35.1371422],[-80.0651779,35.1365814],[-80.0714111,35.1507416]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.103,\"PERIMETER\":1.461,\"CNTY_\":2045,\"CNTY_ID\":2045,\"NAME\":\"Stanly\",\"FIPS\":\"37167\",\"FIPSNO\":37167,\"CRESS_ID\":84,\"BIR74\":2356,\"SID74\":5,\"NWBIR74\":370,\"BIR79\":3039,\"SID79\":7,\"NWBIR79\":528},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0714111,35.1507416],[-80.1102753,35.1938362],[-80.1316147,35.1711159],[-80.154686,35.1760826],[-80.1591415,35.1547394],[-80.168129,35.1497307],[-80.1901016,35.1678581],[-80.2198868,35.1591835],[-80.2475891,35.204525],[-80.2610931,35.2040405],[-80.2751236,35.1931114],[-80.325676,35.1739159],[-80.3487244,35.1706734],[-80.3729477,35.1778641],[-80.3987503,35.1646118],[-80.4285812,35.1685944],[-80.4532852,35.1607857],[-80.4832306,35.1829109],[-80.5029449,35.1869125],[-80.48172,35.2106094],[-80.3784714,35.3848381],[-80.2982407,35.4948997],[-80.1819077,35.5051193],[-80.1620712,35.4747429],[-80.1163101,35.4643593],[-80.0518875,35.3768082],[-80.0507507,35.3663712],[-80.0935135,35.2914467],[-80.0923462,35.2542267],[-80.0658417,35.207943],[-80.0590668,35.1770782],[-80.0714111,35.1507416]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.095,\"PERIMETER\":1.471,\"CNTY_\":2047,\"CNTY_ID\":2047,\"NAME\":\"Henderson\",\"FIPS\":\"37089\",\"FIPSNO\":37089,\"CRESS_ID\":45,\"BIR74\":2574,\"SID74\":5,\"NWBIR74\":158,\"BIR79\":3679,\"SID79\":8,\"NWBIR79\":264},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.5700302,35.1494904],[-82.5892258,35.184948],[-82.5962372,35.242466],[-82.610611,35.2675781],[-82.6081009,35.2930641],[-82.7438889,35.4180336],[-82.7141571,35.4391518],[-82.6689835,35.4551659],[-82.6186829,35.4376755],[-82.5639343,35.4384232],[-82.5511322,35.4268951],[-82.5269012,35.4283218],[-82.519516,35.4439163],[-82.4749222,35.4444046],[-82.4090652,35.4689217],[-82.3736877,35.4573784],[-82.3648376,35.463459],[-82.3709641,35.4787712],[-82.322876,35.4951591],[-82.2581024,35.4637299],[-82.2746811,35.4516068],[-82.2787247,35.4356422],[-82.2582779,35.3933563],[-82.3155594,35.3096161],[-82.3413086,35.2854958],[-82.3450851,35.2431908],[-82.3580322,35.2429314],[-82.3508606,35.1926727],[-82.3601227,35.1829491],[-82.371376,35.182724],[-82.3896103,35.2082405],[-82.4379196,35.1695595],[-82.4667435,35.1735001],[-82.5246353,35.1545601],[-82.5700302,35.1494904]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.078,\"PERIMETER\":1.202,\"CNTY_\":2056,\"CNTY_ID\":2056,\"NAME\":\"Graham\",\"FIPS\":\"37075\",\"FIPSNO\":37075,\"CRESS_ID\":38,\"BIR74\":415,\"SID74\":0,\"NWBIR74\":40,\"BIR79\":488,\"SID79\":1,\"NWBIR79\":45},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.6956329,35.2508087],[-83.7535629,35.2371674],[-83.7918777,35.248661],[-83.8368607,35.2467499],[-83.9216537,35.2189674],[-83.9608994,35.2153816],[-83.9922028,35.232502],[-84.003891,35.2620888],[-84.0308609,35.2925224],[-84.0292053,35.3252907],[-84.0063095,35.37286],[-84.0126495,35.4076233],[-83.9547043,35.4554596],[-83.9300766,35.4490166],[-83.8798904,35.4620285],[-83.8549881,35.4501266],[-83.744957,35.4414024],[-83.6536102,35.4210968],[-83.6323242,35.4367409],[-83.5867157,35.4276886],[-83.5803833,35.4010849],[-83.5988846,35.3623657],[-83.6342163,35.334034],[-83.6893845,35.3082428],[-83.6900864,35.2877808],[-83.6791916,35.2722206],[-83.6956329,35.2508087]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.104,\"PERIMETER\":1.548,\"CNTY_\":2065,\"CNTY_ID\":2065,\"NAME\":\"Lenoir\",\"FIPS\":\"37107\",\"FIPSNO\":37107,\"CRESS_ID\":54,\"BIR74\":3589,\"SID74\":10,\"NWBIR74\":1826,\"BIR79\":4225,\"SID79\":14,\"NWBIR79\":2047},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.8365784,35.1717415],[-77.8300629,35.34235],[-77.8051834,35.3645897],[-77.7606964,35.3619385],[-77.6984177,35.3698196],[-77.6844711,35.3459396],[-77.6660538,35.3396721],[-77.6218033,35.3664856],[-77.5587234,35.3810883],[-77.537178,35.4019814],[-77.5349731,35.4178238],[-77.4946747,35.407444],[-77.4738846,35.4215279],[-77.4439468,35.3545952],[-77.4014893,35.3427696],[-77.3861618,35.3292618],[-77.4131546,35.3312187],[-77.4502106,35.3020592],[-77.4485092,35.285675],[-77.4296494,35.2598381],[-77.4740982,35.2271919],[-77.5283127,35.2396965],[-77.5107727,35.1557693],[-77.5330582,35.1448822],[-77.5994949,35.0708694],[-77.731926,35.0008354],[-77.7447891,35.0024452],[-77.7549973,35.0180817],[-77.7516022,35.0956764],[-77.7641373,35.1286125],[-77.8365784,35.1717415]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.098,\"PERIMETER\":1.389,\"CNTY_\":2067,\"CNTY_ID\":2067,\"NAME\":\"Transylvania\",\"FIPS\":\"37175\",\"FIPSNO\":37175,\"CRESS_ID\":88,\"BIR74\":1173,\"SID74\":3,\"NWBIR74\":92,\"BIR79\":1401,\"SID79\":4,\"NWBIR79\":104},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.8876953,35.0553703],[-83.0072784,35.0242043],[-83.0438538,35.0400696],[-83.0520859,35.0634766],[-82.9820786,35.1275063],[-82.9905853,35.1581764],[-82.978714,35.18573],[-82.926857,35.2279053],[-82.9191132,35.2907677],[-82.8332367,35.3155708],[-82.7438889,35.4180336],[-82.6081009,35.2930641],[-82.610611,35.2675781],[-82.5962372,35.242466],[-82.5892258,35.184948],[-82.5700302,35.1494904],[-82.6544952,35.1194572],[-82.6860504,35.1214638],[-82.6880341,35.0978012],[-82.6973572,35.0912323],[-82.771347,35.0854225],[-82.8876953,35.0553703]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.47,\"CNTY_\":2068,\"CNTY_ID\":2068,\"NAME\":\"Gaston\",\"FIPS\":\"37071\",\"FIPSNO\":37071,\"CRESS_ID\":36,\"BIR74\":9014,\"SID74\":11,\"NWBIR74\":1523,\"BIR79\":11455,\"SID79\":26,\"NWBIR79\":2194},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3228226,35.1637573],[-81.3114243,35.1879501],[-81.3194275,35.260498],[-81.3523483,35.2751045],[-81.3647995,35.3103714],[-81.3532639,35.327301],[-81.4074173,35.3598061],[-81.445076,35.4133682],[-80.9567719,35.3974533],[-80.9829254,35.3690948],[-80.9377594,35.3649254],[-80.9262772,35.3486748],[-80.9796448,35.3332672],[-81.0140533,35.2499008],[-81.0015182,35.1959877],[-81.0072784,35.16325],[-81.0239639,35.1490326],[-81.0493011,35.1515312],[-81.3228226,35.1637573]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.06,\"PERIMETER\":1.036,\"CNTY_\":2071,\"CNTY_ID\":2071,\"NAME\":\"Polk\",\"FIPS\":\"37149\",\"FIPSNO\":37149,\"CRESS_ID\":75,\"BIR74\":533,\"SID74\":1,\"NWBIR74\":95,\"BIR79\":673,\"SID79\":0,\"NWBIR79\":79},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2101746,35.1931267],[-82.2783279,35.1950073],[-82.3207703,35.1841888],[-82.3508606,35.1926727],[-82.3580322,35.2429314],[-82.3450851,35.2431908],[-82.3413086,35.2854958],[-82.3155594,35.3096161],[-82.2582779,35.3933563],[-82.1551285,35.3971024],[-82.1221695,35.3886185],[-82.0841522,35.3393555],[-82.0515823,35.3231277],[-81.9645157,35.2474251],[-81.9714432,35.188282],[-82.2101746,35.1931267]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.131,\"PERIMETER\":1.677,\"CNTY_\":2082,\"CNTY_ID\":2082,\"NAME\":\"Macon\",\"FIPS\":\"37113\",\"FIPSNO\":37113,\"CRESS_ID\":57,\"BIR74\":797,\"SID74\":0,\"NWBIR74\":9,\"BIR79\":1157,\"SID79\":3,\"NWBIR79\":22},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.1062851,35.0002785],[-83.5130081,34.9920235],[-83.5272217,35.0197372],[-83.5532379,35.0357628],[-83.5620422,35.0559425],[-83.6435623,35.1274986],[-83.6448746,35.1433601],[-83.717804,35.1388092],[-83.7395248,35.1458397],[-83.7130814,35.1807518],[-83.7223282,35.1972733],[-83.6966934,35.2144356],[-83.6956329,35.2508087],[-83.6791916,35.2722206],[-83.4732285,35.2916451],[-83.4246826,35.3153191],[-83.3318176,35.3193436],[-83.3106384,35.2599869],[-83.2849808,35.226635],[-83.2639389,35.2217712],[-83.2327805,35.2308083],[-83.2200394,35.2225266],[-83.2179337,35.1589928],[-83.1934814,35.1392174],[-83.1771469,35.111496],[-83.148201,35.0913811],[-83.1450577,35.0832863],[-83.161499,35.0592232],[-83.1062851,35.0002785]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.241,\"PERIMETER\":2.214,\"CNTY_\":2083,\"CNTY_ID\":2083,\"NAME\":\"Sampson\",\"FIPS\":\"37163\",\"FIPSNO\":37163,\"CRESS_ID\":82,\"BIR74\":3025,\"SID74\":4,\"NWBIR74\":1396,\"BIR79\":3447,\"SID79\":4,\"NWBIR79\":1524},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1137695,34.7209854],[-78.113739,34.6991806],[-78.1567612,34.6771545],[-78.2568054,34.5537529],[-78.2746124,34.5812759],[-78.3059006,34.6053581],[-78.3198853,34.6300926],[-78.3097,34.6358528],[-78.3223419,34.6455727],[-78.3388672,34.6826057],[-78.3638153,34.6920433],[-78.386673,34.7218895],[-78.401001,34.7593307],[-78.4992905,34.8551064],[-78.5419922,34.9078712],[-78.5934753,34.94347],[-78.6342545,34.9843674],[-78.6664124,35.0714684],[-78.6581573,35.0936203],[-78.6456375,35.1025581],[-78.6334839,35.1537247],[-78.6452255,35.1897278],[-78.6327133,35.1973],[-78.6352844,35.2109528],[-78.6127396,35.2438316],[-78.5804138,35.2865753],[-78.5387421,35.3151169],[-78.4936218,35.2596207],[-78.4166794,35.2490768],[-78.3101273,35.2802849],[-78.2574005,35.2209511],[-78.1651764,35.1932182],[-78.1631927,35.1822891],[-78.1702805,35.0974846],[-78.1552429,35.0681915],[-78.1429825,34.9013252],[-78.1954498,34.7436256],[-78.1560974,34.7284775],[-78.1358185,34.7113457],[-78.1137695,34.7209854]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.082,\"PERIMETER\":1.388,\"CNTY_\":2085,\"CNTY_ID\":2085,\"NAME\":\"Pamlico\",\"FIPS\":\"37137\",\"FIPSNO\":37137,\"CRESS_ID\":69,\"BIR74\":542,\"SID74\":1,\"NWBIR74\":222,\"BIR79\":631,\"SID79\":1,\"NWBIR79\":277},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.9432449,35.070034],[-76.9442291,35.0997238],[-76.9898911,35.1540451],[-76.9723358,35.1567726],[-76.9666061,35.1879654],[-76.9474335,35.2169914],[-76.8976059,35.2515717],[-76.8505707,35.2171669],[-76.640213,35.2372475],[-76.6145172,35.2729187],[-76.5912094,35.3120804],[-76.5409775,35.303688],[-76.5071259,35.2487679],[-76.6400909,35.1725197],[-76.6052246,35.1385612],[-76.6242218,35.0643501],[-76.678009,35.024086],[-76.8494644,34.9822197],[-76.9414902,35.0274277],[-76.9432449,35.070034]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.12,\"PERIMETER\":1.686,\"CNTY_\":2088,\"CNTY_ID\":2088,\"NAME\":\"Cherokee\",\"FIPS\":\"37039\",\"FIPSNO\":37039,\"CRESS_ID\":20,\"BIR74\":1027,\"SID74\":2,\"NWBIR74\":32,\"BIR79\":1173,\"SID79\":1,\"NWBIR79\":42},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-84.2910385,35.2105446],[-84.2259445,35.2616043],[-84.1797256,35.2409897],[-84.1016464,35.2455521],[-84.042778,35.2725754],[-84.0308609,35.2925224],[-84.003891,35.2620888],[-83.9922028,35.232502],[-83.9608994,35.2153816],[-83.9216537,35.2189674],[-83.8368607,35.2467499],[-83.7918777,35.248661],[-83.7535629,35.2371674],[-83.6956329,35.2508087],[-83.6966934,35.2144356],[-83.7223282,35.1972733],[-83.7130814,35.1807518],[-83.7395248,35.1458397],[-83.755394,35.1480637],[-83.8538818,35.1257935],[-83.9073181,35.0704155],[-83.9528503,35.0484428],[-83.9597702,35.0191231],[-83.9885483,34.9890671],[-84.1182404,34.988224],[-84.3238525,34.9890099],[-84.2910385,35.2105446]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.172,\"PERIMETER\":1.835,\"CNTY_\":2090,\"CNTY_ID\":2090,\"NAME\":\"Cumberland\",\"FIPS\":\"37051\",\"FIPSNO\":37051,\"CRESS_ID\":26,\"BIR74\":20366,\"SID74\":38,\"NWBIR74\":7043,\"BIR79\":26370,\"SID79\":57,\"NWBIR79\":10614},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.4992905,34.8551064],[-78.5174408,34.8435287],[-78.8316574,34.8443565],[-78.8962631,34.8309021],[-78.9125519,34.8274231],[-78.928627,34.8797989],[-78.9484863,34.9026833],[-79.0336075,34.9538231],[-79.0943146,35.0378571],[-79.106842,35.1192245],[-79.0971756,35.1768074],[-79.0958939,35.1899643],[-78.9125824,35.2224655],[-78.8860168,35.2299347],[-78.8745728,35.2425346],[-78.8123856,35.2587204],[-78.7160645,35.2599792],[-78.6127396,35.2438316],[-78.6352844,35.2109528],[-78.6327133,35.1973],[-78.6452255,35.1897278],[-78.6334839,35.1537247],[-78.6456375,35.1025581],[-78.6581573,35.0936203],[-78.6664124,35.0714684],[-78.6342545,34.9843674],[-78.5934753,34.94347],[-78.5419922,34.9078712],[-78.4992905,34.8551064]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.121,\"PERIMETER\":1.978,\"CNTY_\":2091,\"CNTY_ID\":2091,\"NAME\":\"Jones\",\"FIPS\":\"37103\",\"FIPSNO\":37103,\"CRESS_ID\":52,\"BIR74\":578,\"SID74\":1,\"NWBIR74\":297,\"BIR79\":650,\"SID79\":2,\"NWBIR79\":305},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.0490036,34.831192],[-77.0574646,34.8150482],[-77.0731354,34.8154411],[-77.1006927,34.7974968],[-77.1598206,34.7884979],[-77.1642609,34.7745171],[-77.1928406,34.804287],[-77.1800613,34.8321495],[-77.2062683,34.8355026],[-77.2229919,34.88451],[-77.2854233,34.926403],[-77.3351364,34.9325409],[-77.3699722,34.9142494],[-77.4996338,34.9625053],[-77.6392517,34.9840202],[-77.682991,34.9667244],[-77.731926,35.0008354],[-77.5994949,35.0708694],[-77.5330582,35.1448822],[-77.5107727,35.1557693],[-77.5283127,35.2396965],[-77.4740982,35.2271919],[-77.4234085,35.1943054],[-77.205513,35.0880547],[-77.179245,35.05336],[-77.1404495,35.0542374],[-77.1311188,35.0692825],[-77.1105881,35.0660362],[-77.1033707,35.0242615],[-77.1095352,34.8304291],[-77.0490036,34.831192]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.163,\"PERIMETER\":1.716,\"CNTY_\":2095,\"CNTY_ID\":2095,\"NAME\":\"Union\",\"FIPS\":\"37179\",\"FIPSNO\":37179,\"CRESS_ID\":90,\"BIR74\":3915,\"SID74\":4,\"NWBIR74\":1034,\"BIR79\":5273,\"SID79\":9,\"NWBIR79\":1348},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.8401642,35.002018],[-80.7972183,35.0281982],[-80.7596817,35.0366211],[-80.5396423,35.2058182],[-80.5029449,35.1869125],[-80.4832306,35.1829109],[-80.4532852,35.1607857],[-80.4285812,35.1685944],[-80.3987503,35.1646118],[-80.3729477,35.1778641],[-80.3487244,35.1706734],[-80.325676,35.1739159],[-80.2751236,35.1931114],[-80.3252792,34.8147621],[-80.5615463,34.8152275],[-80.8000641,34.8161125],[-80.7856522,34.9406395],[-80.8401642,35.002018]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.138,\"PERIMETER\":1.621,\"CNTY_\":2096,\"CNTY_ID\":2096,\"NAME\":\"Anson\",\"FIPS\":\"37007\",\"FIPSNO\":37007,\"CRESS_ID\":4,\"BIR74\":1570,\"SID74\":15,\"NWBIR74\":952,\"BIR79\":1875,\"SID79\":4,\"NWBIR79\":1161},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.9199524,34.8079185],[-80.3252792,34.8147621],[-80.2751236,35.1931114],[-80.2610931,35.2040405],[-80.2475891,35.204525],[-80.2198868,35.1591835],[-80.1901016,35.1678581],[-80.168129,35.1497307],[-80.1591415,35.1547394],[-80.154686,35.1760826],[-80.1316147,35.1711159],[-80.1102753,35.1938362],[-80.0714111,35.1507416],[-80.0651779,35.1365814],[-80.0584488,35.1039848],[-80.0028076,35.0899277],[-79.9752808,35.0967331],[-79.9449158,35.1153374],[-79.9274979,35.1157799],[-79.9151382,35.1066933],[-79.908432,35.0789948],[-79.8820801,35.0444641],[-79.8939209,35.0072441],[-79.8670502,34.9677162],[-79.8537064,34.904583],[-79.9014206,34.8524094],[-79.9199524,34.8079185]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.098,\"PERIMETER\":1.262,\"CNTY_\":2097,\"CNTY_ID\":2097,\"NAME\":\"Hoke\",\"FIPS\":\"37093\",\"FIPSNO\":37093,\"CRESS_ID\":47,\"BIR74\":1494,\"SID74\":7,\"NWBIR74\":987,\"BIR79\":1706,\"SID79\":6,\"NWBIR79\":1172},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.3403015,34.8356094],[-79.3606796,34.9447098],[-79.3984146,34.9962158],[-79.4553604,35.0373573],[-79.3500519,35.1407967],[-79.2352905,35.2032089],[-79.1472778,35.1735497],[-79.1220016,35.1701851],[-79.0971756,35.1768074],[-79.106842,35.1192245],[-79.0943146,35.0378571],[-79.0336075,34.9538231],[-79.1818542,34.8318825],[-79.3403015,34.8356094]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.167,\"PERIMETER\":2.709,\"CNTY_\":2099,\"CNTY_ID\":2099,\"NAME\":\"Hyde\",\"FIPS\":\"37095\",\"FIPSNO\":37095,\"CRESS_ID\":48,\"BIR74\":338,\"SID74\":0,\"NWBIR74\":134,\"BIR79\":427,\"SID79\":0,\"NWBIR79\":169},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.5189438,35.5776443],[-76.5395966,35.5940361],[-76.5858765,35.6094551],[-76.6079483,35.635067],[-76.6089172,35.6641541],[-76.6338196,35.7030029],[-76.408432,35.6991158],[-76.2734451,35.6894989],[-76.2976303,35.6116943],[-76.2327957,35.5946655],[-76.2102356,35.6043892],[-76.167305,35.6968422],[-76.104744,35.6636391],[-76.0212097,35.6690941],[-75.9080276,35.665638],[-75.8914948,35.6312675],[-76.0529785,35.4146042],[-76.1816177,35.3415337],[-76.4988022,35.4162178],[-76.5337524,35.4501991],[-76.4584351,35.504425],[-76.4465256,35.5508652],[-76.5189438,35.5776443]]],[[[-76.0170059,35.0694351],[-75.9756927,35.1161842],[-75.8539352,35.1672821],[-75.7637024,35.1922836],[-75.8115387,35.1640205],[-75.9039459,35.1324921],[-76.0028763,35.0694351],[-76.0170059,35.0694351]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.204,\"PERIMETER\":1.871,\"CNTY_\":2100,\"CNTY_ID\":2100,\"NAME\":\"Duplin\",\"FIPS\":\"37061\",\"FIPSNO\":37061,\"CRESS_ID\":31,\"BIR74\":2483,\"SID74\":4,\"NWBIR74\":1061,\"BIR79\":2777,\"SID79\":7,\"NWBIR79\":1227},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.6898346,34.7201958],[-77.9266739,34.7110062],[-77.9393082,34.7194061],[-77.989151,34.7170944],[-78.0173645,34.7289314],[-78.1137695,34.7209854],[-78.1358185,34.7113457],[-78.1560974,34.7284775],[-78.1954498,34.7436256],[-78.1429825,34.9013252],[-78.1552429,35.0681915],[-78.1702805,35.0974846],[-78.1631927,35.1822891],[-78.087532,35.1701851],[-78.0365067,35.1856918],[-78.0021591,35.1864777],[-77.9639282,35.1640244],[-77.9446945,35.168232],[-77.9139786,35.1599731],[-77.8941574,35.1441803],[-77.8876724,35.1549644],[-77.8365784,35.1717415],[-77.7641373,35.1286125],[-77.7516022,35.0956764],[-77.7549973,35.0180817],[-77.7447891,35.0024452],[-77.731926,35.0008354],[-77.682991,34.9667244],[-77.6552658,34.9189339],[-77.6898346,34.7201958]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.121,\"PERIMETER\":1.855,\"CNTY_\":2107,\"CNTY_ID\":2107,\"NAME\":\"Richmond\",\"FIPS\":\"37153\",\"FIPSNO\":37153,\"CRESS_ID\":77,\"BIR74\":2756,\"SID74\":4,\"NWBIR74\":1043,\"BIR79\":3108,\"SID79\":7,\"NWBIR79\":1218},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.6859589,34.8052559],[-79.9199524,34.8079185],[-79.9014206,34.8524094],[-79.8537064,34.904583],[-79.8670502,34.9677162],[-79.8939209,35.0072441],[-79.8820801,35.0444641],[-79.908432,35.0789948],[-79.9151382,35.1066933],[-79.9274979,35.1157799],[-79.9449158,35.1153374],[-79.9752808,35.0967331],[-80.0028076,35.0899277],[-80.0584488,35.1039848],[-80.0651779,35.1365814],[-80.0106812,35.1371422],[-79.9758224,35.1507568],[-79.909462,35.1557198],[-79.836319,35.1738014],[-79.7598419,35.1673126],[-79.6979523,35.1730728],[-79.6372986,35.1538353],[-79.6074677,35.1591873],[-79.5756302,35.1191254],[-79.5741959,35.0732651],[-79.5529022,35.064106],[-79.4950638,35.0625076],[-79.4553604,35.0373573],[-79.5471039,35.000061],[-79.5730438,34.9783669],[-79.5805206,34.9447899],[-79.5655899,34.9075012],[-79.6219254,34.8495712],[-79.6114426,34.817749],[-79.6601486,34.8178978],[-79.6859589,34.8052559]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.051,\"PERIMETER\":1.096,\"CNTY_\":2109,\"CNTY_ID\":2109,\"NAME\":\"Clay\",\"FIPS\":\"37043\",\"FIPSNO\":37043,\"CRESS_ID\":22,\"BIR74\":284,\"SID74\":0,\"NWBIR74\":1,\"BIR79\":419,\"SID79\":0,\"NWBIR79\":5},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.9379959,34.9893913],[-83.9885483,34.9890671],[-83.9597702,35.0191231],[-83.9528503,35.0484428],[-83.9073181,35.0704155],[-83.8538818,35.1257935],[-83.755394,35.1480637],[-83.7395248,35.1458397],[-83.717804,35.1388092],[-83.6448746,35.1433601],[-83.6435623,35.1274986],[-83.5620422,35.0559425],[-83.5532379,35.0357628],[-83.5272217,35.0197372],[-83.5130081,34.9920235],[-83.5494156,34.9895363],[-83.9379959,34.9893913]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.177,\"PERIMETER\":2.916,\"CNTY_\":2119,\"CNTY_ID\":2119,\"NAME\":\"Craven\",\"FIPS\":\"37049\",\"FIPSNO\":37049,\"CRESS_ID\":25,\"BIR74\":5868,\"SID74\":13,\"NWBIR74\":1744,\"BIR79\":7595,\"SID79\":18,\"NWBIR79\":2342},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.8976059,35.2515717],[-76.9474335,35.2169914],[-76.9666061,35.1879654],[-76.9723358,35.1567726],[-76.9898911,35.1540451],[-76.9442291,35.0997238],[-76.9432449,35.070034],[-77.0478821,35.0921555],[-77.1046753,35.087986],[-77.1105881,35.0660362],[-77.1311188,35.0692825],[-77.1404495,35.0542374],[-77.179245,35.05336],[-77.205513,35.0880547],[-77.4234085,35.1943054],[-77.4740982,35.2271919],[-77.4296494,35.2598381],[-77.4485092,35.285675],[-77.4502106,35.3020592],[-77.4131546,35.3312187],[-77.3861618,35.3292618],[-77.3542175,35.323555],[-77.2938004,35.373951],[-77.2641907,35.3501129],[-77.2443008,35.3541908],[-77.2405472,35.3799858],[-77.2112045,35.3956413],[-77.1949615,35.4229546],[-76.8976059,35.2515717]]],[[[-76.647049,34.9063339],[-76.625618,34.8906479],[-76.7502136,34.8482742],[-77.0490036,34.831192],[-77.1095352,34.8304291],[-77.1033707,35.0242615],[-77.1105881,35.0660362],[-77.0011902,35.052887],[-76.9131088,34.93647],[-76.647049,34.9063339]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.08,\"PERIMETER\":1.188,\"CNTY_\":2123,\"CNTY_ID\":2123,\"NAME\":\"Scotland\",\"FIPS\":\"37165\",\"FIPSNO\":37165,\"CRESS_ID\":83,\"BIR74\":2255,\"SID74\":8,\"NWBIR74\":1206,\"BIR79\":2617,\"SID79\":16,\"NWBIR79\":1436},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.4559708,34.6340904],[-79.6675034,34.800663],[-79.6859589,34.8052559],[-79.6601486,34.8178978],[-79.6114426,34.817749],[-79.6219254,34.8495712],[-79.5655899,34.9075012],[-79.5805206,34.9447899],[-79.5730438,34.9783669],[-79.5471039,35.000061],[-79.4553604,35.0373573],[-79.3984146,34.9962158],[-79.3606796,34.9447098],[-79.3403015,34.8356094],[-79.3444519,34.8088379],[-79.3279724,34.7724113],[-79.4559708,34.6340904]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.195,\"PERIMETER\":1.783,\"CNTY_\":2146,\"CNTY_ID\":2146,\"NAME\":\"Onslow\",\"FIPS\":\"37133\",\"FIPSNO\":37133,\"CRESS_ID\":67,\"BIR74\":11158,\"SID74\":29,\"NWBIR74\":2217,\"BIR79\":14655,\"SID79\":23,\"NWBIR79\":3568},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.5386353,34.4570084],[-77.5763321,34.4693451],[-77.6898346,34.7201958],[-77.6552658,34.9189339],[-77.682991,34.9667244],[-77.6392517,34.9840202],[-77.4996338,34.9625053],[-77.3699722,34.9142494],[-77.3351364,34.9325409],[-77.2854233,34.926403],[-77.2229919,34.88451],[-77.2062683,34.8355026],[-77.1800613,34.8321495],[-77.1928406,34.804287],[-77.1642609,34.7745171],[-77.1489563,34.7643318],[-77.1293945,34.6849136],[-77.156601,34.6606369],[-77.5386353,34.4570084]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.24,\"PERIMETER\":2.004,\"CNTY_\":2150,\"CNTY_ID\":2150,\"NAME\":\"Robeson\",\"FIPS\":\"37155\",\"FIPSNO\":37155,\"CRESS_ID\":78,\"BIR74\":7889,\"SID74\":31,\"NWBIR74\":5904,\"BIR79\":9087,\"SID79\":26,\"NWBIR79\":6899},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.8645096,34.4771957],[-78.9194717,34.45364],[-78.950737,34.4493828],[-78.9753647,34.3991661],[-79.0022354,34.3880424],[-79.0064163,34.3662682],[-79.0294724,34.347374],[-79.040947,34.3192978],[-79.074501,34.3045731],[-79.4471436,34.6190605],[-79.4559708,34.6340904],[-79.3279724,34.7724113],[-79.3444519,34.8088379],[-79.3403015,34.8356094],[-79.1818542,34.8318825],[-79.0336075,34.9538231],[-78.9484863,34.9026833],[-78.928627,34.8797989],[-78.9125519,34.8274231],[-78.8962631,34.8309021],[-78.8417053,34.7350006],[-78.8033218,34.6851044],[-78.8526001,34.5665817],[-78.845665,34.5074539],[-78.8645096,34.4771957]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.125,\"PERIMETER\":2.868,\"CNTY_\":2156,\"CNTY_ID\":2156,\"NAME\":\"Carteret\",\"FIPS\":\"37031\",\"FIPSNO\":37031,\"CRESS_ID\":16,\"BIR74\":2414,\"SID74\":5,\"NWBIR74\":341,\"BIR79\":3339,\"SID79\":4,\"NWBIR79\":487},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1489563,34.7643318],[-77.1642609,34.7745171],[-77.1598206,34.7884979],[-77.1006927,34.7974968],[-77.0731354,34.8154411],[-77.0574646,34.8150482],[-77.0490036,34.831192],[-76.7502136,34.8482742],[-76.625618,34.8906479],[-76.647049,34.9063339],[-76.6700592,34.9699974],[-76.5297775,34.9746361],[-76.4450302,35.0166588],[-76.424057,34.9462471],[-76.3640137,34.9431114],[-76.3294067,34.975956],[-76.3147125,34.9488144],[-76.469902,34.7850609],[-76.6253128,34.7197533],[-77.0505295,34.6989174],[-77.1489563,34.7643318]]],[[[-76.5442734,34.5878296],[-76.5551453,34.6106606],[-76.5377502,34.6139221],[-76.4844818,34.6976318],[-76.4322968,34.760685],[-76.3746796,34.81287],[-76.2877045,34.8770103],[-76.4692612,34.6932831],[-76.5442734,34.5878296]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.225,\"PERIMETER\":2.107,\"CNTY_\":2162,\"CNTY_ID\":2162,\"NAME\":\"Bladen\",\"FIPS\":\"37017\",\"FIPSNO\":37017,\"CRESS_ID\":9,\"BIR74\":1782,\"SID74\":8,\"NWBIR74\":818,\"BIR79\":2052,\"SID79\":5,\"NWBIR79\":1023},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.2614975,34.3947868],[-78.3289795,34.3644218],[-78.4379425,34.3718414],[-78.6380844,34.4511452],[-78.6598206,34.450943],[-78.6684952,34.4651299],[-78.8118896,34.4553185],[-78.8363571,34.459198],[-78.8645096,34.4771957],[-78.845665,34.5074539],[-78.8526001,34.5665817],[-78.8033218,34.6851044],[-78.8417053,34.7350006],[-78.8962631,34.8309021],[-78.8316574,34.8443565],[-78.5174408,34.8435287],[-78.4992905,34.8551064],[-78.401001,34.7593307],[-78.386673,34.7218895],[-78.3638153,34.6920433],[-78.3388672,34.6826057],[-78.3223419,34.6455727],[-78.3097,34.6358528],[-78.3198853,34.6300926],[-78.3059006,34.6053581],[-78.2746124,34.5812759],[-78.2568054,34.5537529],[-78.2624054,34.5279388],[-78.2550583,34.5073814],[-78.1696777,34.4624519],[-78.2614975,34.3947868]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.214,\"PERIMETER\":2.152,\"CNTY_\":2185,\"CNTY_ID\":2185,\"NAME\":\"Pender\",\"FIPS\":\"37141\",\"FIPSNO\":37141,\"CRESS_ID\":71,\"BIR74\":1228,\"SID74\":4,\"NWBIR74\":580,\"BIR79\":1602,\"SID79\":3,\"NWBIR79\":763},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.0259247,34.3287697],[-78.1302414,34.3641243],[-78.1547852,34.3622437],[-78.1846161,34.3481712],[-78.1945648,34.3510513],[-78.2614975,34.3947868],[-78.1696777,34.4624519],[-78.2550583,34.5073814],[-78.2624054,34.5279388],[-78.2568054,34.5537529],[-78.1567612,34.6771545],[-78.113739,34.6991806],[-78.1137695,34.7209854],[-78.0173645,34.7289314],[-77.989151,34.7170944],[-77.9393082,34.7194061],[-77.9266739,34.7110062],[-77.6898346,34.7201958],[-77.5763321,34.4693451],[-77.5386353,34.4570084],[-77.5867615,34.4209366],[-77.609726,34.4350433],[-77.6026154,34.4126282],[-77.7505264,34.3050461],[-77.8091431,34.3594322],[-77.8283844,34.38797],[-77.8880692,34.3640709],[-77.9217834,34.3733139],[-77.9439392,34.3564377],[-77.9498138,34.3660851],[-77.9790726,34.3756866],[-77.9944534,34.3623161],[-77.9866791,34.3399162],[-78.0259247,34.3287697]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.24,\"PERIMETER\":2.365,\"CNTY_\":2232,\"CNTY_ID\":2232,\"NAME\":\"Columbus\",\"FIPS\":\"37047\",\"FIPSNO\":37047,\"CRESS_ID\":24,\"BIR74\":3350,\"SID74\":15,\"NWBIR74\":1431,\"BIR79\":4144,\"SID79\":17,\"NWBIR79\":1832},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6557159,33.9486732],[-79.074501,34.3045731],[-79.040947,34.3192978],[-79.0294724,34.347374],[-79.0064163,34.3662682],[-79.0022354,34.3880424],[-78.9753647,34.3991661],[-78.950737,34.4493828],[-78.9194717,34.45364],[-78.8645096,34.4771957],[-78.8363571,34.459198],[-78.8118896,34.4553185],[-78.6684952,34.4651299],[-78.6598206,34.450943],[-78.6380844,34.4511452],[-78.4379425,34.3718414],[-78.3289795,34.3644218],[-78.2614975,34.3947868],[-78.1945648,34.3510513],[-78.1846161,34.3481712],[-78.1547852,34.3622437],[-78.2610626,34.2152634],[-78.3735733,34.2023506],[-78.3611221,34.1867218],[-78.4254303,34.1380653],[-78.4927444,34.1585045],[-78.5272369,34.1548576],[-78.544281,34.1341629],[-78.5634308,34.0589447],[-78.5877838,34.0306053],[-78.6302719,34.0102005],[-78.6347198,33.9779778],[-78.6557159,33.9486732]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.042,\"PERIMETER\":0.999,\"CNTY_\":2238,\"CNTY_ID\":2238,\"NAME\":\"New Hanover\",\"FIPS\":\"37129\",\"FIPSNO\":37129,\"CRESS_ID\":65,\"BIR74\":5526,\"SID74\":12,\"NWBIR74\":1633,\"BIR79\":6917,\"SID79\":9,\"NWBIR79\":2100},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.9607315,34.1892433],[-77.9658661,34.2422867],[-77.9752808,34.2433624],[-77.9831467,34.2616806],[-78.0002213,34.2678833],[-77.9953918,34.2827988],[-78.007019,34.2848167],[-78.0113068,34.3126144],[-78.0259247,34.3287697],[-77.9866791,34.3399162],[-77.9944534,34.3623161],[-77.9790726,34.3756866],[-77.9498138,34.3660851],[-77.9439392,34.3564377],[-77.9217834,34.3733139],[-77.8880692,34.3640709],[-77.8283844,34.38797],[-77.8091431,34.3594322],[-77.7505264,34.3050461],[-77.8643875,34.1927376],[-77.8944016,34.0691795],[-77.9267578,34.0620346],[-77.9607315,34.1892433]]]]}}, {\"type\":\"Feature\",\"properties\":{\"AREA\":0.212,\"PERIMETER\":2.024,\"CNTY_\":2241,\"CNTY_ID\":2241,\"NAME\":\"Brunswick\",\"FIPS\":\"37019\",\"FIPSNO\":37019,\"CRESS_ID\":10,\"BIR74\":2181,\"SID74\":5,\"NWBIR74\":659,\"BIR79\":2655,\"SID79\":6,\"NWBIR79\":841},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6557159,33.9486732],[-78.6347198,33.9779778],[-78.6302719,34.0102005],[-78.5877838,34.0306053],[-78.5634308,34.0589447],[-78.544281,34.1341629],[-78.5272369,34.1548576],[-78.4927444,34.1585045],[-78.4254303,34.1380653],[-78.3611221,34.1867218],[-78.3735733,34.2023506],[-78.2610626,34.2152634],[-78.1547852,34.3622437],[-78.1302414,34.3641243],[-78.0259247,34.3287697],[-78.0113068,34.3126144],[-78.007019,34.2848167],[-77.9953918,34.2827988],[-78.0002213,34.2678833],[-77.9831467,34.2616806],[-77.9752808,34.2433624],[-77.9658661,34.2422867],[-77.9607315,34.1892433],[-77.9585266,33.9925804],[-78.0348053,33.9142914],[-78.5797195,33.8819923],[-78.6557159,33.9486732]]]]}}]  geojson_atomize(x, FALSE) #> {\"type\":\"Feature\",\"properties\":{\"AREA\":0.114,\"PERIMETER\":1.442,\"CNTY_\":1825,\"CNTY_ID\":1825,\"NAME\":\"Ashe\",\"FIPS\":\"37009\",\"FIPSNO\":37009,\"CRESS_ID\":5,\"BIR74\":1091,\"SID74\":1,\"NWBIR74\":10,\"BIR79\":1364,\"SID79\":0,\"NWBIR79\":19},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.4727554,36.2343559],[-81.5408401,36.2725067],[-81.5619812,36.2735939],[-81.6330643,36.3406868],[-81.7410736,36.3917847],[-81.6982803,36.4717789],[-81.7027969,36.5193405],[-81.6699982,36.5896492],[-81.3452988,36.5728645],[-81.3475418,36.5379143],[-81.3247757,36.5136795],[-81.313324,36.4806976],[-81.2662354,36.4372063],[-81.2628403,36.4050407],[-81.2406921,36.3794174],[-81.2398911,36.3653641],[-81.2642441,36.3524132],[-81.3289948,36.3635025],[-81.3613739,36.3531609],[-81.3656921,36.3390503],[-81.3541336,36.2997169],[-81.3674545,36.278698],[-81.4063873,36.2850533],[-81.4123306,36.267292],[-81.4310379,36.2607193],[-81.4528885,36.2395859],[-81.4727554,36.2343559]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.061,\"PERIMETER\":1.231,\"CNTY_\":1827,\"CNTY_ID\":1827,\"NAME\":\"Alleghany\",\"FIPS\":\"37005\",\"FIPSNO\":37005,\"CRESS_ID\":3,\"BIR74\":487,\"SID74\":0,\"NWBIR74\":10,\"BIR79\":542,\"SID79\":3,\"NWBIR79\":12},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.2398911,36.3653641],[-81.2406921,36.3794174],[-81.2628403,36.4050407],[-81.2662354,36.4372063],[-81.313324,36.4806976],[-81.3247757,36.5136795],[-81.3475418,36.5379143],[-81.3452988,36.5728645],[-80.9034424,36.5652122],[-80.933548,36.4983139],[-80.9657745,36.4672203],[-80.9496689,36.4147339],[-80.9563904,36.4037971],[-80.977951,36.3913765],[-80.9828415,36.3718338],[-81.0027771,36.3666801],[-81.0246429,36.3778343],[-81.0428009,36.4103355],[-81.0842514,36.4299202],[-81.0985641,36.4311523],[-81.1133118,36.4228516],[-81.1293793,36.4263306],[-81.1383972,36.4176254],[-81.1533661,36.4247398],[-81.1766739,36.4154434],[-81.2398911,36.3653641]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.63,\"CNTY_\":1828,\"CNTY_ID\":1828,\"NAME\":\"Surry\",\"FIPS\":\"37171\",\"FIPSNO\":37171,\"CRESS_ID\":86,\"BIR74\":3188,\"SID74\":5,\"NWBIR74\":208,\"BIR79\":3616,\"SID79\":6,\"NWBIR79\":260},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4563446,36.2425575],[-80.476387,36.2547264],[-80.5368805,36.2567368],[-80.5450134,36.2766571],[-80.5541534,36.2784309],[-80.5905991,36.2682762],[-80.6243134,36.273098],[-80.6674423,36.2461014],[-80.6966553,36.2590904],[-80.7240372,36.2584724],[-80.7343674,36.2647591],[-80.7525635,36.258297],[-80.7662964,36.261837],[-80.7826996,36.2485771],[-80.874382,36.2338829],[-80.8708649,36.3246231],[-80.8889236,36.3544273],[-80.9245682,36.3727531],[-80.9563904,36.4037971],[-80.9496689,36.4147339],[-80.9657745,36.4672203],[-80.933548,36.4983139],[-80.9034424,36.5652122],[-80.8381577,36.5634384],[-80.6110535,36.5572968],[-80.4353104,36.5510445],[-80.4530106,36.2570877],[-80.4563446,36.2425575]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.07,\"PERIMETER\":2.968,\"CNTY_\":1831,\"CNTY_ID\":1831,\"NAME\":\"Currituck\",\"FIPS\":\"37053\",\"FIPSNO\":37053,\"CRESS_ID\":27,\"BIR74\":508,\"SID74\":1,\"NWBIR74\":123,\"BIR79\":830,\"SID79\":2,\"NWBIR79\":145},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.0089722,36.3195953],[-76.0173492,36.3377304],[-76.0328751,36.3359756],[-76.0439529,36.3535919],[-76.0950851,36.3489151],[-76.1609268,36.3918991],[-76.1581497,36.4126892],[-76.1682892,36.4270859],[-76.3302536,36.556057],[-76.1273956,36.5571632],[-76.0459595,36.5569534],[-76.0332108,36.5143738],[-76.0910645,36.5035667],[-75.9760742,36.4362144],[-75.9697647,36.4151192],[-76.0016098,36.4189148],[-75.9512558,36.3654709],[-75.9281235,36.4232445],[-75.9245911,36.3509483],[-75.8000565,36.1128159],[-75.798851,36.0728188],[-75.8551636,36.1056671],[-75.913765,36.2448006],[-75.9575119,36.2594528],[-75.9419327,36.2943382],[-76.0089722,36.3195953]]],[[[-76.0271683,36.5567169],[-75.9986649,36.5566521],[-75.9119186,36.5425301],[-75.9248047,36.4739761],[-75.9772797,36.4780159],[-75.9762878,36.5179253],[-76.0271683,36.5567169]]],[[[-75.9019852,36.5561981],[-75.8781662,36.5558739],[-75.7731552,36.2292557],[-75.7831726,36.225193],[-75.9019852,36.5561981]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.153,\"PERIMETER\":2.206,\"CNTY_\":1832,\"CNTY_ID\":1832,\"NAME\":\"Northampton\",\"FIPS\":\"37131\",\"FIPSNO\":37131,\"CRESS_ID\":66,\"BIR74\":1421,\"SID74\":9,\"NWBIR74\":1066,\"BIR79\":1606,\"SID79\":3,\"NWBIR79\":1197},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.2176666,36.2409821],[-77.2346115,36.2145996],[-77.2986145,36.2115288],[-77.2935104,36.1628609],[-77.3094788,36.1627655],[-77.3349915,36.1828499],[-77.3890305,36.2031021],[-77.378624,36.2400856],[-77.4134674,36.2558174],[-77.4188538,36.2817955],[-77.4541168,36.3197556],[-77.5380783,36.3024597],[-77.5574341,36.3042145],[-77.5719528,36.3144951],[-77.5800781,36.32827],[-77.5596848,36.375946],[-77.5604172,36.4063568],[-77.6359711,36.4405365],[-77.6509933,36.4725876],[-77.6988754,36.4789581],[-77.7494049,36.4735718],[-77.901207,36.5098877],[-77.8988571,36.5529442],[-77.7639313,36.5534401],[-77.3200531,36.5539169],[-77.1773529,36.5562859],[-77.1544189,36.5262527],[-77.0921326,36.5075188],[-77.0753098,36.4835167],[-77.0832748,36.4700966],[-77.127327,36.4707108],[-77.1393204,36.4564781],[-77.1419601,36.4170647],[-77.2176666,36.2409821]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.097,\"PERIMETER\":1.67,\"CNTY_\":1833,\"CNTY_ID\":1833,\"NAME\":\"Hertford\",\"FIPS\":\"37091\",\"FIPSNO\":37091,\"CRESS_ID\":46,\"BIR74\":1452,\"SID74\":7,\"NWBIR74\":954,\"BIR79\":1838,\"SID79\":5,\"NWBIR79\":1237},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.7450638,36.2339172],[-76.98069,36.2302361],[-76.994751,36.2355804],[-77.1300735,36.2334633],[-77.2176666,36.2409821],[-77.1419601,36.4170647],[-77.1393204,36.4564781],[-77.127327,36.4707108],[-77.0832748,36.4700966],[-77.0753098,36.4835167],[-77.0921326,36.5075188],[-77.1544189,36.5262527],[-77.1773529,36.5562859],[-76.9241333,36.5541458],[-76.9084244,36.5042839],[-76.9457703,36.4589615],[-76.9536743,36.4192314],[-76.943512,36.4017296],[-76.9240799,36.3924446],[-76.7413483,36.3151665],[-76.7074966,36.2661324],[-76.7450638,36.2339172]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.062,\"PERIMETER\":1.547,\"CNTY_\":1834,\"CNTY_ID\":1834,\"NAME\":\"Camden\",\"FIPS\":\"37029\",\"FIPSNO\":37029,\"CRESS_ID\":15,\"BIR74\":286,\"SID74\":0,\"NWBIR74\":115,\"BIR79\":350,\"SID79\":2,\"NWBIR79\":139},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.0089722,36.3195953],[-75.9571838,36.1937714],[-75.9813385,36.1697273],[-76.1831665,36.315239],[-76.1934814,36.324852],[-76.2161942,36.3278465],[-76.238533,36.3612289],[-76.2612839,36.3637581],[-76.2741318,36.3814087],[-76.30336,36.3918457],[-76.3213654,36.4096451],[-76.4059677,36.4471588],[-76.4983444,36.5039024],[-76.5635834,36.5552521],[-76.4975586,36.5558128],[-76.3302536,36.556057],[-76.1682892,36.4270859],[-76.1581497,36.4126892],[-76.1609268,36.3918991],[-76.0950851,36.3489151],[-76.0439529,36.3535919],[-76.0328751,36.3359756],[-76.0173492,36.3377304],[-76.0089722,36.3195953]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.284,\"CNTY_\":1835,\"CNTY_ID\":1835,\"NAME\":\"Gates\",\"FIPS\":\"37073\",\"FIPSNO\":37073,\"CRESS_ID\":37,\"BIR74\":420,\"SID74\":0,\"NWBIR74\":254,\"BIR79\":594,\"SID79\":2,\"NWBIR79\":371},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.5625076,36.3405685],[-76.6042404,36.3149834],[-76.6482162,36.3153152],[-76.688736,36.2945175],[-76.7766418,36.3583298],[-76.9240799,36.3924446],[-76.943512,36.4017296],[-76.9536743,36.4192314],[-76.9457703,36.4589615],[-76.9084244,36.5042839],[-76.9241333,36.5541458],[-76.9216309,36.5541573],[-76.5635834,36.5552521],[-76.4983444,36.5039024],[-76.5024643,36.4522858],[-76.46035,36.3738976],[-76.5625076,36.3405685]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.421,\"CNTY_\":1836,\"CNTY_ID\":1836,\"NAME\":\"Warren\",\"FIPS\":\"37185\",\"FIPSNO\":37185,\"CRESS_ID\":93,\"BIR74\":968,\"SID74\":4,\"NWBIR74\":748,\"BIR79\":1190,\"SID79\":2,\"NWBIR79\":844},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.3087616,36.2600403],[-78.2829285,36.2918816],[-78.3212509,36.5455322],[-78.0516663,36.552475],[-77.8988571,36.5529442],[-77.901207,36.5098877],[-77.9169235,36.5006371],[-77.9301376,36.3529854],[-77.9520874,36.2812309],[-78.0062866,36.1959457],[-78.0583496,36.2113228],[-78.1096268,36.2135086],[-78.1347198,36.2365837],[-78.3087616,36.2600403]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.124,\"PERIMETER\":1.428,\"CNTY_\":1837,\"CNTY_ID\":1837,\"NAME\":\"Stokes\",\"FIPS\":\"37169\",\"FIPSNO\":37169,\"CRESS_ID\":85,\"BIR74\":1612,\"SID74\":1,\"NWBIR74\":160,\"BIR79\":2038,\"SID79\":5,\"NWBIR79\":176},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0256729,36.2502327],[-80.4530106,36.2570877],[-80.4353104,36.5510445],[-80.0480957,36.5471344],[-80.0240555,36.5450249],[-80.0256729,36.2502327]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.114,\"PERIMETER\":1.352,\"CNTY_\":1838,\"CNTY_ID\":1838,\"NAME\":\"Caswell\",\"FIPS\":\"37033\",\"FIPSNO\":37033,\"CRESS_ID\":17,\"BIR74\":1035,\"SID74\":2,\"NWBIR74\":550,\"BIR79\":1253,\"SID79\":2,\"NWBIR79\":597},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5305099,36.2461357],[-79.5102997,36.547657],[-79.2170639,36.5497818],[-79.1443253,36.5460587],[-79.1592712,36.2336693],[-79.2584991,36.2356873],[-79.5305099,36.2461357]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.153,\"PERIMETER\":1.616,\"CNTY_\":1839,\"CNTY_ID\":1839,\"NAME\":\"Rockingham\",\"FIPS\":\"37157\",\"FIPSNO\":37157,\"CRESS_ID\":79,\"BIR74\":4449,\"SID74\":16,\"NWBIR74\":1243,\"BIR79\":5386,\"SID79\":5,\"NWBIR79\":1369},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5305099,36.2461357],[-79.5305786,36.2361565],[-80.0256729,36.2502327],[-80.0240555,36.5450249],[-79.7174454,36.5478897],[-79.5102997,36.547657],[-79.5305099,36.2461357]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.663,\"CNTY_\":1840,\"CNTY_ID\":1840,\"NAME\":\"Granville\",\"FIPS\":\"37077\",\"FIPSNO\":37077,\"CRESS_ID\":39,\"BIR74\":1671,\"SID74\":4,\"NWBIR74\":930,\"BIR79\":2074,\"SID79\":4,\"NWBIR79\":1058},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.7491226,36.063591],[-78.788414,36.0621834],[-78.8040543,36.0809402],[-78.8103561,36.1145744],[-78.8068008,36.231575],[-78.7966995,36.5435333],[-78.7373886,36.5460739],[-78.4588089,36.541481],[-78.4637527,36.5238571],[-78.5025024,36.5043907],[-78.5170898,36.461483],[-78.5147171,36.1752243],[-78.4925232,36.1735878],[-78.5458527,36.0680885],[-78.548027,36.0141258],[-78.6955719,36.0666466],[-78.7491226,36.063591]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.109,\"PERIMETER\":1.325,\"CNTY_\":1841,\"CNTY_ID\":1841,\"NAME\":\"Person\",\"FIPS\":\"37145\",\"FIPSNO\":37145,\"CRESS_ID\":73,\"BIR74\":1556,\"SID74\":4,\"NWBIR74\":613,\"BIR79\":1790,\"SID79\":4,\"NWBIR79\":650},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.8068008,36.231575],[-78.9510803,36.2338371],[-79.1592712,36.2336693],[-79.1443253,36.5460587],[-78.7966995,36.5435333],[-78.8068008,36.231575]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.072,\"PERIMETER\":1.085,\"CNTY_\":1842,\"CNTY_ID\":1842,\"NAME\":\"Vance\",\"FIPS\":\"37181\",\"FIPSNO\":37181,\"CRESS_ID\":91,\"BIR74\":2180,\"SID74\":4,\"NWBIR74\":1179,\"BIR79\":2753,\"SID79\":6,\"NWBIR79\":1492},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.4925232,36.1735878],[-78.5147171,36.1752243],[-78.5170898,36.461483],[-78.5025024,36.5043907],[-78.4637527,36.5238571],[-78.4588089,36.541481],[-78.3212509,36.5455322],[-78.2829285,36.2918816],[-78.3087616,36.2600403],[-78.3460464,36.2251816],[-78.3808517,36.2247505],[-78.416954,36.1621742],[-78.4925232,36.1735878]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.19,\"PERIMETER\":2.204,\"CNTY_\":1846,\"CNTY_ID\":1846,\"NAME\":\"Halifax\",\"FIPS\":\"37083\",\"FIPSNO\":37083,\"CRESS_ID\":42,\"BIR74\":3608,\"SID74\":18,\"NWBIR74\":2365,\"BIR79\":4463,\"SID79\":17,\"NWBIR79\":2980},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.3322067,36.0679817],[-77.4053116,35.9947166],[-77.4257431,35.9960632],[-77.4382172,36.0140343],[-77.463974,36.0263824],[-77.5251312,36.0353851],[-77.5358582,36.0555725],[-77.5366898,36.0823631],[-77.5478821,36.0884933],[-77.6062546,36.097393],[-77.6423569,36.1267014],[-77.6856232,36.1466026],[-77.7005081,36.1441689],[-77.7201843,36.1341133],[-77.7471695,36.1464233],[-77.8013687,36.1442566],[-77.8113022,36.1358185],[-77.8868408,36.1444397],[-77.9178391,36.1567802],[-77.9224014,36.1777306],[-77.9392319,36.1875496],[-77.955864,36.1837502],[-77.9733963,36.1890411],[-77.9851151,36.1774445],[-78.0062866,36.1959457],[-77.9520874,36.2812309],[-77.9301376,36.3529854],[-77.9169235,36.5006371],[-77.901207,36.5098877],[-77.7494049,36.4735718],[-77.6988754,36.4789581],[-77.6509933,36.4725876],[-77.6359711,36.4405365],[-77.5604172,36.4063568],[-77.5596848,36.375946],[-77.5800781,36.32827],[-77.5719528,36.3144951],[-77.5574341,36.3042145],[-77.5380783,36.3024597],[-77.4541168,36.3197556],[-77.4188538,36.2817955],[-77.4134674,36.2558174],[-77.378624,36.2400856],[-77.3890305,36.2031021],[-77.3349915,36.1828499],[-77.3094788,36.1627655],[-77.2935104,36.1628609],[-77.2704086,36.1555252],[-77.2559128,36.1306877],[-77.2574997,36.1184731],[-77.2410355,36.1013031],[-77.3098755,36.0874443],[-77.3322067,36.0679817]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.053,\"PERIMETER\":1.171,\"CNTY_\":1848,\"CNTY_ID\":1848,\"NAME\":\"Pasquotank\",\"FIPS\":\"37139\",\"FIPSNO\":37139,\"CRESS_ID\":70,\"BIR74\":1638,\"SID74\":3,\"NWBIR74\":622,\"BIR79\":2275,\"SID79\":4,\"NWBIR79\":933},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.2989273,36.2142296],[-76.324234,36.2336235],[-76.3724213,36.252346],[-76.46035,36.3738976],[-76.5024643,36.4522858],[-76.4983444,36.5039024],[-76.4059677,36.4471588],[-76.3213654,36.4096451],[-76.30336,36.3918457],[-76.2741318,36.3814087],[-76.2612839,36.3637581],[-76.238533,36.3612289],[-76.2161942,36.3278465],[-76.1934814,36.324852],[-76.1831665,36.315239],[-76.2189026,36.296608],[-76.112709,36.1744194],[-76.1419373,36.1476898],[-76.2349777,36.1633606],[-76.2989273,36.2142296]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.199,\"PERIMETER\":1.984,\"CNTY_\":1874,\"CNTY_ID\":1874,\"NAME\":\"Wilkes\",\"FIPS\":\"37193\",\"FIPSNO\":37193,\"CRESS_ID\":97,\"BIR74\":3146,\"SID74\":4,\"NWBIR74\":200,\"BIR79\":3725,\"SID79\":7,\"NWBIR79\":222},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.0205688,36.034935],[-81.0840836,36.0207672],[-81.1240616,36.0312843],[-81.1574631,36.0209808],[-81.2360077,36.0238228],[-81.3218689,35.9893265],[-81.3473511,36.015358],[-81.38871,36.0375671],[-81.3981476,36.056057],[-81.4296341,36.0656624],[-81.4544373,36.0830574],[-81.5173111,36.0954323],[-81.5461044,36.111393],[-81.499321,36.1360359],[-81.4508057,36.1906204],[-81.4727554,36.2343559],[-81.4528885,36.2395859],[-81.4310379,36.2607193],[-81.4123306,36.267292],[-81.4063873,36.2850533],[-81.3674545,36.278698],[-81.3541336,36.2997169],[-81.3656921,36.3390503],[-81.3613739,36.3531609],[-81.3289948,36.3635025],[-81.2642441,36.3524132],[-81.2398911,36.3653641],[-81.1766739,36.4154434],[-81.1533661,36.4247398],[-81.1383972,36.4176254],[-81.1293793,36.4263306],[-81.1133118,36.4228516],[-81.0985641,36.4311523],[-81.0842514,36.4299202],[-81.0428009,36.4103355],[-81.0246429,36.3778343],[-81.0027771,36.3666801],[-80.9828415,36.3718338],[-80.977951,36.3913765],[-80.9563904,36.4037971],[-80.9245682,36.3727531],[-80.8889236,36.3544273],[-80.8708649,36.3246231],[-80.874382,36.2338829],[-80.8774109,36.0524063],[-80.9889526,36.0533485],[-81.0205688,36.034935]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.081,\"PERIMETER\":1.288,\"CNTY_\":1880,\"CNTY_ID\":1880,\"NAME\":\"Watauga\",\"FIPS\":\"37189\",\"FIPSNO\":37189,\"CRESS_ID\":95,\"BIR74\":1323,\"SID74\":1,\"NWBIR74\":17,\"BIR79\":1775,\"SID79\":1,\"NWBIR79\":33},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.806221,36.1045609],[-81.8171539,36.1093864],[-81.8223114,36.157856],[-81.8502426,36.1814728],[-81.8851929,36.1886368],[-81.8985672,36.1988564],[-81.9065628,36.2218666],[-81.8939972,36.266983],[-81.9111557,36.2907524],[-81.830574,36.3346558],[-81.7304916,36.3293419],[-81.7094574,36.333725],[-81.7403793,36.3618584],[-81.7410736,36.3917847],[-81.6330643,36.3406868],[-81.5619812,36.2735939],[-81.5408401,36.2725067],[-81.4727554,36.2343559],[-81.4508057,36.1906204],[-81.499321,36.1360359],[-81.5461044,36.111393],[-81.6590042,36.1175919],[-81.806221,36.1045609]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.063,\"PERIMETER\":1,\"CNTY_\":1881,\"CNTY_ID\":1881,\"NAME\":\"Perquimans\",\"FIPS\":\"37143\",\"FIPSNO\":37143,\"CRESS_ID\":72,\"BIR74\":484,\"SID74\":1,\"NWBIR74\":230,\"BIR79\":676,\"SID79\":0,\"NWBIR79\":310},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.4805298,36.079792],[-76.5369568,36.087925],[-76.5755997,36.1026573],[-76.5944901,36.2398186],[-76.5710831,36.277729],[-76.5625076,36.3405685],[-76.46035,36.3738976],[-76.3724213,36.252346],[-76.324234,36.2336235],[-76.2989273,36.2142296],[-76.2755051,36.1103706],[-76.4805298,36.079792]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.044,\"PERIMETER\":1.158,\"CNTY_\":1887,\"CNTY_ID\":1887,\"NAME\":\"Chowan\",\"FIPS\":\"37041\",\"FIPSNO\":37041,\"CRESS_ID\":21,\"BIR74\":751,\"SID74\":1,\"NWBIR74\":368,\"BIR79\":899,\"SID79\":1,\"NWBIR79\":491},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.688736,36.2945175],[-76.6482162,36.3153152],[-76.6042404,36.3149834],[-76.5625076,36.3405685],[-76.5710831,36.277729],[-76.5944901,36.2398186],[-76.5755997,36.1026573],[-76.5369568,36.087925],[-76.4805298,36.079792],[-76.4204254,36.0586052],[-76.5230103,36.0071678],[-76.5940018,36.0101318],[-76.6490173,36.0657082],[-76.6332092,36.037117],[-76.690155,36.0496101],[-76.7265091,36.1568222],[-76.688736,36.2945175]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.064,\"PERIMETER\":1.213,\"CNTY_\":1892,\"CNTY_ID\":1892,\"NAME\":\"Avery\",\"FIPS\":\"37011\",\"FIPSNO\":37011,\"CRESS_ID\":6,\"BIR74\":781,\"SID74\":0,\"NWBIR74\":4,\"BIR79\":977,\"SID79\":0,\"NWBIR79\":5},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.9413452,35.9549751],[-81.9613953,35.9392204],[-81.9449539,35.9186134],[-81.9470215,35.9104118],[-81.9883652,35.9056435],[-82.0050659,35.9144402],[-82.0491028,35.9672356],[-82.0427246,36.0050087],[-82.0623245,36.0355263],[-82.0777588,36.1001396],[-82.0204544,36.1297112],[-81.9331131,36.2633209],[-81.9111557,36.2907524],[-81.8939972,36.266983],[-81.9065628,36.2218666],[-81.8985672,36.1988564],[-81.8851929,36.1886368],[-81.8502426,36.1814728],[-81.8223114,36.157856],[-81.8171539,36.1093864],[-81.806221,36.1045609],[-81.7322693,36.0584755],[-81.8027878,35.960331],[-81.8598709,35.9703407],[-81.8808136,35.9895248],[-81.9008484,35.9946518],[-81.9221497,35.9825134],[-81.9413452,35.9549751]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.086,\"PERIMETER\":1.267,\"CNTY_\":1893,\"CNTY_ID\":1893,\"NAME\":\"Yadkin\",\"FIPS\":\"37197\",\"FIPSNO\":37197,\"CRESS_ID\":99,\"BIR74\":1269,\"SID74\":1,\"NWBIR74\":65,\"BIR79\":1568,\"SID79\":1,\"NWBIR79\":76},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4955444,36.0432663],[-80.6895752,36.0454788],[-80.8774109,36.0524063],[-80.874382,36.2338829],[-80.7826996,36.2485771],[-80.7662964,36.261837],[-80.7525635,36.258297],[-80.7343674,36.2647591],[-80.7240372,36.2584724],[-80.6966553,36.2590904],[-80.6674423,36.2461014],[-80.6243134,36.273098],[-80.5905991,36.2682762],[-80.5541534,36.2784309],[-80.5450134,36.2766571],[-80.5368805,36.2567368],[-80.476387,36.2547264],[-80.4563446,36.2425575],[-80.4408112,36.2194862],[-80.444809,36.1233063],[-80.4919815,36.1076965],[-80.5049896,36.0949402],[-80.5082474,36.0708847],[-80.4955444,36.0432663]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.128,\"PERIMETER\":1.554,\"CNTY_\":1897,\"CNTY_ID\":1897,\"NAME\":\"Franklin\",\"FIPS\":\"37069\",\"FIPSNO\":37069,\"CRESS_ID\":35,\"BIR74\":1399,\"SID74\":2,\"NWBIR74\":736,\"BIR79\":1863,\"SID79\":0,\"NWBIR79\":950},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.2545471,35.8155251],[-78.2668457,35.8483772],[-78.3084106,35.8934479],[-78.3295441,35.8878479],[-78.3601151,35.9186745],[-78.3944778,35.9323006],[-78.4311447,35.9727173],[-78.548027,36.0141258],[-78.5458527,36.0680885],[-78.4925232,36.1735878],[-78.416954,36.1621742],[-78.3808517,36.2247505],[-78.3460464,36.2251816],[-78.3087616,36.2600403],[-78.1347198,36.2365837],[-78.1096268,36.2135086],[-78.0583496,36.2113228],[-78.0062866,36.1959457],[-78.1309128,36.0214691],[-78.2545471,35.8155251]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.108,\"PERIMETER\":1.483,\"CNTY_\":1900,\"CNTY_ID\":1900,\"NAME\":\"Forsyth\",\"FIPS\":\"37067\",\"FIPSNO\":37067,\"CRESS_ID\":34,\"BIR74\":11858,\"SID74\":10,\"NWBIR74\":3919,\"BIR79\":15704,\"SID79\":18,\"NWBIR79\":5031},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0381012,36.0061836],[-80.1211472,36.021553],[-80.209877,36.0214272],[-80.2120667,35.9901237],[-80.3343048,35.9925652],[-80.3302841,35.9812355],[-80.3802414,35.9679298],[-80.4115906,35.9846115],[-80.4179764,36.0086327],[-80.4499512,36.0298386],[-80.4648666,36.0501938],[-80.4841309,36.0383224],[-80.4955444,36.0432663],[-80.5082474,36.0708847],[-80.5049896,36.0949402],[-80.4919815,36.1076965],[-80.444809,36.1233063],[-80.4408112,36.2194862],[-80.4563446,36.2425575],[-80.4530106,36.2570877],[-80.0256729,36.2502327],[-80.0381012,36.0061836]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.17,\"PERIMETER\":1.68,\"CNTY_\":1903,\"CNTY_ID\":1903,\"NAME\":\"Guilford\",\"FIPS\":\"37081\",\"FIPSNO\":37081,\"CRESS_ID\":41,\"BIR74\":16184,\"SID74\":23,\"NWBIR74\":5483,\"BIR79\":20543,\"SID79\":38,\"NWBIR79\":7089},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5378189,35.8909683],[-80.0426025,35.9168129],[-80.0381012,36.0061836],[-80.0256729,36.2502327],[-79.5305786,36.2361565],[-79.5378189,35.8909683]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.111,\"PERIMETER\":1.392,\"CNTY_\":1904,\"CNTY_ID\":1904,\"NAME\":\"Alamance\",\"FIPS\":\"37001\",\"FIPSNO\":37001,\"CRESS_ID\":1,\"BIR74\":4672,\"SID74\":13,\"NWBIR74\":1243,\"BIR79\":5767,\"SID79\":11,\"NWBIR79\":1397},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.2461929,35.8681526],[-79.2379913,35.8372459],[-79.5409851,35.8369904],[-79.5378189,35.8909683],[-79.5305786,36.2361565],[-79.5305099,36.2461357],[-79.2584991,36.2356873],[-79.2597733,36.0478935],[-79.2708206,35.9046021],[-79.2461929,35.8681526]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.18,\"PERIMETER\":2.151,\"CNTY_\":1905,\"CNTY_ID\":1905,\"NAME\":\"Bertie\",\"FIPS\":\"37015\",\"FIPSNO\":37015,\"CRESS_ID\":8,\"BIR74\":1324,\"SID74\":6,\"NWBIR74\":921,\"BIR79\":1616,\"SID79\":5,\"NWBIR79\":1161},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.7830658,35.8592339],[-76.8105316,35.8813095],[-76.8348389,35.8842278],[-76.8567276,35.8357811],[-76.8784866,35.8172913],[-76.8984833,35.8141823],[-76.904808,35.8679123],[-76.9360962,35.8945999],[-76.9907303,35.8778381],[-77.004425,35.8618393],[-77.048317,35.8574905],[-77.0341797,35.9143333],[-77.0408859,35.9317513],[-77.0662994,35.9360085],[-77.0900116,35.9252434],[-77.1886749,35.9312477],[-77.1958923,35.935955],[-77.1933975,35.9880943],[-77.215538,35.9890671],[-77.2138062,36.0053635],[-77.2767181,36.0276985],[-77.3152542,36.0480843],[-77.3322067,36.0679817],[-77.3098755,36.0874443],[-77.2410355,36.1013031],[-77.2574997,36.1184731],[-77.2559128,36.1306877],[-77.2704086,36.1555252],[-77.2935104,36.1628609],[-77.2986145,36.2115288],[-77.2346115,36.2145996],[-77.2176666,36.2409821],[-77.1300735,36.2334633],[-76.994751,36.2355804],[-76.98069,36.2302361],[-76.7450638,36.2339172],[-76.7606735,36.1445923],[-76.6937637,35.9929695],[-76.741127,35.9366264],[-76.6972198,35.9415436],[-76.7083206,35.9198341],[-76.7285995,35.9108582],[-76.7417221,35.8830757],[-76.761261,35.8645439],[-76.7830658,35.8592339]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.104,\"PERIMETER\":1.294,\"CNTY_\":1907,\"CNTY_ID\":1907,\"NAME\":\"Orange\",\"FIPS\":\"37135\",\"FIPSNO\":37135,\"CRESS_ID\":68,\"BIR74\":3164,\"SID74\":4,\"NWBIR74\":776,\"BIR79\":4478,\"SID79\":6,\"NWBIR79\":1086},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.0181351,35.8578644],[-79.0953674,35.8539429],[-79.2461929,35.8681526],[-79.2708206,35.9046021],[-79.2597733,36.0478935],[-79.2584991,36.2356873],[-79.1592712,36.2336693],[-78.9510803,36.2338371],[-79.0181351,35.8578644]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.077,\"PERIMETER\":1.271,\"CNTY_\":1908,\"CNTY_ID\":1908,\"NAME\":\"Durham\",\"FIPS\":\"37063\",\"FIPSNO\":37063,\"CRESS_ID\":32,\"BIR74\":7970,\"SID74\":16,\"NWBIR74\":3732,\"BIR79\":10432,\"SID79\":22,\"NWBIR79\":4948},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.0181351,35.8578644],[-78.9510803,36.2338371],[-78.8068008,36.231575],[-78.8103561,36.1145744],[-78.8040543,36.0809402],[-78.788414,36.0621834],[-78.7491226,36.063591],[-78.7533951,36.0114632],[-78.7281036,36.0270729],[-78.7161713,36.0264931],[-78.704155,35.9973259],[-78.7073441,35.976944],[-78.7341995,35.9345856],[-78.763504,35.9144745],[-78.8082962,35.9199257],[-78.8279572,35.8602295],[-78.9057159,35.8605156],[-79.0181351,35.8578644]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.142,\"PERIMETER\":1.64,\"CNTY_\":1913,\"CNTY_ID\":1913,\"NAME\":\"Nash\",\"FIPS\":\"37127\",\"FIPSNO\":37127,\"CRESS_ID\":64,\"BIR74\":4021,\"SID74\":8,\"NWBIR74\":1851,\"BIR79\":5189,\"SID79\":7,\"NWBIR79\":2274},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1869278,35.7251129],[-78.2056198,35.7253952],[-78.2115479,35.7381935],[-78.2340469,35.7457924],[-78.2545471,35.8155251],[-78.1309128,36.0214691],[-78.0062866,36.1959457],[-77.9851151,36.1774445],[-77.9733963,36.1890411],[-77.955864,36.1837502],[-77.9392319,36.1875496],[-77.9224014,36.1777306],[-77.9178391,36.1567802],[-77.8868408,36.1444397],[-77.8113022,36.1358185],[-77.8013687,36.1442566],[-77.7471695,36.1464233],[-77.7201843,36.1341133],[-77.7005081,36.1441689],[-77.8301468,35.854496],[-77.8449249,35.8355751],[-77.8730469,35.8447075],[-78.1869278,35.7251129]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.059,\"PERIMETER\":1.319,\"CNTY_\":1927,\"CNTY_ID\":1927,\"NAME\":\"Mitchell\",\"FIPS\":\"37121\",\"FIPSNO\":37121,\"CRESS_ID\":61,\"BIR74\":671,\"SID74\":0,\"NWBIR74\":1,\"BIR79\":919,\"SID79\":2,\"NWBIR79\":4},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.1188507,35.818531],[-82.1466522,35.8184814],[-82.1410141,35.9002724],[-82.1495667,35.9214478],[-82.1846085,35.9348755],[-82.1957703,35.9473763],[-82.1990509,36.00177],[-82.2321014,36.0038757],[-82.2406158,35.9842033],[-82.2588577,35.9856758],[-82.3016968,36.0293274],[-82.3096924,36.0114746],[-82.3296814,36.0142632],[-82.3402634,36.0253983],[-82.3444977,36.07024],[-82.3851776,36.0785065],[-82.4084244,36.0753174],[-82.3738556,36.0986977],[-82.3119278,36.1221504],[-82.2623062,36.1203766],[-82.2077332,36.1470146],[-82.1540527,36.1396217],[-82.1180801,36.0962563],[-82.0777588,36.1001396],[-82.0623245,36.0355263],[-82.0427246,36.0050087],[-82.0491028,35.9672356],[-82.0050659,35.9144402],[-81.9883652,35.9056435],[-81.983345,35.8875771],[-81.9908981,35.8724747],[-82.0346832,35.8535805],[-82.0979919,35.8438568],[-82.1188507,35.818531]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.131,\"PERIMETER\":1.521,\"CNTY_\":1928,\"CNTY_ID\":1928,\"NAME\":\"Edgecombe\",\"FIPS\":\"37065\",\"FIPSNO\":37065,\"CRESS_ID\":33,\"BIR74\":3657,\"SID74\":10,\"NWBIR74\":2186,\"BIR79\":4359,\"SID79\":9,\"NWBIR79\":2696},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.6712189,35.6702652],[-77.7331467,35.7395477],[-77.7574921,35.7981033],[-77.7550049,35.8248367],[-77.7671356,35.8368645],[-77.8301468,35.854496],[-77.7005081,36.1441689],[-77.6856232,36.1466026],[-77.6423569,36.1267014],[-77.6062546,36.097393],[-77.5478821,36.0884933],[-77.5366898,36.0823631],[-77.5358582,36.0555725],[-77.5251312,36.0353851],[-77.463974,36.0263824],[-77.4382172,36.0140343],[-77.4257431,35.9960632],[-77.4053116,35.9947166],[-77.3423691,35.9080048],[-77.3581009,35.8153114],[-77.3968048,35.8284187],[-77.4056931,35.8172646],[-77.4185791,35.8220863],[-77.4269943,35.808197],[-77.4547119,35.7938156],[-77.4732361,35.7996597],[-77.5055161,35.7667542],[-77.6712189,35.6702652]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.122,\"PERIMETER\":1.516,\"CNTY_\":1932,\"CNTY_ID\":1932,\"NAME\":\"Caldwell\",\"FIPS\":\"37027\",\"FIPSNO\":37027,\"CRESS_ID\":14,\"BIR74\":3609,\"SID74\":6,\"NWBIR74\":309,\"BIR79\":4249,\"SID79\":9,\"NWBIR79\":360},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3281326,35.7950592],[-81.3766556,35.7500343],[-81.417572,35.7559052],[-81.4571457,35.7799339],[-81.560257,35.7754478],[-81.5933685,35.8131256],[-81.701828,35.8687973],[-81.7484436,35.9207573],[-81.7734756,35.9222031],[-81.7756882,35.9439468],[-81.8027878,35.960331],[-81.7322693,36.0584755],[-81.806221,36.1045609],[-81.6590042,36.1175919],[-81.5461044,36.111393],[-81.5173111,36.0954323],[-81.4544373,36.0830574],[-81.4296341,36.0656624],[-81.3981476,36.056057],[-81.38871,36.0375671],[-81.3473511,36.015358],[-81.3218689,35.9893265],[-81.3292618,35.9892464],[-81.3395691,35.9292412],[-81.3306808,35.8758011],[-81.3372116,35.8276291],[-81.3281326,35.7950592]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.08,\"PERIMETER\":1.307,\"CNTY_\":1936,\"CNTY_ID\":1936,\"NAME\":\"Yancey\",\"FIPS\":\"37199\",\"FIPSNO\":37199,\"CRESS_ID\":100,\"BIR74\":770,\"SID74\":0,\"NWBIR74\":12,\"BIR79\":869,\"SID79\":1,\"NWBIR79\":10},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2792053,35.6975555],[-82.2815781,35.7202034],[-82.321846,35.7398491],[-82.3418503,35.7635078],[-82.3453979,35.8051949],[-82.3752518,35.8164024],[-82.4058151,35.8139725],[-82.4414825,35.8822289],[-82.4870911,35.9048843],[-82.4839478,35.9476089],[-82.5069351,35.9725418],[-82.4751968,35.9931755],[-82.4084244,36.0753174],[-82.3851776,36.0785065],[-82.3444977,36.07024],[-82.3402634,36.0253983],[-82.3296814,36.0142632],[-82.3096924,36.0114746],[-82.3016968,36.0293274],[-82.2588577,35.9856758],[-82.2406158,35.9842033],[-82.2321014,36.0038757],[-82.1990509,36.00177],[-82.1957703,35.9473763],[-82.1846085,35.9348755],[-82.1495667,35.9214478],[-82.1410141,35.9002724],[-82.1466522,35.8184814],[-82.1188507,35.818531],[-82.1545944,35.7983704],[-82.1642914,35.7605247],[-82.2117844,35.7169876],[-82.2792053,35.6975555]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.899,\"CNTY_\":1937,\"CNTY_ID\":1937,\"NAME\":\"Martin\",\"FIPS\":\"37117\",\"FIPSNO\":37117,\"CRESS_ID\":59,\"BIR74\":1549,\"SID74\":2,\"NWBIR74\":883,\"BIR79\":1849,\"SID79\":1,\"NWBIR79\":1033},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1784592,35.732193],[-77.2076645,35.755127],[-77.2608185,35.7590904],[-77.2645035,35.7827797],[-77.3581009,35.8153114],[-77.3423691,35.9080048],[-77.4053116,35.9947166],[-77.3322067,36.0679817],[-77.3152542,36.0480843],[-77.2767181,36.0276985],[-77.2138062,36.0053635],[-77.215538,35.9890671],[-77.1933975,35.9880943],[-77.1958923,35.935955],[-77.1886749,35.9312477],[-77.0900116,35.9252434],[-77.0662994,35.9360085],[-77.0408859,35.9317513],[-77.0341797,35.9143333],[-77.048317,35.8574905],[-77.004425,35.8618393],[-76.9907303,35.8778381],[-76.9360962,35.8945999],[-76.904808,35.8679123],[-76.8984833,35.8141823],[-76.8784866,35.8172913],[-76.8567276,35.8357811],[-76.8348389,35.8842278],[-76.8105316,35.8813095],[-76.7830658,35.8592339],[-76.8066788,35.8108406],[-76.805275,35.7903748],[-76.8259583,35.7568817],[-76.8383102,35.7054558],[-76.9799118,35.6501274],[-77.1612854,35.7367783],[-77.1784592,35.732193]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.219,\"PERIMETER\":2.13,\"CNTY_\":1938,\"CNTY_ID\":1938,\"NAME\":\"Wake\",\"FIPS\":\"37183\",\"FIPSNO\":37183,\"CRESS_ID\":92,\"BIR74\":14484,\"SID74\":16,\"NWBIR74\":4397,\"BIR79\":20857,\"SID79\":31,\"NWBIR79\":6221},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.9210739,35.5788574],[-78.9988098,35.6013222],[-78.9388885,35.7614441],[-78.9444351,35.7701149],[-78.9057159,35.8605156],[-78.8279572,35.8602295],[-78.8082962,35.9199257],[-78.763504,35.9144745],[-78.7341995,35.9345856],[-78.7073441,35.976944],[-78.704155,35.9973259],[-78.7161713,36.0264931],[-78.7281036,36.0270729],[-78.7533951,36.0114632],[-78.7491226,36.063591],[-78.6955719,36.0666466],[-78.548027,36.0141258],[-78.4311447,35.9727173],[-78.3944778,35.9323006],[-78.3601151,35.9186745],[-78.3295441,35.8878479],[-78.3084106,35.8934479],[-78.2668457,35.8483772],[-78.2545471,35.8155251],[-78.4776382,35.6956139],[-78.7032166,35.5199394],[-78.9210739,35.5788574]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.601,\"CNTY_\":1946,\"CNTY_ID\":1946,\"NAME\":\"Madison\",\"FIPS\":\"37115\",\"FIPSNO\":37115,\"CRESS_ID\":58,\"BIR74\":765,\"SID74\":2,\"NWBIR74\":5,\"BIR79\":926,\"SID79\":2,\"NWBIR79\":3},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.8959732,35.9483604],[-82.8562698,35.9474258],[-82.80867,35.9208717],[-82.7764435,35.9565735],[-82.7735977,35.9875031],[-82.7632294,35.9995461],[-82.6438904,36.0517235],[-82.6280441,36.0543404],[-82.6044006,36.0429878],[-82.5922318,36.0224495],[-82.6058044,36.0035477],[-82.5993042,35.9632988],[-82.5541458,35.9561081],[-82.5069351,35.9725418],[-82.4839478,35.9476089],[-82.4870911,35.9048843],[-82.4414825,35.8822289],[-82.4058151,35.8139725],[-82.5005493,35.7961273],[-82.766304,35.6940002],[-82.8056259,35.684906],[-82.8432693,35.6917267],[-82.8811111,35.6735611],[-82.9075394,35.7278481],[-82.9521866,35.7389984],[-82.9430466,35.7664642],[-82.9627533,35.791851],[-82.9068222,35.8722153],[-82.9140701,35.9278679],[-82.8959732,35.9483604]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.155,\"PERIMETER\":1.781,\"CNTY_\":1947,\"CNTY_ID\":1947,\"NAME\":\"Iredell\",\"FIPS\":\"37097\",\"FIPSNO\":37097,\"CRESS_ID\":49,\"BIR74\":4139,\"SID74\":4,\"NWBIR74\":1144,\"BIR79\":5400,\"SID79\":5,\"NWBIR79\":1305},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.7265167,35.5075684],[-80.7762299,35.5068092],[-80.9553452,35.5091209],[-80.9510727,35.5286674],[-80.9614334,35.5435638],[-80.9312744,35.6195908],[-81.0035782,35.6970558],[-81.0547791,35.7134018],[-81.0722046,35.7436485],[-81.1088867,35.7719002],[-81.0491028,35.835968],[-80.9953461,35.9770775],[-81.0205688,36.034935],[-80.9889526,36.0533485],[-80.8774109,36.0524063],[-80.6895752,36.0454788],[-80.7059708,35.8516579],[-80.7661209,35.6820374],[-80.7265167,35.5075684]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.069,\"PERIMETER\":1.201,\"CNTY_\":1948,\"CNTY_ID\":1948,\"NAME\":\"Davie\",\"FIPS\":\"37059\",\"FIPSNO\":37059,\"CRESS_ID\":30,\"BIR74\":1207,\"SID74\":1,\"NWBIR74\":148,\"BIR79\":1438,\"SID79\":3,\"NWBIR79\":177},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.4567719,35.7457962],[-80.4886932,35.7756157],[-80.5267258,35.7818069],[-80.5723267,35.8138123],[-80.6075592,35.822258],[-80.6349411,35.8402596],[-80.7059708,35.8516579],[-80.6895752,36.0454788],[-80.4955444,36.0432663],[-80.4841309,36.0383224],[-80.4648666,36.0501938],[-80.4499512,36.0298386],[-80.4179764,36.0086327],[-80.4115906,35.9846115],[-80.3802414,35.9679298],[-80.3630676,35.9421234],[-80.3617096,35.8958511],[-80.4059372,35.8843689],[-80.3865051,35.8585701],[-80.3864365,35.8454132],[-80.3954849,35.8394852],[-80.4148026,35.8448639],[-80.4260712,35.830307],[-80.4465027,35.8306847],[-80.4577942,35.8224754],[-80.4794235,35.8332787],[-80.4728851,35.7861176],[-80.4506454,35.7648773],[-80.4567719,35.7457962]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.066,\"PERIMETER\":1.07,\"CNTY_\":1950,\"CNTY_ID\":1950,\"NAME\":\"Alexander\",\"FIPS\":\"37003\",\"FIPSNO\":37003,\"CRESS_ID\":2,\"BIR74\":1333,\"SID74\":0,\"NWBIR74\":128,\"BIR79\":1683,\"SID79\":2,\"NWBIR79\":150},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.1088867,35.7719002],[-81.1272812,35.7889671],[-81.1414032,35.8233185],[-81.3281326,35.7950592],[-81.3372116,35.8276291],[-81.3306808,35.8758011],[-81.3395691,35.9292412],[-81.3292618,35.9892464],[-81.3218689,35.9893265],[-81.2360077,36.0238228],[-81.1574631,36.0209808],[-81.1240616,36.0312843],[-81.0840836,36.0207672],[-81.0205688,36.034935],[-80.9953461,35.9770775],[-81.0491028,35.835968],[-81.1088867,35.7719002]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.145,\"PERIMETER\":1.791,\"CNTY_\":1951,\"CNTY_ID\":1951,\"NAME\":\"Davidson\",\"FIPS\":\"37057\",\"FIPSNO\":37057,\"CRESS_ID\":29,\"BIR74\":5509,\"SID74\":8,\"NWBIR74\":736,\"BIR79\":7143,\"SID79\":8,\"NWBIR79\":941},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0644073,35.5056992],[-80.1819077,35.5051193],[-80.2092133,35.5745125],[-80.2512207,35.6248016],[-80.2857819,35.6369743],[-80.325592,35.6831551],[-80.3262863,35.7140121],[-80.3772583,35.7106857],[-80.4567719,35.7457962],[-80.4506454,35.7648773],[-80.4728851,35.7861176],[-80.4794235,35.8332787],[-80.4577942,35.8224754],[-80.4465027,35.8306847],[-80.4260712,35.830307],[-80.4148026,35.8448639],[-80.3954849,35.8394852],[-80.3864365,35.8454132],[-80.3865051,35.8585701],[-80.4059372,35.8843689],[-80.3617096,35.8958511],[-80.3630676,35.9421234],[-80.3802414,35.9679298],[-80.3302841,35.9812355],[-80.3343048,35.9925652],[-80.2120667,35.9901237],[-80.209877,36.0214272],[-80.1211472,36.021553],[-80.0381012,36.0061836],[-80.0426025,35.9168129],[-80.0644073,35.5056992]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.134,\"PERIMETER\":1.755,\"CNTY_\":1958,\"CNTY_ID\":1958,\"NAME\":\"Burke\",\"FIPS\":\"37023\",\"FIPSNO\":37023,\"CRESS_ID\":12,\"BIR74\":3573,\"SID74\":5,\"NWBIR74\":326,\"BIR79\":4314,\"SID79\":15,\"NWBIR79\":407},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.8162842,35.574379],[-81.8656235,35.718853],[-81.9855957,35.7999535],[-81.975296,35.8182793],[-81.9329834,35.8275986],[-81.9062576,35.8479958],[-81.9062271,35.8920135],[-81.9413452,35.9549751],[-81.9221497,35.9825134],[-81.9008484,35.9946518],[-81.8808136,35.9895248],[-81.8598709,35.9703407],[-81.8027878,35.960331],[-81.7756882,35.9439468],[-81.7734756,35.9222031],[-81.7484436,35.9207573],[-81.701828,35.8687973],[-81.5933685,35.8131256],[-81.560257,35.7754478],[-81.4571457,35.7799339],[-81.417572,35.7559052],[-81.3766556,35.7500343],[-81.4057236,35.6975098],[-81.495697,35.6065483],[-81.5236435,35.5612602],[-81.5625381,35.5553093],[-81.5881119,35.5617752],[-81.6439056,35.553299],[-81.6843185,35.5654373],[-81.6951981,35.5716362],[-81.7008209,35.5956116],[-81.7496109,35.6017113],[-81.7656097,35.5842247],[-81.8162842,35.574379]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.1,\"PERIMETER\":1.331,\"CNTY_\":1962,\"CNTY_ID\":1962,\"NAME\":\"Washington\",\"FIPS\":\"37187\",\"FIPSNO\":37187,\"CRESS_ID\":94,\"BIR74\":990,\"SID74\":5,\"NWBIR74\":521,\"BIR79\":1141,\"SID79\":0,\"NWBIR79\":651},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.408432,35.6991158],[-76.6338196,35.7030029],[-76.8383102,35.7054558],[-76.8259583,35.7568817],[-76.805275,35.7903748],[-76.8066788,35.8108406],[-76.7830658,35.8592339],[-76.761261,35.8645439],[-76.7417221,35.8830757],[-76.7285995,35.9108582],[-76.7083206,35.9198341],[-76.6972198,35.9415436],[-76.4094696,35.9774666],[-76.3714828,35.9323425],[-76.3835602,35.9004135],[-76.3581924,35.8605919],[-76.408699,35.7894821],[-76.408432,35.6991158]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.099,\"PERIMETER\":1.411,\"CNTY_\":1963,\"CNTY_ID\":1963,\"NAME\":\"Tyrrell\",\"FIPS\":\"37177\",\"FIPSNO\":37177,\"CRESS_ID\":89,\"BIR74\":248,\"SID74\":0,\"NWBIR74\":116,\"BIR79\":319,\"SID79\":0,\"NWBIR79\":141},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.167305,35.6968422],[-76.2102356,35.6043892],[-76.2327957,35.5946655],[-76.2976303,35.6116943],[-76.2734451,35.6894989],[-76.408432,35.6991158],[-76.408699,35.7894821],[-76.3581924,35.8605919],[-76.3835602,35.9004135],[-76.3714828,35.9323425],[-76.213768,35.9768753],[-76.0896378,35.9629135],[-76.0260468,35.9204254],[-76.0759125,35.7568016],[-76.0430679,35.6838493],[-76.167305,35.6968422]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.116,\"PERIMETER\":1.664,\"CNTY_\":1964,\"CNTY_ID\":1964,\"NAME\":\"McDowell\",\"FIPS\":\"37111\",\"FIPSNO\":37111,\"CRESS_ID\":56,\"BIR74\":1946,\"SID74\":5,\"NWBIR74\":134,\"BIR79\":2215,\"SID79\":5,\"NWBIR79\":128},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.8162842,35.574379],[-81.8318939,35.5650635],[-81.840271,35.5372429],[-81.8621521,35.5305481],[-81.9670486,35.5215874],[-82.0016022,35.5459747],[-82.0361862,35.5285873],[-82.1167526,35.5190048],[-82.1707077,35.5284653],[-82.2680054,35.5688591],[-82.2906723,35.5893021],[-82.2653427,35.6124878],[-82.2842407,35.6389046],[-82.2891846,35.6714897],[-82.2792053,35.6975555],[-82.2117844,35.7169876],[-82.1642914,35.7605247],[-82.1545944,35.7983704],[-82.1188507,35.818531],[-82.0979919,35.8438568],[-82.0346832,35.8535805],[-81.9908981,35.8724747],[-81.983345,35.8875771],[-81.9883652,35.9056435],[-81.9470215,35.9104118],[-81.9449539,35.9186134],[-81.9613953,35.9392204],[-81.9413452,35.9549751],[-81.9062271,35.8920135],[-81.9062576,35.8479958],[-81.9329834,35.8275986],[-81.975296,35.8182793],[-81.9855957,35.7999535],[-81.8656235,35.718853],[-81.8162842,35.574379]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.201,\"PERIMETER\":1.805,\"CNTY_\":1968,\"CNTY_ID\":1968,\"NAME\":\"Randolph\",\"FIPS\":\"37151\",\"FIPSNO\":37151,\"CRESS_ID\":76,\"BIR74\":4456,\"SID74\":7,\"NWBIR74\":384,\"BIR79\":5711,\"SID79\":12,\"NWBIR79\":483},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.7649918,35.5059357],[-80.0644073,35.5056992],[-80.0426025,35.9168129],[-79.5378189,35.8909683],[-79.5409851,35.8369904],[-79.5553589,35.5130501],[-79.7649918,35.5059357]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.18,\"PERIMETER\":2.142,\"CNTY_\":1973,\"CNTY_ID\":1973,\"NAME\":\"Chatham\",\"FIPS\":\"37037\",\"FIPSNO\":37037,\"CRESS_ID\":19,\"BIR74\":1646,\"SID74\":2,\"NWBIR74\":591,\"BIR79\":2398,\"SID79\":3,\"NWBIR79\":687},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.5553589,35.5130501],[-79.5409851,35.8369904],[-79.2379913,35.8372459],[-79.2461929,35.8681526],[-79.0953674,35.8539429],[-79.0181351,35.8578644],[-78.9057159,35.8605156],[-78.9444351,35.7701149],[-78.9388885,35.7614441],[-78.9988098,35.6013222],[-78.9210739,35.5788574],[-78.9744873,35.5171547],[-79.0384979,35.5494614],[-79.0672913,35.5987053],[-79.1326065,35.6246147],[-79.1942444,35.5751305],[-79.2097321,35.5534515],[-79.2205048,35.5508003],[-79.2271347,35.5653648],[-79.2760925,35.5302773],[-79.2861328,35.5444069],[-79.3053665,35.5427055],[-79.3150101,35.5391312],[-79.3128586,35.5268669],[-79.3315506,35.5219803],[-79.3429489,35.5102425],[-79.5553589,35.5130501]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.094,\"PERIMETER\":1.307,\"CNTY_\":1979,\"CNTY_ID\":1979,\"NAME\":\"Wilson\",\"FIPS\":\"37195\",\"FIPSNO\":37195,\"CRESS_ID\":98,\"BIR74\":3702,\"SID74\":11,\"NWBIR74\":1827,\"BIR79\":4706,\"SID79\":13,\"NWBIR79\":2330},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.0653305,35.5820389],[-78.1249008,35.5975189],[-78.1624451,35.6829834],[-78.1618042,35.7092934],[-78.1869278,35.7251129],[-77.8730469,35.8447075],[-77.8449249,35.8355751],[-77.8301468,35.854496],[-77.7671356,35.8368645],[-77.7550049,35.8248367],[-77.7574921,35.7981033],[-77.7331467,35.7395477],[-77.6712189,35.6702652],[-77.6983261,35.6539993],[-77.8262939,35.5742569],[-77.827179,35.582901],[-78.0021362,35.5759964],[-78.0604858,35.5946693],[-78.0653305,35.5820389]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.134,\"PERIMETER\":1.59,\"CNTY_\":1980,\"CNTY_ID\":1980,\"NAME\":\"Rowan\",\"FIPS\":\"37159\",\"FIPSNO\":37159,\"CRESS_ID\":80,\"BIR74\":4606,\"SID74\":3,\"NWBIR74\":1057,\"BIR79\":6427,\"SID79\":8,\"NWBIR79\":1504},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.2982407,35.4948997],[-80.7265167,35.5075684],[-80.7661209,35.6820374],[-80.7059708,35.8516579],[-80.6349411,35.8402596],[-80.6075592,35.822258],[-80.5723267,35.8138123],[-80.5267258,35.7818069],[-80.4886932,35.7756157],[-80.4567719,35.7457962],[-80.3772583,35.7106857],[-80.3262863,35.7140121],[-80.325592,35.6831551],[-80.2857819,35.6369743],[-80.2512207,35.6248016],[-80.2092133,35.5745125],[-80.1819077,35.5051193],[-80.2982407,35.4948997]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.168,\"PERIMETER\":1.791,\"CNTY_\":1984,\"CNTY_ID\":1984,\"NAME\":\"Pitt\",\"FIPS\":\"37147\",\"FIPSNO\":37147,\"CRESS_ID\":74,\"BIR74\":5094,\"SID74\":14,\"NWBIR74\":2620,\"BIR79\":6635,\"SID79\":11,\"NWBIR79\":3059},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.4738846,35.4215279],[-77.5045624,35.4848328],[-77.5039368,35.503891],[-77.5210495,35.5165062],[-77.5234299,35.5301781],[-77.5495758,35.5257263],[-77.5646439,35.5319405],[-77.6341324,35.5878258],[-77.6983261,35.6539993],[-77.6712189,35.6702652],[-77.5055161,35.7667542],[-77.4732361,35.7996597],[-77.4547119,35.7938156],[-77.4269943,35.808197],[-77.4185791,35.8220863],[-77.4056931,35.8172646],[-77.3968048,35.8284187],[-77.3581009,35.8153114],[-77.2645035,35.7827797],[-77.2608185,35.7590904],[-77.2076645,35.755127],[-77.1784592,35.732193],[-77.1774216,35.7144623],[-77.1922379,35.7120934],[-77.1955185,35.699913],[-77.1754379,35.6762848],[-77.1872101,35.6643066],[-77.1746826,35.6354103],[-77.1520538,35.6198845],[-77.1483459,35.5980034],[-77.1193924,35.5854988],[-77.1037674,35.5501862],[-77.1473999,35.5475883],[-77.1722107,35.5191231],[-77.1949615,35.4229546],[-77.2112045,35.3956413],[-77.2405472,35.3799858],[-77.2443008,35.3541908],[-77.2641907,35.3501129],[-77.2938004,35.373951],[-77.3542175,35.323555],[-77.3861618,35.3292618],[-77.4014893,35.3427696],[-77.4439468,35.3545952],[-77.4738846,35.4215279]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.106,\"PERIMETER\":1.444,\"CNTY_\":1986,\"CNTY_ID\":1986,\"NAME\":\"Catawba\",\"FIPS\":\"37035\",\"FIPSNO\":37035,\"CRESS_ID\":18,\"BIR74\":5754,\"SID74\":5,\"NWBIR74\":790,\"BIR79\":6883,\"SID79\":21,\"NWBIR79\":914},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.9614334,35.5435638],[-81.5236435,35.5612602],[-81.495697,35.6065483],[-81.4057236,35.6975098],[-81.3766556,35.7500343],[-81.3281326,35.7950592],[-81.1414032,35.8233185],[-81.1272812,35.7889671],[-81.1088867,35.7719002],[-81.0722046,35.7436485],[-81.0547791,35.7134018],[-81.0035782,35.6970558],[-80.9312744,35.6195908],[-80.9614334,35.5435638]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.168,\"PERIMETER\":1.995,\"CNTY_\":1988,\"CNTY_ID\":1988,\"NAME\":\"Buncombe\",\"FIPS\":\"37021\",\"FIPSNO\":37021,\"CRESS_ID\":11,\"BIR74\":7515,\"SID74\":9,\"NWBIR74\":930,\"BIR79\":9956,\"SID79\":18,\"NWBIR79\":1206},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2581024,35.4637299],[-82.322876,35.4951591],[-82.3709641,35.4787712],[-82.3648376,35.463459],[-82.3736877,35.4573784],[-82.4090652,35.4689217],[-82.4749222,35.4444046],[-82.519516,35.4439163],[-82.5269012,35.4283218],[-82.5511322,35.4268951],[-82.5639343,35.4384232],[-82.6186829,35.4376755],[-82.6689835,35.4551659],[-82.7141571,35.4391518],[-82.7438889,35.4180336],[-82.7808838,35.4416885],[-82.7947235,35.4649696],[-82.7706299,35.5327339],[-82.7720337,35.5712929],[-82.8133392,35.6175346],[-82.8231049,35.6213875],[-82.8448639,35.6131477],[-82.8655243,35.6358032],[-82.8811111,35.6735611],[-82.8432693,35.6917267],[-82.8056259,35.684906],[-82.766304,35.6940002],[-82.5005493,35.7961273],[-82.4058151,35.8139725],[-82.3752518,35.8164024],[-82.3453979,35.8051949],[-82.3418503,35.7635078],[-82.321846,35.7398491],[-82.2815781,35.7202034],[-82.2792053,35.6975555],[-82.2891846,35.6714897],[-82.2842407,35.6389046],[-82.2653427,35.6124878],[-82.2906723,35.5893021],[-82.2680054,35.5688591],[-82.1707077,35.5284653],[-82.222908,35.5156937],[-82.2276001,35.4829216],[-82.2401581,35.4681549],[-82.2581024,35.4637299]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.207,\"PERIMETER\":1.851,\"CNTY_\":1989,\"CNTY_ID\":1989,\"NAME\":\"Johnston\",\"FIPS\":\"37101\",\"FIPSNO\":37101,\"CRESS_ID\":51,\"BIR74\":3999,\"SID74\":6,\"NWBIR74\":1165,\"BIR79\":4780,\"SID79\":13,\"NWBIR79\":1349},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.5387421,35.3151169],[-78.5394669,35.3364639],[-78.6008224,35.4030304],[-78.6231766,35.4464149],[-78.6887436,35.5075264],[-78.7089691,35.5141029],[-78.7032166,35.5199394],[-78.4776382,35.6956139],[-78.2545471,35.8155251],[-78.2340469,35.7457924],[-78.2115479,35.7381935],[-78.2056198,35.7253952],[-78.1869278,35.7251129],[-78.1618042,35.7092934],[-78.1624451,35.6829834],[-78.1249008,35.5975189],[-78.0653305,35.5820389],[-78.1459732,35.4289932],[-78.1568909,35.3506317],[-78.1774597,35.3395996],[-78.2090378,35.3391762],[-78.2372284,35.3146324],[-78.2681656,35.3173599],[-78.3101273,35.2802849],[-78.4166794,35.2490768],[-78.4936218,35.2596207],[-78.5387421,35.3151169]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.144,\"PERIMETER\":1.69,\"CNTY_\":1996,\"CNTY_ID\":1996,\"NAME\":\"Haywood\",\"FIPS\":\"37087\",\"FIPSNO\":37087,\"CRESS_ID\":44,\"BIR74\":2110,\"SID74\":2,\"NWBIR74\":57,\"BIR79\":2463,\"SID79\":8,\"NWBIR79\":62},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.7438889,35.4180336],[-82.8332367,35.3155708],[-82.9191132,35.2907677],[-82.9536209,35.3085289],[-82.9853592,35.3563232],[-83.0385971,35.3899307],[-83.0460434,35.4069939],[-83.0877151,35.4463272],[-83.1282349,35.4566154],[-83.1423721,35.4843941],[-83.1813965,35.5124092],[-83.1570206,35.5516624],[-83.1803741,35.5828209],[-83.1781006,35.623291],[-83.1951294,35.6378174],[-83.1842957,35.6630783],[-83.2152557,35.6853981],[-83.2591248,35.6910095],[-83.2533035,35.7007065],[-83.2438507,35.7182159],[-83.1853485,35.7288857],[-83.1436615,35.7626839],[-83.118187,35.7638092],[-83.0599594,35.7825775],[-82.9870071,35.7739906],[-82.9627533,35.791851],[-82.9430466,35.7664642],[-82.9521866,35.7389984],[-82.9075394,35.7278481],[-82.8811111,35.6735611],[-82.8655243,35.6358032],[-82.8448639,35.6131477],[-82.8231049,35.6213875],[-82.8133392,35.6175346],[-82.7720337,35.5712929],[-82.7706299,35.5327339],[-82.7947235,35.4649696],[-82.7808838,35.4416885],[-82.7438889,35.4180336]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.094,\"PERIMETER\":3.64,\"CNTY_\":2000,\"CNTY_ID\":2000,\"NAME\":\"Dare\",\"FIPS\":\"37055\",\"FIPSNO\":37055,\"CRESS_ID\":28,\"BIR74\":521,\"SID74\":0,\"NWBIR74\":43,\"BIR79\":1059,\"SID79\":1,\"NWBIR79\":73},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-75.7831726,36.225193],[-75.7731552,36.2292557],[-75.5449677,35.7883606],[-75.7027359,36.0498619],[-75.7408676,36.0503235],[-75.7831726,36.225193]]],[[[-75.8914948,35.6312675],[-75.9080276,35.665638],[-76.0212097,35.6690941],[-75.987854,35.8927078],[-75.8180542,35.9235191],[-75.7489624,35.869339],[-75.7293701,35.6651726],[-75.7790527,35.5786858],[-75.8914948,35.6312675]]],[[[-75.4912186,35.6704979],[-75.5336227,35.768856],[-75.4569778,35.6173973],[-75.5262985,35.2279167],[-75.7492905,35.189827],[-75.6915665,35.2349892],[-75.5214844,35.2813568],[-75.4754181,35.5644951],[-75.4912186,35.6704979]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.203,\"PERIMETER\":3.197,\"CNTY_\":2004,\"CNTY_ID\":2004,\"NAME\":\"Beaufort\",\"FIPS\":\"37013\",\"FIPSNO\":37013,\"CRESS_ID\":7,\"BIR74\":2692,\"SID74\":7,\"NWBIR74\":1131,\"BIR79\":2909,\"SID79\":4,\"NWBIR79\":1163},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1037674,35.5501862],[-77.1193924,35.5854988],[-77.1483459,35.5980034],[-77.1520538,35.6198845],[-77.1746826,35.6354103],[-77.1872101,35.6643066],[-77.1754379,35.6762848],[-77.1955185,35.699913],[-77.1922379,35.7120934],[-77.1774216,35.7144623],[-77.1784592,35.732193],[-77.1612854,35.7367783],[-76.9799118,35.6501274],[-76.8383102,35.7054558],[-76.6338196,35.7030029],[-76.6089172,35.6641541],[-76.6079483,35.635067],[-76.5858765,35.6094551],[-76.5395966,35.5940361],[-76.5189438,35.5776443],[-76.4925385,35.5417862],[-76.6381989,35.5203362],[-76.6287689,35.4378967],[-76.7053757,35.4119339],[-77.1037674,35.5501862]]],[[[-76.6145172,35.2729187],[-76.640213,35.2372475],[-76.8505707,35.2171669],[-76.8976059,35.2515717],[-77.1949615,35.4229546],[-77.1722107,35.5191231],[-77.1473999,35.5475883],[-77.1037674,35.5501862],[-76.9831848,35.4365005],[-76.6949005,35.3504257],[-76.6145172,35.2729187]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.141,\"PERIMETER\":2.316,\"CNTY_\":2013,\"CNTY_ID\":2013,\"NAME\":\"Swain\",\"FIPS\":\"37173\",\"FIPSNO\":37173,\"CRESS_ID\":87,\"BIR74\":675,\"SID74\":3,\"NWBIR74\":281,\"BIR79\":883,\"SID79\":2,\"NWBIR79\":406},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.3318176,35.3193436],[-83.4246826,35.3153191],[-83.4732285,35.2916451],[-83.6791916,35.2722206],[-83.6900864,35.2877808],[-83.6893845,35.3082428],[-83.6342163,35.334034],[-83.5988846,35.3623657],[-83.5803833,35.4010849],[-83.5867157,35.4276886],[-83.6323242,35.4367409],[-83.6536102,35.4210968],[-83.744957,35.4414024],[-83.8549881,35.4501266],[-83.8798904,35.4620285],[-83.9300766,35.4490166],[-83.9547043,35.4554596],[-83.9100113,35.4764786],[-83.8812256,35.5105858],[-83.8302002,35.519062],[-83.7758789,35.5526047],[-83.6728745,35.5649719],[-83.6138611,35.5717392],[-83.5610352,35.5551758],[-83.5057983,35.5595512],[-83.4582901,35.5972786],[-83.3870926,35.6252174],[-83.3430252,35.6532593],[-83.2984161,35.6563263],[-83.2591248,35.6910095],[-83.2152557,35.6853981],[-83.1842957,35.6630783],[-83.1951294,35.6378174],[-83.1781006,35.623291],[-83.1803741,35.5828209],[-83.1570206,35.5516624],[-83.1813965,35.5124092],[-83.2266617,35.5134544],[-83.2473068,35.5069885],[-83.3098602,35.4634743],[-83.3530273,35.4558983],[-83.3647156,35.4133301],[-83.3298111,35.3639107],[-83.3318176,35.3193436]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.07,\"PERIMETER\":1.105,\"CNTY_\":2016,\"CNTY_ID\":2016,\"NAME\":\"Greene\",\"FIPS\":\"37079\",\"FIPSNO\":37079,\"CRESS_ID\":40,\"BIR74\":870,\"SID74\":4,\"NWBIR74\":534,\"BIR79\":1178,\"SID79\":4,\"NWBIR79\":664},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.8051834,35.3645897],[-77.8041077,35.4017982],[-77.8305817,35.4236259],[-77.8262939,35.5742569],[-77.6983261,35.6539993],[-77.6341324,35.5878258],[-77.5646439,35.5319405],[-77.5495758,35.5257263],[-77.5234299,35.5301781],[-77.5210495,35.5165062],[-77.5039368,35.503891],[-77.5045624,35.4848328],[-77.4738846,35.4215279],[-77.4946747,35.407444],[-77.5349731,35.4178238],[-77.537178,35.4019814],[-77.5587234,35.3810883],[-77.6218033,35.3664856],[-77.6660538,35.3396721],[-77.6844711,35.3459396],[-77.6984177,35.3698196],[-77.7606964,35.3619385],[-77.8051834,35.3645897]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.065,\"PERIMETER\":1.093,\"CNTY_\":2026,\"CNTY_ID\":2026,\"NAME\":\"Lee\",\"FIPS\":\"37105\",\"FIPSNO\":37105,\"CRESS_ID\":53,\"BIR74\":2252,\"SID74\":5,\"NWBIR74\":736,\"BIR79\":2949,\"SID79\":6,\"NWBIR79\":905},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.1824417,35.3045387],[-79.2643204,35.3445702],[-79.284729,35.392807],[-79.3031998,35.4088058],[-79.324585,35.4148293],[-79.3310928,35.4448204],[-79.3624878,35.4704132],[-79.3436737,35.491642],[-79.3429489,35.5102425],[-79.3315506,35.5219803],[-79.3128586,35.5268669],[-79.3150101,35.5391312],[-79.3053665,35.5427055],[-79.2861328,35.5444069],[-79.2760925,35.5302773],[-79.2271347,35.5653648],[-79.2205048,35.5508003],[-79.2097321,35.5534515],[-79.1942444,35.5751305],[-79.1326065,35.6246147],[-79.0672913,35.5987053],[-79.0384979,35.5494614],[-78.9744873,35.5171547],[-79.1824417,35.3045387]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.146,\"PERIMETER\":1.778,\"CNTY_\":2027,\"CNTY_ID\":2027,\"NAME\":\"Rutherford\",\"FIPS\":\"37161\",\"FIPSNO\":37161,\"CRESS_ID\":81,\"BIR74\":2992,\"SID74\":12,\"NWBIR74\":495,\"BIR79\":3543,\"SID79\":8,\"NWBIR79\":576},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.9714432,35.188282],[-81.9645157,35.2474251],[-82.0515823,35.3231277],[-82.0841522,35.3393555],[-82.1221695,35.3886185],[-82.1551285,35.3971024],[-82.2582779,35.3933563],[-82.2787247,35.4356422],[-82.2746811,35.4516068],[-82.2581024,35.4637299],[-82.2401581,35.4681549],[-82.2276001,35.4829216],[-82.222908,35.5156937],[-82.1707077,35.5284653],[-82.1167526,35.5190048],[-82.0361862,35.5285873],[-82.0016022,35.5459747],[-81.9670486,35.5215874],[-81.8621521,35.5305481],[-81.840271,35.5372429],[-81.8318939,35.5650635],[-81.8162842,35.574379],[-81.7656097,35.5842247],[-81.7496109,35.6017113],[-81.7008209,35.5956116],[-81.6951981,35.5716362],[-81.6843185,35.5654373],[-81.6976852,35.3532639],[-81.7371674,35.2541733],[-81.759491,35.2206993],[-81.765358,35.1824722],[-81.8705902,35.1831169],[-81.9714432,35.188282]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.142,\"PERIMETER\":1.655,\"CNTY_\":2029,\"CNTY_ID\":2029,\"NAME\":\"Wayne\",\"FIPS\":\"37191\",\"FIPSNO\":37191,\"CRESS_ID\":96,\"BIR74\":6638,\"SID74\":18,\"NWBIR74\":2593,\"BIR79\":8227,\"SID79\":23,\"NWBIR79\":3073},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1631927,35.1822891],[-78.1651764,35.1932182],[-78.2574005,35.2209511],[-78.3101273,35.2802849],[-78.2681656,35.3173599],[-78.2372284,35.3146324],[-78.2090378,35.3391762],[-78.1774597,35.3395996],[-78.1568909,35.3506317],[-78.1459732,35.4289932],[-78.0653305,35.5820389],[-78.0604858,35.5946693],[-78.0021362,35.5759964],[-77.827179,35.582901],[-77.8262939,35.5742569],[-77.8305817,35.4236259],[-77.8041077,35.4017982],[-77.8051834,35.3645897],[-77.8300629,35.34235],[-77.8365784,35.1717415],[-77.8876724,35.1549644],[-77.8941574,35.1441803],[-77.9139786,35.1599731],[-77.9446945,35.168232],[-77.9639282,35.1640244],[-78.0021591,35.1864777],[-78.0365067,35.1856918],[-78.087532,35.1701851],[-78.1631927,35.1822891]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.154,\"PERIMETER\":1.68,\"CNTY_\":2030,\"CNTY_ID\":2030,\"NAME\":\"Harnett\",\"FIPS\":\"37085\",\"FIPSNO\":37085,\"CRESS_ID\":43,\"BIR74\":3776,\"SID74\":6,\"NWBIR74\":1051,\"BIR79\":4789,\"SID79\":10,\"NWBIR79\":1453},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6127396,35.2438316],[-78.7160645,35.2599792],[-78.8123856,35.2587204],[-78.8745728,35.2425346],[-78.8860168,35.2299347],[-78.9125824,35.2224655],[-79.0958939,35.1899643],[-79.1468353,35.2130432],[-79.1690979,35.2359009],[-79.2166519,35.2652779],[-79.1824417,35.3045387],[-78.9744873,35.5171547],[-78.9210739,35.5788574],[-78.7032166,35.5199394],[-78.7089691,35.5141029],[-78.6887436,35.5075264],[-78.6231766,35.4464149],[-78.6008224,35.4030304],[-78.5394669,35.3364639],[-78.5387421,35.3151169],[-78.5804138,35.2865753],[-78.6127396,35.2438316]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.118,\"PERIMETER\":1.506,\"CNTY_\":2032,\"CNTY_ID\":2032,\"NAME\":\"Cleveland\",\"FIPS\":\"37045\",\"FIPSNO\":37045,\"CRESS_ID\":23,\"BIR74\":4866,\"SID74\":10,\"NWBIR74\":1491,\"BIR79\":5526,\"SID79\":21,\"NWBIR79\":1729},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3228226,35.1637573],[-81.362175,35.1628532],[-81.765358,35.1824722],[-81.759491,35.2206993],[-81.7371674,35.2541733],[-81.6976852,35.3532639],[-81.6843185,35.5654373],[-81.6439056,35.553299],[-81.5881119,35.5617752],[-81.5625381,35.5553093],[-81.5236435,35.5612602],[-81.506958,35.5464973],[-81.5155029,35.5214233],[-81.445076,35.4133682],[-81.4074173,35.3598061],[-81.3532639,35.327301],[-81.3647995,35.3103714],[-81.3523483,35.2751045],[-81.3194275,35.260498],[-81.3114243,35.1879501],[-81.3228226,35.1637573]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.078,\"PERIMETER\":1.384,\"CNTY_\":2034,\"CNTY_ID\":2034,\"NAME\":\"Lincoln\",\"FIPS\":\"37109\",\"FIPSNO\":37109,\"CRESS_ID\":55,\"BIR74\":2216,\"SID74\":8,\"NWBIR74\":302,\"BIR79\":2817,\"SID79\":7,\"NWBIR79\":350},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.9567719,35.3974533],[-81.445076,35.4133682],[-81.5155029,35.5214233],[-81.506958,35.5464973],[-81.5236435,35.5612602],[-80.9614334,35.5435638],[-80.9510727,35.5286674],[-80.9553452,35.5091209],[-80.9421997,35.4511299],[-80.9538651,35.436058],[-80.9567719,35.3974533]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.125,\"PERIMETER\":1.601,\"CNTY_\":2039,\"CNTY_ID\":2039,\"NAME\":\"Jackson\",\"FIPS\":\"37099\",\"FIPSNO\":37099,\"CRESS_ID\":50,\"BIR74\":1143,\"SID74\":2,\"NWBIR74\":215,\"BIR79\":1504,\"SID79\":5,\"NWBIR79\":307},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.1062851,35.0002785],[-83.161499,35.0592232],[-83.1450577,35.0832863],[-83.148201,35.0913811],[-83.1771469,35.111496],[-83.1934814,35.1392174],[-83.2179337,35.1589928],[-83.2200394,35.2225266],[-83.2327805,35.2308083],[-83.2639389,35.2217712],[-83.2849808,35.226635],[-83.3106384,35.2599869],[-83.3318176,35.3193436],[-83.3298111,35.3639107],[-83.3647156,35.4133301],[-83.3530273,35.4558983],[-83.3098602,35.4634743],[-83.2473068,35.5069885],[-83.2266617,35.5134544],[-83.1813965,35.5124092],[-83.1423721,35.4843941],[-83.1282349,35.4566154],[-83.0877151,35.4463272],[-83.0460434,35.4069939],[-83.0385971,35.3899307],[-82.9853592,35.3563232],[-82.9536209,35.3085289],[-82.9191132,35.2907677],[-82.926857,35.2279053],[-82.978714,35.18573],[-82.9905853,35.1581764],[-82.9820786,35.1275063],[-83.0520859,35.0634766],[-83.0438538,35.0400696],[-83.0072784,35.0242043],[-83.1062851,35.0002785]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.181,\"PERIMETER\":1.98,\"CNTY_\":2040,\"CNTY_ID\":2040,\"NAME\":\"Moore\",\"FIPS\":\"37125\",\"FIPSNO\":37125,\"CRESS_ID\":63,\"BIR74\":2648,\"SID74\":5,\"NWBIR74\":844,\"BIR79\":3534,\"SID79\":5,\"NWBIR79\":1151},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.6074677,35.1591873],[-79.6483765,35.1897316],[-79.7082367,35.2784157],[-79.7649918,35.5059357],[-79.5553589,35.5130501],[-79.3429489,35.5102425],[-79.3436737,35.491642],[-79.3624878,35.4704132],[-79.3310928,35.4448204],[-79.324585,35.4148293],[-79.3031998,35.4088058],[-79.284729,35.392807],[-79.2643204,35.3445702],[-79.1824417,35.3045387],[-79.2166519,35.2652779],[-79.1690979,35.2359009],[-79.1468353,35.2130432],[-79.0958939,35.1899643],[-79.0971756,35.1768074],[-79.1220016,35.1701851],[-79.1472778,35.1735497],[-79.2352905,35.2032089],[-79.3500519,35.1407967],[-79.4553604,35.0373573],[-79.4950638,35.0625076],[-79.5529022,35.064106],[-79.5741959,35.0732651],[-79.5756302,35.1191254],[-79.6074677,35.1591873]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.143,\"PERIMETER\":1.887,\"CNTY_\":2041,\"CNTY_ID\":2041,\"NAME\":\"Mecklenburg\",\"FIPS\":\"37119\",\"FIPSNO\":37119,\"CRESS_ID\":60,\"BIR74\":21588,\"SID74\":44,\"NWBIR74\":8027,\"BIR79\":30757,\"SID79\":35,\"NWBIR79\":11631},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.0493011,35.1515312],[-81.0239639,35.1490326],[-81.0072784,35.16325],[-81.0015182,35.1959877],[-81.0140533,35.2499008],[-80.9796448,35.3332672],[-80.9262772,35.3486748],[-80.9377594,35.3649254],[-80.9829254,35.3690948],[-80.9567719,35.3974533],[-80.9538651,35.436058],[-80.9421997,35.4511299],[-80.9553452,35.5091209],[-80.7762299,35.5068092],[-80.775383,35.4795723],[-80.7616882,35.4651375],[-80.7454376,35.419857],[-80.7627411,35.4006805],[-80.6899872,35.3407593],[-80.6594467,35.2646751],[-80.5396423,35.2058182],[-80.7596817,35.0366211],[-80.7972183,35.0281982],[-80.8401642,35.002018],[-80.8947144,35.0597343],[-80.9277954,35.1012497],[-81.0398865,35.0372009],[-81.0655518,35.0664825],[-81.0284424,35.1054077],[-81.0490417,35.1320114],[-81.0493011,35.1515312]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.321,\"CNTY_\":2042,\"CNTY_ID\":2042,\"NAME\":\"Cabarrus\",\"FIPS\":\"37025\",\"FIPSNO\":37025,\"CRESS_ID\":13,\"BIR74\":4099,\"SID74\":3,\"NWBIR74\":856,\"BIR79\":5669,\"SID79\":20,\"NWBIR79\":1203},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.5029449,35.1869125],[-80.5396423,35.2058182],[-80.6594467,35.2646751],[-80.6899872,35.3407593],[-80.7627411,35.4006805],[-80.7454376,35.419857],[-80.7616882,35.4651375],[-80.775383,35.4795723],[-80.7762299,35.5068092],[-80.7265167,35.5075684],[-80.2982407,35.4948997],[-80.3784714,35.3848381],[-80.48172,35.2106094],[-80.5029449,35.1869125]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.13,\"PERIMETER\":1.732,\"CNTY_\":2044,\"CNTY_ID\":2044,\"NAME\":\"Montgomery\",\"FIPS\":\"37123\",\"FIPSNO\":37123,\"CRESS_ID\":62,\"BIR74\":1258,\"SID74\":3,\"NWBIR74\":472,\"BIR79\":1598,\"SID79\":8,\"NWBIR79\":588},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0714111,35.1507416],[-80.0590668,35.1770782],[-80.0658417,35.207943],[-80.0923462,35.2542267],[-80.0935135,35.2914467],[-80.0507507,35.3663712],[-80.0518875,35.3768082],[-80.1163101,35.4643593],[-80.1620712,35.4747429],[-80.1819077,35.5051193],[-80.0644073,35.5056992],[-79.7649918,35.5059357],[-79.7082367,35.2784157],[-79.6483765,35.1897316],[-79.6074677,35.1591873],[-79.6372986,35.1538353],[-79.6979523,35.1730728],[-79.7598419,35.1673126],[-79.836319,35.1738014],[-79.909462,35.1557198],[-79.9758224,35.1507568],[-80.0106812,35.1371422],[-80.0651779,35.1365814],[-80.0714111,35.1507416]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.103,\"PERIMETER\":1.461,\"CNTY_\":2045,\"CNTY_ID\":2045,\"NAME\":\"Stanly\",\"FIPS\":\"37167\",\"FIPSNO\":37167,\"CRESS_ID\":84,\"BIR74\":2356,\"SID74\":5,\"NWBIR74\":370,\"BIR79\":3039,\"SID79\":7,\"NWBIR79\":528},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.0714111,35.1507416],[-80.1102753,35.1938362],[-80.1316147,35.1711159],[-80.154686,35.1760826],[-80.1591415,35.1547394],[-80.168129,35.1497307],[-80.1901016,35.1678581],[-80.2198868,35.1591835],[-80.2475891,35.204525],[-80.2610931,35.2040405],[-80.2751236,35.1931114],[-80.325676,35.1739159],[-80.3487244,35.1706734],[-80.3729477,35.1778641],[-80.3987503,35.1646118],[-80.4285812,35.1685944],[-80.4532852,35.1607857],[-80.4832306,35.1829109],[-80.5029449,35.1869125],[-80.48172,35.2106094],[-80.3784714,35.3848381],[-80.2982407,35.4948997],[-80.1819077,35.5051193],[-80.1620712,35.4747429],[-80.1163101,35.4643593],[-80.0518875,35.3768082],[-80.0507507,35.3663712],[-80.0935135,35.2914467],[-80.0923462,35.2542267],[-80.0658417,35.207943],[-80.0590668,35.1770782],[-80.0714111,35.1507416]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.095,\"PERIMETER\":1.471,\"CNTY_\":2047,\"CNTY_ID\":2047,\"NAME\":\"Henderson\",\"FIPS\":\"37089\",\"FIPSNO\":37089,\"CRESS_ID\":45,\"BIR74\":2574,\"SID74\":5,\"NWBIR74\":158,\"BIR79\":3679,\"SID79\":8,\"NWBIR79\":264},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.5700302,35.1494904],[-82.5892258,35.184948],[-82.5962372,35.242466],[-82.610611,35.2675781],[-82.6081009,35.2930641],[-82.7438889,35.4180336],[-82.7141571,35.4391518],[-82.6689835,35.4551659],[-82.6186829,35.4376755],[-82.5639343,35.4384232],[-82.5511322,35.4268951],[-82.5269012,35.4283218],[-82.519516,35.4439163],[-82.4749222,35.4444046],[-82.4090652,35.4689217],[-82.3736877,35.4573784],[-82.3648376,35.463459],[-82.3709641,35.4787712],[-82.322876,35.4951591],[-82.2581024,35.4637299],[-82.2746811,35.4516068],[-82.2787247,35.4356422],[-82.2582779,35.3933563],[-82.3155594,35.3096161],[-82.3413086,35.2854958],[-82.3450851,35.2431908],[-82.3580322,35.2429314],[-82.3508606,35.1926727],[-82.3601227,35.1829491],[-82.371376,35.182724],[-82.3896103,35.2082405],[-82.4379196,35.1695595],[-82.4667435,35.1735001],[-82.5246353,35.1545601],[-82.5700302,35.1494904]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.078,\"PERIMETER\":1.202,\"CNTY_\":2056,\"CNTY_ID\":2056,\"NAME\":\"Graham\",\"FIPS\":\"37075\",\"FIPSNO\":37075,\"CRESS_ID\":38,\"BIR74\":415,\"SID74\":0,\"NWBIR74\":40,\"BIR79\":488,\"SID79\":1,\"NWBIR79\":45},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.6956329,35.2508087],[-83.7535629,35.2371674],[-83.7918777,35.248661],[-83.8368607,35.2467499],[-83.9216537,35.2189674],[-83.9608994,35.2153816],[-83.9922028,35.232502],[-84.003891,35.2620888],[-84.0308609,35.2925224],[-84.0292053,35.3252907],[-84.0063095,35.37286],[-84.0126495,35.4076233],[-83.9547043,35.4554596],[-83.9300766,35.4490166],[-83.8798904,35.4620285],[-83.8549881,35.4501266],[-83.744957,35.4414024],[-83.6536102,35.4210968],[-83.6323242,35.4367409],[-83.5867157,35.4276886],[-83.5803833,35.4010849],[-83.5988846,35.3623657],[-83.6342163,35.334034],[-83.6893845,35.3082428],[-83.6900864,35.2877808],[-83.6791916,35.2722206],[-83.6956329,35.2508087]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.104,\"PERIMETER\":1.548,\"CNTY_\":2065,\"CNTY_ID\":2065,\"NAME\":\"Lenoir\",\"FIPS\":\"37107\",\"FIPSNO\":37107,\"CRESS_ID\":54,\"BIR74\":3589,\"SID74\":10,\"NWBIR74\":1826,\"BIR79\":4225,\"SID79\":14,\"NWBIR79\":2047},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.8365784,35.1717415],[-77.8300629,35.34235],[-77.8051834,35.3645897],[-77.7606964,35.3619385],[-77.6984177,35.3698196],[-77.6844711,35.3459396],[-77.6660538,35.3396721],[-77.6218033,35.3664856],[-77.5587234,35.3810883],[-77.537178,35.4019814],[-77.5349731,35.4178238],[-77.4946747,35.407444],[-77.4738846,35.4215279],[-77.4439468,35.3545952],[-77.4014893,35.3427696],[-77.3861618,35.3292618],[-77.4131546,35.3312187],[-77.4502106,35.3020592],[-77.4485092,35.285675],[-77.4296494,35.2598381],[-77.4740982,35.2271919],[-77.5283127,35.2396965],[-77.5107727,35.1557693],[-77.5330582,35.1448822],[-77.5994949,35.0708694],[-77.731926,35.0008354],[-77.7447891,35.0024452],[-77.7549973,35.0180817],[-77.7516022,35.0956764],[-77.7641373,35.1286125],[-77.8365784,35.1717415]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.098,\"PERIMETER\":1.389,\"CNTY_\":2067,\"CNTY_ID\":2067,\"NAME\":\"Transylvania\",\"FIPS\":\"37175\",\"FIPSNO\":37175,\"CRESS_ID\":88,\"BIR74\":1173,\"SID74\":3,\"NWBIR74\":92,\"BIR79\":1401,\"SID79\":4,\"NWBIR79\":104},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.8876953,35.0553703],[-83.0072784,35.0242043],[-83.0438538,35.0400696],[-83.0520859,35.0634766],[-82.9820786,35.1275063],[-82.9905853,35.1581764],[-82.978714,35.18573],[-82.926857,35.2279053],[-82.9191132,35.2907677],[-82.8332367,35.3155708],[-82.7438889,35.4180336],[-82.6081009,35.2930641],[-82.610611,35.2675781],[-82.5962372,35.242466],[-82.5892258,35.184948],[-82.5700302,35.1494904],[-82.6544952,35.1194572],[-82.6860504,35.1214638],[-82.6880341,35.0978012],[-82.6973572,35.0912323],[-82.771347,35.0854225],[-82.8876953,35.0553703]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.091,\"PERIMETER\":1.47,\"CNTY_\":2068,\"CNTY_ID\":2068,\"NAME\":\"Gaston\",\"FIPS\":\"37071\",\"FIPSNO\":37071,\"CRESS_ID\":36,\"BIR74\":9014,\"SID74\":11,\"NWBIR74\":1523,\"BIR79\":11455,\"SID79\":26,\"NWBIR79\":2194},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-81.3228226,35.1637573],[-81.3114243,35.1879501],[-81.3194275,35.260498],[-81.3523483,35.2751045],[-81.3647995,35.3103714],[-81.3532639,35.327301],[-81.4074173,35.3598061],[-81.445076,35.4133682],[-80.9567719,35.3974533],[-80.9829254,35.3690948],[-80.9377594,35.3649254],[-80.9262772,35.3486748],[-80.9796448,35.3332672],[-81.0140533,35.2499008],[-81.0015182,35.1959877],[-81.0072784,35.16325],[-81.0239639,35.1490326],[-81.0493011,35.1515312],[-81.3228226,35.1637573]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.06,\"PERIMETER\":1.036,\"CNTY_\":2071,\"CNTY_ID\":2071,\"NAME\":\"Polk\",\"FIPS\":\"37149\",\"FIPSNO\":37149,\"CRESS_ID\":75,\"BIR74\":533,\"SID74\":1,\"NWBIR74\":95,\"BIR79\":673,\"SID79\":0,\"NWBIR79\":79},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-82.2101746,35.1931267],[-82.2783279,35.1950073],[-82.3207703,35.1841888],[-82.3508606,35.1926727],[-82.3580322,35.2429314],[-82.3450851,35.2431908],[-82.3413086,35.2854958],[-82.3155594,35.3096161],[-82.2582779,35.3933563],[-82.1551285,35.3971024],[-82.1221695,35.3886185],[-82.0841522,35.3393555],[-82.0515823,35.3231277],[-81.9645157,35.2474251],[-81.9714432,35.188282],[-82.2101746,35.1931267]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.131,\"PERIMETER\":1.677,\"CNTY_\":2082,\"CNTY_ID\":2082,\"NAME\":\"Macon\",\"FIPS\":\"37113\",\"FIPSNO\":37113,\"CRESS_ID\":57,\"BIR74\":797,\"SID74\":0,\"NWBIR74\":9,\"BIR79\":1157,\"SID79\":3,\"NWBIR79\":22},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.1062851,35.0002785],[-83.5130081,34.9920235],[-83.5272217,35.0197372],[-83.5532379,35.0357628],[-83.5620422,35.0559425],[-83.6435623,35.1274986],[-83.6448746,35.1433601],[-83.717804,35.1388092],[-83.7395248,35.1458397],[-83.7130814,35.1807518],[-83.7223282,35.1972733],[-83.6966934,35.2144356],[-83.6956329,35.2508087],[-83.6791916,35.2722206],[-83.4732285,35.2916451],[-83.4246826,35.3153191],[-83.3318176,35.3193436],[-83.3106384,35.2599869],[-83.2849808,35.226635],[-83.2639389,35.2217712],[-83.2327805,35.2308083],[-83.2200394,35.2225266],[-83.2179337,35.1589928],[-83.1934814,35.1392174],[-83.1771469,35.111496],[-83.148201,35.0913811],[-83.1450577,35.0832863],[-83.161499,35.0592232],[-83.1062851,35.0002785]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.241,\"PERIMETER\":2.214,\"CNTY_\":2083,\"CNTY_ID\":2083,\"NAME\":\"Sampson\",\"FIPS\":\"37163\",\"FIPSNO\":37163,\"CRESS_ID\":82,\"BIR74\":3025,\"SID74\":4,\"NWBIR74\":1396,\"BIR79\":3447,\"SID79\":4,\"NWBIR79\":1524},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.1137695,34.7209854],[-78.113739,34.6991806],[-78.1567612,34.6771545],[-78.2568054,34.5537529],[-78.2746124,34.5812759],[-78.3059006,34.6053581],[-78.3198853,34.6300926],[-78.3097,34.6358528],[-78.3223419,34.6455727],[-78.3388672,34.6826057],[-78.3638153,34.6920433],[-78.386673,34.7218895],[-78.401001,34.7593307],[-78.4992905,34.8551064],[-78.5419922,34.9078712],[-78.5934753,34.94347],[-78.6342545,34.9843674],[-78.6664124,35.0714684],[-78.6581573,35.0936203],[-78.6456375,35.1025581],[-78.6334839,35.1537247],[-78.6452255,35.1897278],[-78.6327133,35.1973],[-78.6352844,35.2109528],[-78.6127396,35.2438316],[-78.5804138,35.2865753],[-78.5387421,35.3151169],[-78.4936218,35.2596207],[-78.4166794,35.2490768],[-78.3101273,35.2802849],[-78.2574005,35.2209511],[-78.1651764,35.1932182],[-78.1631927,35.1822891],[-78.1702805,35.0974846],[-78.1552429,35.0681915],[-78.1429825,34.9013252],[-78.1954498,34.7436256],[-78.1560974,34.7284775],[-78.1358185,34.7113457],[-78.1137695,34.7209854]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.082,\"PERIMETER\":1.388,\"CNTY_\":2085,\"CNTY_ID\":2085,\"NAME\":\"Pamlico\",\"FIPS\":\"37137\",\"FIPSNO\":37137,\"CRESS_ID\":69,\"BIR74\":542,\"SID74\":1,\"NWBIR74\":222,\"BIR79\":631,\"SID79\":1,\"NWBIR79\":277},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.9432449,35.070034],[-76.9442291,35.0997238],[-76.9898911,35.1540451],[-76.9723358,35.1567726],[-76.9666061,35.1879654],[-76.9474335,35.2169914],[-76.8976059,35.2515717],[-76.8505707,35.2171669],[-76.640213,35.2372475],[-76.6145172,35.2729187],[-76.5912094,35.3120804],[-76.5409775,35.303688],[-76.5071259,35.2487679],[-76.6400909,35.1725197],[-76.6052246,35.1385612],[-76.6242218,35.0643501],[-76.678009,35.024086],[-76.8494644,34.9822197],[-76.9414902,35.0274277],[-76.9432449,35.070034]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.12,\"PERIMETER\":1.686,\"CNTY_\":2088,\"CNTY_ID\":2088,\"NAME\":\"Cherokee\",\"FIPS\":\"37039\",\"FIPSNO\":37039,\"CRESS_ID\":20,\"BIR74\":1027,\"SID74\":2,\"NWBIR74\":32,\"BIR79\":1173,\"SID79\":1,\"NWBIR79\":42},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-84.2910385,35.2105446],[-84.2259445,35.2616043],[-84.1797256,35.2409897],[-84.1016464,35.2455521],[-84.042778,35.2725754],[-84.0308609,35.2925224],[-84.003891,35.2620888],[-83.9922028,35.232502],[-83.9608994,35.2153816],[-83.9216537,35.2189674],[-83.8368607,35.2467499],[-83.7918777,35.248661],[-83.7535629,35.2371674],[-83.6956329,35.2508087],[-83.6966934,35.2144356],[-83.7223282,35.1972733],[-83.7130814,35.1807518],[-83.7395248,35.1458397],[-83.755394,35.1480637],[-83.8538818,35.1257935],[-83.9073181,35.0704155],[-83.9528503,35.0484428],[-83.9597702,35.0191231],[-83.9885483,34.9890671],[-84.1182404,34.988224],[-84.3238525,34.9890099],[-84.2910385,35.2105446]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.172,\"PERIMETER\":1.835,\"CNTY_\":2090,\"CNTY_ID\":2090,\"NAME\":\"Cumberland\",\"FIPS\":\"37051\",\"FIPSNO\":37051,\"CRESS_ID\":26,\"BIR74\":20366,\"SID74\":38,\"NWBIR74\":7043,\"BIR79\":26370,\"SID79\":57,\"NWBIR79\":10614},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.4992905,34.8551064],[-78.5174408,34.8435287],[-78.8316574,34.8443565],[-78.8962631,34.8309021],[-78.9125519,34.8274231],[-78.928627,34.8797989],[-78.9484863,34.9026833],[-79.0336075,34.9538231],[-79.0943146,35.0378571],[-79.106842,35.1192245],[-79.0971756,35.1768074],[-79.0958939,35.1899643],[-78.9125824,35.2224655],[-78.8860168,35.2299347],[-78.8745728,35.2425346],[-78.8123856,35.2587204],[-78.7160645,35.2599792],[-78.6127396,35.2438316],[-78.6352844,35.2109528],[-78.6327133,35.1973],[-78.6452255,35.1897278],[-78.6334839,35.1537247],[-78.6456375,35.1025581],[-78.6581573,35.0936203],[-78.6664124,35.0714684],[-78.6342545,34.9843674],[-78.5934753,34.94347],[-78.5419922,34.9078712],[-78.4992905,34.8551064]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.121,\"PERIMETER\":1.978,\"CNTY_\":2091,\"CNTY_ID\":2091,\"NAME\":\"Jones\",\"FIPS\":\"37103\",\"FIPSNO\":37103,\"CRESS_ID\":52,\"BIR74\":578,\"SID74\":1,\"NWBIR74\":297,\"BIR79\":650,\"SID79\":2,\"NWBIR79\":305},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.0490036,34.831192],[-77.0574646,34.8150482],[-77.0731354,34.8154411],[-77.1006927,34.7974968],[-77.1598206,34.7884979],[-77.1642609,34.7745171],[-77.1928406,34.804287],[-77.1800613,34.8321495],[-77.2062683,34.8355026],[-77.2229919,34.88451],[-77.2854233,34.926403],[-77.3351364,34.9325409],[-77.3699722,34.9142494],[-77.4996338,34.9625053],[-77.6392517,34.9840202],[-77.682991,34.9667244],[-77.731926,35.0008354],[-77.5994949,35.0708694],[-77.5330582,35.1448822],[-77.5107727,35.1557693],[-77.5283127,35.2396965],[-77.4740982,35.2271919],[-77.4234085,35.1943054],[-77.205513,35.0880547],[-77.179245,35.05336],[-77.1404495,35.0542374],[-77.1311188,35.0692825],[-77.1105881,35.0660362],[-77.1033707,35.0242615],[-77.1095352,34.8304291],[-77.0490036,34.831192]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.163,\"PERIMETER\":1.716,\"CNTY_\":2095,\"CNTY_ID\":2095,\"NAME\":\"Union\",\"FIPS\":\"37179\",\"FIPSNO\":37179,\"CRESS_ID\":90,\"BIR74\":3915,\"SID74\":4,\"NWBIR74\":1034,\"BIR79\":5273,\"SID79\":9,\"NWBIR79\":1348},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-80.8401642,35.002018],[-80.7972183,35.0281982],[-80.7596817,35.0366211],[-80.5396423,35.2058182],[-80.5029449,35.1869125],[-80.4832306,35.1829109],[-80.4532852,35.1607857],[-80.4285812,35.1685944],[-80.3987503,35.1646118],[-80.3729477,35.1778641],[-80.3487244,35.1706734],[-80.325676,35.1739159],[-80.2751236,35.1931114],[-80.3252792,34.8147621],[-80.5615463,34.8152275],[-80.8000641,34.8161125],[-80.7856522,34.9406395],[-80.8401642,35.002018]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.138,\"PERIMETER\":1.621,\"CNTY_\":2096,\"CNTY_ID\":2096,\"NAME\":\"Anson\",\"FIPS\":\"37007\",\"FIPSNO\":37007,\"CRESS_ID\":4,\"BIR74\":1570,\"SID74\":15,\"NWBIR74\":952,\"BIR79\":1875,\"SID79\":4,\"NWBIR79\":1161},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.9199524,34.8079185],[-80.3252792,34.8147621],[-80.2751236,35.1931114],[-80.2610931,35.2040405],[-80.2475891,35.204525],[-80.2198868,35.1591835],[-80.1901016,35.1678581],[-80.168129,35.1497307],[-80.1591415,35.1547394],[-80.154686,35.1760826],[-80.1316147,35.1711159],[-80.1102753,35.1938362],[-80.0714111,35.1507416],[-80.0651779,35.1365814],[-80.0584488,35.1039848],[-80.0028076,35.0899277],[-79.9752808,35.0967331],[-79.9449158,35.1153374],[-79.9274979,35.1157799],[-79.9151382,35.1066933],[-79.908432,35.0789948],[-79.8820801,35.0444641],[-79.8939209,35.0072441],[-79.8670502,34.9677162],[-79.8537064,34.904583],[-79.9014206,34.8524094],[-79.9199524,34.8079185]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.098,\"PERIMETER\":1.262,\"CNTY_\":2097,\"CNTY_ID\":2097,\"NAME\":\"Hoke\",\"FIPS\":\"37093\",\"FIPSNO\":37093,\"CRESS_ID\":47,\"BIR74\":1494,\"SID74\":7,\"NWBIR74\":987,\"BIR79\":1706,\"SID79\":6,\"NWBIR79\":1172},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.3403015,34.8356094],[-79.3606796,34.9447098],[-79.3984146,34.9962158],[-79.4553604,35.0373573],[-79.3500519,35.1407967],[-79.2352905,35.2032089],[-79.1472778,35.1735497],[-79.1220016,35.1701851],[-79.0971756,35.1768074],[-79.106842,35.1192245],[-79.0943146,35.0378571],[-79.0336075,34.9538231],[-79.1818542,34.8318825],[-79.3403015,34.8356094]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.167,\"PERIMETER\":2.709,\"CNTY_\":2099,\"CNTY_ID\":2099,\"NAME\":\"Hyde\",\"FIPS\":\"37095\",\"FIPSNO\":37095,\"CRESS_ID\":48,\"BIR74\":338,\"SID74\":0,\"NWBIR74\":134,\"BIR79\":427,\"SID79\":0,\"NWBIR79\":169},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.5189438,35.5776443],[-76.5395966,35.5940361],[-76.5858765,35.6094551],[-76.6079483,35.635067],[-76.6089172,35.6641541],[-76.6338196,35.7030029],[-76.408432,35.6991158],[-76.2734451,35.6894989],[-76.2976303,35.6116943],[-76.2327957,35.5946655],[-76.2102356,35.6043892],[-76.167305,35.6968422],[-76.104744,35.6636391],[-76.0212097,35.6690941],[-75.9080276,35.665638],[-75.8914948,35.6312675],[-76.0529785,35.4146042],[-76.1816177,35.3415337],[-76.4988022,35.4162178],[-76.5337524,35.4501991],[-76.4584351,35.504425],[-76.4465256,35.5508652],[-76.5189438,35.5776443]]],[[[-76.0170059,35.0694351],[-75.9756927,35.1161842],[-75.8539352,35.1672821],[-75.7637024,35.1922836],[-75.8115387,35.1640205],[-75.9039459,35.1324921],[-76.0028763,35.0694351],[-76.0170059,35.0694351]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.204,\"PERIMETER\":1.871,\"CNTY_\":2100,\"CNTY_ID\":2100,\"NAME\":\"Duplin\",\"FIPS\":\"37061\",\"FIPSNO\":37061,\"CRESS_ID\":31,\"BIR74\":2483,\"SID74\":4,\"NWBIR74\":1061,\"BIR79\":2777,\"SID79\":7,\"NWBIR79\":1227},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.6898346,34.7201958],[-77.9266739,34.7110062],[-77.9393082,34.7194061],[-77.989151,34.7170944],[-78.0173645,34.7289314],[-78.1137695,34.7209854],[-78.1358185,34.7113457],[-78.1560974,34.7284775],[-78.1954498,34.7436256],[-78.1429825,34.9013252],[-78.1552429,35.0681915],[-78.1702805,35.0974846],[-78.1631927,35.1822891],[-78.087532,35.1701851],[-78.0365067,35.1856918],[-78.0021591,35.1864777],[-77.9639282,35.1640244],[-77.9446945,35.168232],[-77.9139786,35.1599731],[-77.8941574,35.1441803],[-77.8876724,35.1549644],[-77.8365784,35.1717415],[-77.7641373,35.1286125],[-77.7516022,35.0956764],[-77.7549973,35.0180817],[-77.7447891,35.0024452],[-77.731926,35.0008354],[-77.682991,34.9667244],[-77.6552658,34.9189339],[-77.6898346,34.7201958]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.121,\"PERIMETER\":1.855,\"CNTY_\":2107,\"CNTY_ID\":2107,\"NAME\":\"Richmond\",\"FIPS\":\"37153\",\"FIPSNO\":37153,\"CRESS_ID\":77,\"BIR74\":2756,\"SID74\":4,\"NWBIR74\":1043,\"BIR79\":3108,\"SID79\":7,\"NWBIR79\":1218},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.6859589,34.8052559],[-79.9199524,34.8079185],[-79.9014206,34.8524094],[-79.8537064,34.904583],[-79.8670502,34.9677162],[-79.8939209,35.0072441],[-79.8820801,35.0444641],[-79.908432,35.0789948],[-79.9151382,35.1066933],[-79.9274979,35.1157799],[-79.9449158,35.1153374],[-79.9752808,35.0967331],[-80.0028076,35.0899277],[-80.0584488,35.1039848],[-80.0651779,35.1365814],[-80.0106812,35.1371422],[-79.9758224,35.1507568],[-79.909462,35.1557198],[-79.836319,35.1738014],[-79.7598419,35.1673126],[-79.6979523,35.1730728],[-79.6372986,35.1538353],[-79.6074677,35.1591873],[-79.5756302,35.1191254],[-79.5741959,35.0732651],[-79.5529022,35.064106],[-79.4950638,35.0625076],[-79.4553604,35.0373573],[-79.5471039,35.000061],[-79.5730438,34.9783669],[-79.5805206,34.9447899],[-79.5655899,34.9075012],[-79.6219254,34.8495712],[-79.6114426,34.817749],[-79.6601486,34.8178978],[-79.6859589,34.8052559]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.051,\"PERIMETER\":1.096,\"CNTY_\":2109,\"CNTY_ID\":2109,\"NAME\":\"Clay\",\"FIPS\":\"37043\",\"FIPSNO\":37043,\"CRESS_ID\":22,\"BIR74\":284,\"SID74\":0,\"NWBIR74\":1,\"BIR79\":419,\"SID79\":0,\"NWBIR79\":5},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-83.9379959,34.9893913],[-83.9885483,34.9890671],[-83.9597702,35.0191231],[-83.9528503,35.0484428],[-83.9073181,35.0704155],[-83.8538818,35.1257935],[-83.755394,35.1480637],[-83.7395248,35.1458397],[-83.717804,35.1388092],[-83.6448746,35.1433601],[-83.6435623,35.1274986],[-83.5620422,35.0559425],[-83.5532379,35.0357628],[-83.5272217,35.0197372],[-83.5130081,34.9920235],[-83.5494156,34.9895363],[-83.9379959,34.9893913]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.177,\"PERIMETER\":2.916,\"CNTY_\":2119,\"CNTY_ID\":2119,\"NAME\":\"Craven\",\"FIPS\":\"37049\",\"FIPSNO\":37049,\"CRESS_ID\":25,\"BIR74\":5868,\"SID74\":13,\"NWBIR74\":1744,\"BIR79\":7595,\"SID79\":18,\"NWBIR79\":2342},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-76.8976059,35.2515717],[-76.9474335,35.2169914],[-76.9666061,35.1879654],[-76.9723358,35.1567726],[-76.9898911,35.1540451],[-76.9442291,35.0997238],[-76.9432449,35.070034],[-77.0478821,35.0921555],[-77.1046753,35.087986],[-77.1105881,35.0660362],[-77.1311188,35.0692825],[-77.1404495,35.0542374],[-77.179245,35.05336],[-77.205513,35.0880547],[-77.4234085,35.1943054],[-77.4740982,35.2271919],[-77.4296494,35.2598381],[-77.4485092,35.285675],[-77.4502106,35.3020592],[-77.4131546,35.3312187],[-77.3861618,35.3292618],[-77.3542175,35.323555],[-77.2938004,35.373951],[-77.2641907,35.3501129],[-77.2443008,35.3541908],[-77.2405472,35.3799858],[-77.2112045,35.3956413],[-77.1949615,35.4229546],[-76.8976059,35.2515717]]],[[[-76.647049,34.9063339],[-76.625618,34.8906479],[-76.7502136,34.8482742],[-77.0490036,34.831192],[-77.1095352,34.8304291],[-77.1033707,35.0242615],[-77.1105881,35.0660362],[-77.0011902,35.052887],[-76.9131088,34.93647],[-76.647049,34.9063339]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.08,\"PERIMETER\":1.188,\"CNTY_\":2123,\"CNTY_ID\":2123,\"NAME\":\"Scotland\",\"FIPS\":\"37165\",\"FIPSNO\":37165,\"CRESS_ID\":83,\"BIR74\":2255,\"SID74\":8,\"NWBIR74\":1206,\"BIR79\":2617,\"SID79\":16,\"NWBIR79\":1436},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-79.4559708,34.6340904],[-79.6675034,34.800663],[-79.6859589,34.8052559],[-79.6601486,34.8178978],[-79.6114426,34.817749],[-79.6219254,34.8495712],[-79.5655899,34.9075012],[-79.5805206,34.9447899],[-79.5730438,34.9783669],[-79.5471039,35.000061],[-79.4553604,35.0373573],[-79.3984146,34.9962158],[-79.3606796,34.9447098],[-79.3403015,34.8356094],[-79.3444519,34.8088379],[-79.3279724,34.7724113],[-79.4559708,34.6340904]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.195,\"PERIMETER\":1.783,\"CNTY_\":2146,\"CNTY_ID\":2146,\"NAME\":\"Onslow\",\"FIPS\":\"37133\",\"FIPSNO\":37133,\"CRESS_ID\":67,\"BIR74\":11158,\"SID74\":29,\"NWBIR74\":2217,\"BIR79\":14655,\"SID79\":23,\"NWBIR79\":3568},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.5386353,34.4570084],[-77.5763321,34.4693451],[-77.6898346,34.7201958],[-77.6552658,34.9189339],[-77.682991,34.9667244],[-77.6392517,34.9840202],[-77.4996338,34.9625053],[-77.3699722,34.9142494],[-77.3351364,34.9325409],[-77.2854233,34.926403],[-77.2229919,34.88451],[-77.2062683,34.8355026],[-77.1800613,34.8321495],[-77.1928406,34.804287],[-77.1642609,34.7745171],[-77.1489563,34.7643318],[-77.1293945,34.6849136],[-77.156601,34.6606369],[-77.5386353,34.4570084]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.24,\"PERIMETER\":2.004,\"CNTY_\":2150,\"CNTY_ID\":2150,\"NAME\":\"Robeson\",\"FIPS\":\"37155\",\"FIPSNO\":37155,\"CRESS_ID\":78,\"BIR74\":7889,\"SID74\":31,\"NWBIR74\":5904,\"BIR79\":9087,\"SID79\":26,\"NWBIR79\":6899},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.8645096,34.4771957],[-78.9194717,34.45364],[-78.950737,34.4493828],[-78.9753647,34.3991661],[-79.0022354,34.3880424],[-79.0064163,34.3662682],[-79.0294724,34.347374],[-79.040947,34.3192978],[-79.074501,34.3045731],[-79.4471436,34.6190605],[-79.4559708,34.6340904],[-79.3279724,34.7724113],[-79.3444519,34.8088379],[-79.3403015,34.8356094],[-79.1818542,34.8318825],[-79.0336075,34.9538231],[-78.9484863,34.9026833],[-78.928627,34.8797989],[-78.9125519,34.8274231],[-78.8962631,34.8309021],[-78.8417053,34.7350006],[-78.8033218,34.6851044],[-78.8526001,34.5665817],[-78.845665,34.5074539],[-78.8645096,34.4771957]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.125,\"PERIMETER\":2.868,\"CNTY_\":2156,\"CNTY_ID\":2156,\"NAME\":\"Carteret\",\"FIPS\":\"37031\",\"FIPSNO\":37031,\"CRESS_ID\":16,\"BIR74\":2414,\"SID74\":5,\"NWBIR74\":341,\"BIR79\":3339,\"SID79\":4,\"NWBIR79\":487},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.1489563,34.7643318],[-77.1642609,34.7745171],[-77.1598206,34.7884979],[-77.1006927,34.7974968],[-77.0731354,34.8154411],[-77.0574646,34.8150482],[-77.0490036,34.831192],[-76.7502136,34.8482742],[-76.625618,34.8906479],[-76.647049,34.9063339],[-76.6700592,34.9699974],[-76.5297775,34.9746361],[-76.4450302,35.0166588],[-76.424057,34.9462471],[-76.3640137,34.9431114],[-76.3294067,34.975956],[-76.3147125,34.9488144],[-76.469902,34.7850609],[-76.6253128,34.7197533],[-77.0505295,34.6989174],[-77.1489563,34.7643318]]],[[[-76.5442734,34.5878296],[-76.5551453,34.6106606],[-76.5377502,34.6139221],[-76.4844818,34.6976318],[-76.4322968,34.760685],[-76.3746796,34.81287],[-76.2877045,34.8770103],[-76.4692612,34.6932831],[-76.5442734,34.5878296]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.225,\"PERIMETER\":2.107,\"CNTY_\":2162,\"CNTY_ID\":2162,\"NAME\":\"Bladen\",\"FIPS\":\"37017\",\"FIPSNO\":37017,\"CRESS_ID\":9,\"BIR74\":1782,\"SID74\":8,\"NWBIR74\":818,\"BIR79\":2052,\"SID79\":5,\"NWBIR79\":1023},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.2614975,34.3947868],[-78.3289795,34.3644218],[-78.4379425,34.3718414],[-78.6380844,34.4511452],[-78.6598206,34.450943],[-78.6684952,34.4651299],[-78.8118896,34.4553185],[-78.8363571,34.459198],[-78.8645096,34.4771957],[-78.845665,34.5074539],[-78.8526001,34.5665817],[-78.8033218,34.6851044],[-78.8417053,34.7350006],[-78.8962631,34.8309021],[-78.8316574,34.8443565],[-78.5174408,34.8435287],[-78.4992905,34.8551064],[-78.401001,34.7593307],[-78.386673,34.7218895],[-78.3638153,34.6920433],[-78.3388672,34.6826057],[-78.3223419,34.6455727],[-78.3097,34.6358528],[-78.3198853,34.6300926],[-78.3059006,34.6053581],[-78.2746124,34.5812759],[-78.2568054,34.5537529],[-78.2624054,34.5279388],[-78.2550583,34.5073814],[-78.1696777,34.4624519],[-78.2614975,34.3947868]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.214,\"PERIMETER\":2.152,\"CNTY_\":2185,\"CNTY_ID\":2185,\"NAME\":\"Pender\",\"FIPS\":\"37141\",\"FIPSNO\":37141,\"CRESS_ID\":71,\"BIR74\":1228,\"SID74\":4,\"NWBIR74\":580,\"BIR79\":1602,\"SID79\":3,\"NWBIR79\":763},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.0259247,34.3287697],[-78.1302414,34.3641243],[-78.1547852,34.3622437],[-78.1846161,34.3481712],[-78.1945648,34.3510513],[-78.2614975,34.3947868],[-78.1696777,34.4624519],[-78.2550583,34.5073814],[-78.2624054,34.5279388],[-78.2568054,34.5537529],[-78.1567612,34.6771545],[-78.113739,34.6991806],[-78.1137695,34.7209854],[-78.0173645,34.7289314],[-77.989151,34.7170944],[-77.9393082,34.7194061],[-77.9266739,34.7110062],[-77.6898346,34.7201958],[-77.5763321,34.4693451],[-77.5386353,34.4570084],[-77.5867615,34.4209366],[-77.609726,34.4350433],[-77.6026154,34.4126282],[-77.7505264,34.3050461],[-77.8091431,34.3594322],[-77.8283844,34.38797],[-77.8880692,34.3640709],[-77.9217834,34.3733139],[-77.9439392,34.3564377],[-77.9498138,34.3660851],[-77.9790726,34.3756866],[-77.9944534,34.3623161],[-77.9866791,34.3399162],[-78.0259247,34.3287697]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.24,\"PERIMETER\":2.365,\"CNTY_\":2232,\"CNTY_ID\":2232,\"NAME\":\"Columbus\",\"FIPS\":\"37047\",\"FIPSNO\":37047,\"CRESS_ID\":24,\"BIR74\":3350,\"SID74\":15,\"NWBIR74\":1431,\"BIR79\":4144,\"SID79\":17,\"NWBIR79\":1832},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6557159,33.9486732],[-79.074501,34.3045731],[-79.040947,34.3192978],[-79.0294724,34.347374],[-79.0064163,34.3662682],[-79.0022354,34.3880424],[-78.9753647,34.3991661],[-78.950737,34.4493828],[-78.9194717,34.45364],[-78.8645096,34.4771957],[-78.8363571,34.459198],[-78.8118896,34.4553185],[-78.6684952,34.4651299],[-78.6598206,34.450943],[-78.6380844,34.4511452],[-78.4379425,34.3718414],[-78.3289795,34.3644218],[-78.2614975,34.3947868],[-78.1945648,34.3510513],[-78.1846161,34.3481712],[-78.1547852,34.3622437],[-78.2610626,34.2152634],[-78.3735733,34.2023506],[-78.3611221,34.1867218],[-78.4254303,34.1380653],[-78.4927444,34.1585045],[-78.5272369,34.1548576],[-78.544281,34.1341629],[-78.5634308,34.0589447],[-78.5877838,34.0306053],[-78.6302719,34.0102005],[-78.6347198,33.9779778],[-78.6557159,33.9486732]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.042,\"PERIMETER\":0.999,\"CNTY_\":2238,\"CNTY_ID\":2238,\"NAME\":\"New Hanover\",\"FIPS\":\"37129\",\"FIPSNO\":37129,\"CRESS_ID\":65,\"BIR74\":5526,\"SID74\":12,\"NWBIR74\":1633,\"BIR79\":6917,\"SID79\":9,\"NWBIR79\":2100},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-77.9607315,34.1892433],[-77.9658661,34.2422867],[-77.9752808,34.2433624],[-77.9831467,34.2616806],[-78.0002213,34.2678833],[-77.9953918,34.2827988],[-78.007019,34.2848167],[-78.0113068,34.3126144],[-78.0259247,34.3287697],[-77.9866791,34.3399162],[-77.9944534,34.3623161],[-77.9790726,34.3756866],[-77.9498138,34.3660851],[-77.9439392,34.3564377],[-77.9217834,34.3733139],[-77.8880692,34.3640709],[-77.8283844,34.38797],[-77.8091431,34.3594322],[-77.7505264,34.3050461],[-77.8643875,34.1927376],[-77.8944016,34.0691795],[-77.9267578,34.0620346],[-77.9607315,34.1892433]]]]}} {\"type\":\"Feature\",\"properties\":{\"AREA\":0.212,\"PERIMETER\":2.024,\"CNTY_\":2241,\"CNTY_ID\":2241,\"NAME\":\"Brunswick\",\"FIPS\":\"37019\",\"FIPSNO\":37019,\"CRESS_ID\":10,\"BIR74\":2181,\"SID74\":5,\"NWBIR74\":659,\"BIR79\":2655,\"SID79\":6,\"NWBIR79\":841},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-78.6557159,33.9486732],[-78.6347198,33.9779778],[-78.6302719,34.0102005],[-78.5877838,34.0306053],[-78.5634308,34.0589447],[-78.544281,34.1341629],[-78.5272369,34.1548576],[-78.4927444,34.1585045],[-78.4254303,34.1380653],[-78.3611221,34.1867218],[-78.3735733,34.2023506],[-78.2610626,34.2152634],[-78.1547852,34.3622437],[-78.1302414,34.3641243],[-78.0259247,34.3287697],[-78.0113068,34.3126144],[-78.007019,34.2848167],[-77.9953918,34.2827988],[-78.0002213,34.2678833],[-77.9831467,34.2616806],[-77.9752808,34.2433624],[-77.9658661,34.2422867],[-77.9607315,34.1892433],[-77.9585266,33.9925804],[-78.0348053,33.9142914],[-78.5797195,33.8819923],[-78.6557159,33.9486732]]]]}}   ################# character # featurecollection -> features mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) (x <- geojson_json(mylist)) #> Assuming 'longitude' and 'latitude' are longitude and latitude, respectively #> <FeatureCollection>  #>   type:  FeatureCollection  #>   no. features:  2  #>   features (1st 5):  Point, Point  geojson_atomize(unclass(x)) #> [{\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[120,30]},\"properties\":{\"marker\":\"red\"}}, {\"type\":\"Feature\",\"geometry\":{\"type\":\"Point\",\"coordinates\":[130,30]},\"properties\":{\"marker\":\"blue\"}}]"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"Convert many input types spatial data geojson specified json string","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"","code":"geojson_json(   input,   lat = NULL,   lon = NULL,   group = NULL,   geometry = \"point\",   type = \"FeatureCollection\",   convert_wgs84 = FALSE,   crs = NULL,   precision = NULL,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"input Input list, data.frame, spatial class, sf class. Inputs can also dplyr tbl_df class since inherits data.frame. lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. group (character) grouping variable perform grouping polygons - apply points geometry (character) One point (Default) polygon. type (character) type collection. One 'auto' (default 'sf' objects), 'FeatureCollection' (default everything else), 'GeometryCollection'. \"skip\" skips coercion package geojson functions; skipping can save significant run time larger geojson objects. Spatial objects can accept \"FeatureCollection\" \"skip\". \"skip\" available option numeric, list, data.frame classes convert_wgs84 input converted standard CRS system GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. precision (integer) desired number decimal places coordinates. Using fewer decimal places decreases object sizes (cost precision). changes underlying precision stored data. options(digits = <number>) changes maximum number digits displayed (find set see getOption(\"digits\")); value parameter change displayed console value getOption(\"digits\"). See Precision section . ... args passed internal functions. Spatial* classes, passed sf::st_write(). sf classes, data.frames, lists, numerics, geo_lists, passed jsonlite::toJSON()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"object class geo_json (json)","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"function creates geojson structure json character string; write file - see geojson_write() Note sp class objects output FeatureCollection objects, classes (numeric, list, data.frame) can output FeatureCollection GeometryCollection objects. working allowing GeometryCollection option sp class objects. Also note sp classes make round-trip, using sf::st_write() write GeoJSON disk, read back . fast think much, disk round-trip ideal. sf classes (sf, sfc, sfg), following conversions made: sfg: appropriate geometry Point, LineString, Polygon,  MultiPoint, MultiLineString, MultiPolygon, GeometryCollection sfc: GeometryCollection, unless sfc length 1, geometry sf: FeatureCollection","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"precision","dir":"Reference","previous_headings":"","what":"Precision","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"Precision handled different ways depending class. digits parameter jsonlite::toJSON controls precision classes numeric, list, data.frame, geo_list. sp classes, precision controlled sf::st_write, passed geojson_write(), internal function write_geojson(), another internal function write_ogr_sf() sf classes, precision quite working yet.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert many input types with spatial data to geojson specified as a json\nstring — geojson_json","text":"","code":"if (FALSE) { # From a numeric vector of length 2, making a point type geojson_json(c(-99.74134244, 32.451323223)) geojson_json(c(-99.74134244, 32.451323223))[[1]] geojson_json(c(-99.74134244, 32.451323223), precision = 2)[[1]] geojson_json(c(-99.74, 32.45), type = \"GeometryCollection\")  ## polygon type ### this requires numeric class input, so inputting a list will dispatch ### on the list method poly <- c(   c(-114.345703125, 39.436192999314095),   c(-114.345703125, 43.45291889355468),   c(-106.61132812499999, 43.45291889355468),   c(-106.61132812499999, 39.436192999314095),   c(-114.345703125, 39.436192999314095) ) geojson_json(poly, geometry = \"polygon\")  # Lists ## From a list of numeric vectors to a polygon vecs <- list(   c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0), c(100.0, 1.0),   c(100.0, 0.0) ) geojson_json(vecs, geometry = \"polygon\")  ## from a named list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) geojson_json(mylist, lat = \"latitude\", lon = \"longitude\")  # From a data.frame to points geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") geojson_json(us_cities[1:2, ],   lat = \"lat\", lon = \"long\",   type = \"GeometryCollection\" )  # from data.frame to polygons head(states) ## make list for input to e.g., rMaps geojson_json(states[1:351, ],   lat = \"lat\", lon = \"long\", geometry = \"polygon\",   group = \"group\" )  # from a geo_list a <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\") geojson_json(a)  # sp classes  ## From SpatialPolygons class library(\"sp\") poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) geojson_json(sp_poly)  ## data.frame to geojson geojson_write(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>% as.json()  # From SpatialPoints class x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPoints(cbind(x, y)) geojson_json(s)  ## From SpatialPointsDataFrame class s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ]) geojson_json(s)  ## From SpatialLines class library(\"sp\") c1 <- cbind(c(1, 2, 3), c(3, 2, 2)) c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05) c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1)) L1 <- Line(c1) L2 <- Line(c2) L3 <- Line(c3) Ls1 <- Lines(list(L1), ID = \"a\") Ls2 <- Lines(list(L2, L3), ID = \"b\") sl1 <- SpatialLines(list(Ls1)) sl12 <- SpatialLines(list(Ls1, Ls2)) geojson_json(sl1) geojson_json(sl12)  ## From SpatialLinesDataFrame class dat <- data.frame(   X = c(\"Blue\", \"Green\"),   Y = c(\"Train\", \"Plane\"),   Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\") ) sldf <- SpatialLinesDataFrame(sl12, dat) geojson_json(sldf) geojson_json(sldf)  ## From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) geojson_json(y)  ## From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) geojson_json(sgdf)  # From SpatialPixels library(\"sp\") pixels <- suppressWarnings(   SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")])) ) summary(pixels) geojson_json(pixels)  # From SpatialPixelsDataFrame library(\"sp\") pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(     points = canada_cities[c(\"long\", \"lat\")],     data = canada_cities   ) ) geojson_json(pixelsdf)  # From sf classes: if (require(sf)) {   ## sfg (a single simple features geometry)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   poly <- rbind(c(1, 1), c(1, 2), c(2, 2), c(1, 1))   poly_sfg <- st_polygon(list(p1))   geojson_json(poly_sfg)    ## sfc (a collection of geometries)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   geojson_json(poly_sfc)    ## sf (collection of geometries with attributes)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   poly_sf <- st_sf(foo = c(\"a\", \"b\"), bar = 1:2, poly_sfc)   geojson_json(poly_sf) }  ## Pretty print a json string geojson_json(c(-99.74, 32.45)) geojson_json(c(-99.74, 32.45)) %>% pretty()  # skipping the pretty geojson class coercion with the geojson pkg if (require(sf)) {   library(sf)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   geojson_json(poly_sfc)   geojson_json(poly_sfc, type = \"skip\") } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert many input types with spatial data to geojson specified as a list — geojson_list","title":"Convert many input types with spatial data to geojson specified as a list — geojson_list","text":"Convert many input types spatial data geojson specified list","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert many input types with spatial data to geojson specified as a list — geojson_list","text":"","code":"geojson_list(   input,   lat = NULL,   lon = NULL,   group = NULL,   geometry = \"point\",   type = \"FeatureCollection\",   convert_wgs84 = FALSE,   crs = NULL,   precision = NULL,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert many input types with spatial data to geojson specified as a list — geojson_list","text":"input Input list, data.frame, spatial class, sf class. Inputs can also dplyr tbl_df class since inherits data.frame lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. group (character) grouping variable perform grouping polygons - apply points geometry (character) One point (Default) polygon. type (character) type collection. One FeatureCollection (default) GeometryCollection. convert_wgs84 input converted standard CRS GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. precision (integer) desired number decimal places coordinates. used classes sp classes; ignored classes. Using fewer decimal places decreases object sizes (cost precision). changes underlying precision stored data. options(digits = <number>) changes maximum number digits displayed (find set see getOption(\"digits\")); value parameter change displayed console value getOption(\"digits\") ... Ignored","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert many input types with spatial data to geojson specified as a list — geojson_list","text":"function creates geojson structure R list; write file - see geojson_write() . Note sp class objects output FeatureCollection objects, classes (numeric, list, data.frame) can output FeatureCollection GeometryCollection objects. working allowing GeometryCollection option sp class objects. Also note sp classes make round-trip, using sf::st_write() write GeoJSON disk, read back . fast think much, disk round-trip ideal. sf classes (sf, sfc, sfg), following conversions made: sfg: appropriate geometry Point, LineString, Polygon, MultiPoint,  MultiLineString, MultiPolygon, GeometryCollection sfc: GeometryCollection, unless sfc length 1, geometry sf: FeatureCollection list data.frame objects, pass lat lon parameters named appropriately (e.g., lat/latitude, lon/long/longitude), auto-detected. can found, function stop warn specify parameters specifically.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert many input types with spatial data to geojson specified as a list — geojson_list","text":"","code":"if (FALSE) { # From a numeric vector of length 2 to a point vec <- c(-99.74, 32.45) geojson_list(vec)  # Lists ## From a list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) geojson_list(mylist)  ## From a list of numeric vectors to a polygon vecs <- list(   c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0),   c(100.0, 1.0), c(100.0, 0.0) ) geojson_list(vecs, geometry = \"polygon\")  # from data.frame to points (res <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\")) as.json(res) ## guess lat/long columns geojson_list(us_cities[1:2, ]) geojson_list(states[1:3, ]) geojson_list(states[1:351, ], geometry = \"polygon\", group = \"group\") geojson_list(canada_cities[1:30, ]) ## a data.frame with columsn not named appropriately, but you can ## specify them # dat <- data.frame(a = c(31, 41), b = c(-120, -110)) # geojson_list(dat) # geojson_list(dat, lat=\"a\", lon=\"b\")  # from data.frame to polygons head(states) geojson_list(states[1:351, ],   lat = \"lat\", lon = \"long\",   geometry = \"polygon\", group = \"group\" )  # From SpatialPolygons class library(\"sp\") poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) geojson_list(sp_poly)  # From SpatialPolygons class with precision agreement x_coord <- c(   -114.345703125, -114.345703125, -106.61132812499999,   -106.61132812499999, -114.345703125 ) y_coord <- c(   39.436192999314095, 43.45291889355468, 43.45291889355468,   39.436192999314095, 39.436192999314095 ) coords <- cbind(x_coord, y_coord) poly <- Polygon(coords) polys <- Polygons(list(poly), 1) sp_poly2 <- SpatialPolygons(list(polys)) geojson_list(sp_poly2, geometry = \"polygon\", precision = 4) geojson_list(sp_poly2, geometry = \"polygon\", precision = 3) geojson_list(sp_poly2, geometry = \"polygon\", precision = 2)  # From SpatialPoints class with precision points <- SpatialPoints(cbind(x_coord, y_coord)) geojson_list(points)  # From SpatialPolygonsDataFrame class sp_polydf <- as(sp_poly, \"SpatialPolygonsDataFrame\") geojson_list(input = sp_polydf)  # From SpatialPoints class x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPoints(cbind(x, y)) geojson_list(s)  # From SpatialPointsDataFrame class s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ]) geojson_list(s)  # From SpatialLines class library(\"sp\") c1 <- cbind(c(1, 2, 3), c(3, 2, 2)) c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05) c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1)) L1 <- Line(c1) L2 <- Line(c2) L3 <- Line(c3) Ls1 <- Lines(list(L1), ID = \"a\") Ls2 <- Lines(list(L2, L3), ID = \"b\") sl1 <- SpatialLines(list(Ls1)) sl12 <- SpatialLines(list(Ls1, Ls2)) geojson_list(sl1) geojson_list(sl12) as.json(geojson_list(sl12)) as.json(geojson_list(sl12), pretty = TRUE)  # From SpatialLinesDataFrame class dat <- data.frame(   X = c(\"Blue\", \"Green\"),   Y = c(\"Train\", \"Plane\"),   Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\") ) sldf <- SpatialLinesDataFrame(sl12, dat) geojson_list(sldf) as.json(geojson_list(sldf)) as.json(geojson_list(sldf), pretty = TRUE)  # From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) geojson_list(y)  # From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) geojson_list(sgdf)  # From SpatialPixels library(\"sp\") pixels <- suppressWarnings(   SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")])) ) summary(pixels) geojson_list(pixels)  # From SpatialPixelsDataFrame library(\"sp\") pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(     points = canada_cities[c(\"long\", \"lat\")],     data = canada_cities   ) ) geojson_list(pixelsdf)  # From sf classes: if (require(sf)) {   ## sfg (a single simple features geometry)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   poly <- rbind(c(1, 1), c(1, 2), c(2, 2), c(1, 1))   poly_sfg <- st_polygon(list(p1))   geojson_list(poly_sfg)    ## sfc (a collection of geometries)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   geojson_list(poly_sfc)    ## sf (collection of geometries with attributes)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   poly_sf <- st_sf(foo = c(\"a\", \"b\"), bar = 1:2, poly_sfc)   geojson_list(poly_sf) } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read geojson or other formats from a local file or a URL — geojson_read","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"Read geojson formats local file URL","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"","code":"geojson_read(   x,   parse = FALSE,   what = \"list\",   stringsAsFactors = FALSE,   query = NULL,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"x (character) Path local file URL. parse (logical) parse geojson data.frame like structures possible. Default: FALSE (character) return. One \"list\", \"sp\" (Spatial class), \"json\". Default: \"list\". \"list\" \"\" sp run package sf. \"json\", returns json character class stringsAsFactors Convert strings Factors? Default FALSE. query (character) SQL query, see also postgis ... args passed sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"various, depending chosen parameter list: geojson list using jsonlite::fromJSON() sp: geojson sp class object using sf::st_read() json: geojson character string, parse downstream wish","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"function supports various geospatial file formats URL, well local kml, shp, geojson file formats.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"file-size","dir":"Reference","previous_headings":"","what":"File size","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"previously used file_to_geojson() function, leading file size problems; longer concern, let us know run file size problems","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read geojson or other formats from a local file or a URL — geojson_read","text":"","code":"if (FALSE) { # From a file file <- system.file(\"examples\", \"california.geojson\", package = \"geojsonio\") (out <- geojson_read(file)) geojson_read(file)  # From a URL url <- \"https://raw.githubusercontent.com/glynnbird/usstatesgeojson/master/california.geojson\" geojson_read(url) geojson_read(url, parse = TRUE)  # Use as.location first if you want geojson_read(as.location(file))  # output a SpatialClass object ## read kml file <- system.file(\"examples\", \"norway_maple.kml\", package = \"geojsonio\") geojson_read(as.location(file), what = \"sp\") ## read geojson file <- system.file(\"examples\", \"california.geojson\", package = \"geojsonio\") geojson_read(as.location(file), what = \"sp\") ## read geojson from a url url <- \"https://raw.githubusercontent.com/glynnbird/usstatesgeojson/master/california.geojson\" geojson_read(url, what = \"sp\") ## read from a shape file file <- system.file(\"examples\", \"bison.zip\", package = \"geojsonio\") dir <- tempdir() unzip(file, exdir = dir) shpfile <- list.files(dir, pattern = \".shp\", full.names = TRUE) geojson_read(shpfile, what = \"sp\")  x <- \"https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json\" geojson_read(x, what = \"sp\") geojson_read(x, what = \"list\")  utils::download.file(x, destfile = basename(x)) geojson_read(basename(x), what = \"sp\")  # from a Postgres database - your Postgres instance must be running ## MAKE SURE to run the setup in the postgis manual file first! if (requireNamespace(\"DBI\") && requireNamespace(\"RPostgres\")) {   library(DBI)   conn <- tryCatch(dbConnect(RPostgres::Postgres(), dbname = \"postgistest\"),     error = function(e) e   )   if (inherits(conn, \"PqConnection\")) {     state <- \"SELECT row_to_json(fc)    FROM (SELECT 'FeatureCollection' As type, array_to_json(array_agg(f)) As features    FROM (SELECT 'Feature' As type      , ST_AsGeoJSON(lg.geog)::json As geometry      , row_to_json((SELECT l FROM (SELECT loc_id, loc_name) As l        )) As properties     FROM locations As lg   ) As f )  As fc;\"     json <- geojson_read(conn, query = state, what = \"json\")     map_leaf(json)   } } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to an sf class — geojson_sf","title":"Convert objects to an sf class — geojson_sf","text":"Convert objects sf class","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to an sf class — geojson_sf","text":"","code":"geojson_sf(x, stringsAsFactors = FALSE, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to an sf class — geojson_sf","text":"x Object class geo_list, geo_json, string, json stringsAsFactors Convert strings Factors? Default FALSE. ... args passed sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to an sf class — geojson_sf","text":"sf class object, see Details.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert objects to an sf class — geojson_sf","text":"type sf object returned depend input GeoJSON. Sometimes get back POINTS class, sometimes POLYGON class, etc., depending structure GeoJSON. reading writing CRS /geojson inconsistent. can directly set CRS passing valid PROJ4 string epsg code crs argument sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to an sf class — geojson_sf","text":"","code":"if (FALSE) { library(sf)  # geo_list ------------------ ## From a numeric vector of length 2 to a point vec <- c(-99.74, 32.45) geojson_list(vec) %>% geojson_sf()  ## Lists ## From a list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) geojson_list(mylist) %>% geojson_sf() geojson_list(mylist) %>%   geojson_sf() %>%   plot()  ## From a list of numeric vectors to a polygon vecs <- list(c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0), c(100.0, 1.0), c(100.0, 0.0)) geojson_list(vecs, geometry = \"polygon\") %>% geojson_sf() geojson_list(vecs, geometry = \"polygon\") %>%   geojson_sf() %>%   plot()  # geo_json ------------------ ## from point geojson_json(c(-99.74, 32.45)) %>% geojson_sf() geojson_json(c(-99.74, 32.45)) %>%   geojson_sf() %>%   plot()  # from featurecollectino of points geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>% geojson_sf() geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>%   geojson_sf() %>%   plot()  # Set the CRS via the crs argument geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>% geojson_sf(crs = \"+init=epsg:4326\")  # json ---------------------- x <- geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") geojson_sf(x)  # character string ---------------------- x <- unclass(geojson_json(c(-99.74, 32.45))) geojson_sf(x) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to spatial classes — geojson_sp","title":"Convert objects to spatial classes — geojson_sp","text":"Convert objects spatial classes","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to spatial classes — geojson_sp","text":"","code":"geojson_sp(x, disambiguateFIDs = FALSE, stringsAsFactors = FALSE, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to spatial classes — geojson_sp","text":"x Object class geo_list, geo_json, string, json disambiguateFIDs Ignored, removed future version. Previously passed rgdal::readOGR(), longer used. stringsAsFactors Convert strings Factors? Default FALSE. ... args passed sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to spatial classes — geojson_sp","text":"spatial class object, see Details.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert objects to spatial classes — geojson_sp","text":"spatial class object returned depend input GeoJSON. Sometimes get back SpatialPoints class, sometimes SpatialPolygonsDataFrame class, etc., depending structure GeoJSON. reading writing CRS /geojson inconsistent. can directly set CRS passing valid PROJ4 string epsg code crs argument sf::st_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to spatial classes — geojson_sp","text":"","code":"if (FALSE) { library(sp)  # geo_list ------------------ ## From a numeric vector of length 2 to a point vec <- c(-99.74, 32.45) geojson_list(vec) %>% geojson_sp()  ## Lists ## From a list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) geojson_list(mylist) %>% geojson_sp() geojson_list(mylist) %>%   geojson_sp() %>%   plot()  ## From a list of numeric vectors to a polygon vecs <- list(c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0), c(100.0, 1.0), c(100.0, 0.0)) geojson_list(vecs, geometry = \"polygon\") %>% geojson_sp() geojson_list(vecs, geometry = \"polygon\") %>%   geojson_sp() %>%   plot()  # geo_json ------------------ ## from point geojson_json(c(-99.74, 32.45)) %>% geojson_sp() geojson_json(c(-99.74, 32.45)) %>%   geojson_sp() %>%   plot()  # from featurecollectino of points geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>% geojson_sp() geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>%   geojson_sp() %>%   plot()  # Set the CRS via the crs argument geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>%   geojson_sp(crs = \"+init=epsg:4326\")  # json ---------------------- x <- geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") geojson_sp(x)  # character string ---------------------- x <- unclass(geojson_json(c(-99.74, 32.45))) geojson_sp(x) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Style a data.frame or list prior to converting to geojson — geojson_style","title":"Style a data.frame or list prior to converting to geojson — geojson_style","text":"helps add styling following Simplestyle Spec. See Details","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style a data.frame or list prior to converting to geojson — geojson_style","text":"","code":"geojson_style(   input,   var = NULL,   var_col = NULL,   var_sym = NULL,   var_size = NULL,   var_stroke = NULL,   var_stroke_width = NULL,   var_stroke_opacity = NULL,   var_fill = NULL,   var_fill_opacity = NULL,   color = NULL,   symbol = NULL,   size = NULL,   stroke = NULL,   stroke_width = NULL,   stroke_opacity = NULL,   fill = NULL,   fill_opacity = NULL )"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style a data.frame or list prior to converting to geojson — geojson_style","text":"input data.frame list var (character) single variable map colors, symbols, /sizes var_col (character) single variable map colors . var_sym (character) single variable map symbols . var_size (character) single variable map size . var_stroke (character) single variable map stroke . var_stroke_width (character) single variable map stroke width . var_stroke_opacity (character) single variable map stroke opacity . var_fill (character) single variable map fill . var_fill_opacity (character) single variable map fill opacity color (character) Valid RGB hex color. Assigned variable marker-color symbol (character) icon ID Maki project https://labs.mapbox.com/maki-icons/ single alphanumeric character (-z 0-9). Assigned variable marker-symbol size (character) One 'small', 'medium', 'large'. Assigned variable marker-size stroke (character) Color polygon edge line (RGB). Assigned variable stroke stroke_width (numeric) Width polygon edge line (number > 0). Assigned  variable stroke-width stroke_opacity (numeric) Opacity polygon edge line (0.0 - 1.0). Assigned variable stroke-opacity fill (character) color interior polygon (GRB). Assigned variable fill fill_opacity (character) opacity interior polygon (0.0-1.0). Assigned variable fill-opacity","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_style.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Style a data.frame or list prior to converting to geojson — geojson_style","text":"parameters color, symbol, size, stroke, stroke_width, stroke_opacity, fill, fill_opacity expect vector size 1 (recycled), exact length vector applied input data. function helps add styling data list data.frame following Simplestyle Spec (https://github.com/mapbox/simplestyle-spec/tree/master/1.1.0), used MapBox GitHub Gists (renders geoJSON/topoJSON interactive maps). style variables, deal polygons GitHub nice help article geoJSON files https://help.github.com/articles/mapping-geojson-files--github/ Please get touch think anything change function.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style a data.frame or list prior to converting to geojson — geojson_style","text":"","code":"if (FALSE) { ## from data.frames - point data library(\"RColorBrewer\") smalluscities <-   subset(us_cities, country.etc == \"OR\" | country.etc == \"NY\" | country.etc == \"CA\")  ### Just color geojson_style(smalluscities,   var = \"country.etc\",   color = brewer.pal(length(unique(smalluscities$country.etc)), \"Blues\") ) ### Just size geojson_style(smalluscities, var = \"country.etc\", size = c(\"small\", \"medium\", \"large\")) ### Color and size geojson_style(smalluscities,   var = \"country.etc\",   color = brewer.pal(length(unique(smalluscities$country.etc)), \"Blues\"),   size = c(\"small\", \"medium\", \"large\") )  ## from lists - point data mylist <- list(   list(latitude = 30, longitude = 120, state = \"US\"),   list(latitude = 32, longitude = 130, state = \"OR\"),   list(latitude = 38, longitude = 125, state = \"NY\"),   list(latitude = 40, longitude = 128, state = \"VT\") ) # just color geojson_style(mylist,   var = \"state\",   color = brewer.pal(length(unique(sapply(mylist, \"[[\", \"state\"))), \"Blues\") ) # color and size geojson_style(mylist,   var = \"state\",   color = brewer.pal(length(unique(sapply(mylist, \"[[\", \"state\"))), \"Blues\"),   size = c(\"small\", \"medium\", \"large\", \"large\") ) # color, size, and symbol geojson_style(mylist,   var = \"state\",   color = brewer.pal(length(unique(sapply(mylist, \"[[\", \"state\"))), \"Blues\"),   size = c(\"small\", \"medium\", \"large\", \"large\"),   symbol = \"zoo\" ) # stroke, fill geojson_style(mylist,   var = \"state\",   stroke = brewer.pal(length(unique(sapply(mylist, \"[[\", \"state\"))), \"Blues\"),   fill = brewer.pal(length(unique(sapply(mylist, \"[[\", \"state\"))), \"Greens\") )  # from data.frame - polygon data smallstates <- states[states$group %in% 1:3, ] head(smallstates) geojson_style(smallstates,   var = \"group\",   stroke = brewer.pal(length(unique(smallstates$group)), \"Blues\"),   stroke_width = c(1, 2, 3),   fill = brewer.pal(length(unique(smallstates$group)), \"Greens\") ) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert many input types with spatial data to a geojson file — geojson_write","title":"Convert many input types with spatial data to a geojson file — geojson_write","text":"Convert many input types spatial data geojson file","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert many input types with spatial data to a geojson file — geojson_write","text":"","code":"geojson_write(   input,   lat = NULL,   lon = NULL,   geometry = \"point\",   group = NULL,   file = \"myfile.geojson\",   overwrite = TRUE,   precision = NULL,   convert_wgs84 = FALSE,   crs = NULL,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert many input types with spatial data to a geojson file — geojson_write","text":"input Input list, data.frame, spatial class, sf class. Inputs can  also dplyr tbl_df class since inherits data.frame lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. geometry (character) One point (Default) polygon. group (character) grouping variable perform grouping polygons - apply points file (character) path file name (e.g., myfile), .geojson file extension. Default writes current working directory. overwrite (logical) Overwrite file given file input. Default: TRUE. param FALSE file already exists, stop error message. precision desired number decimal places coordinates geojson file. Using fewer decimal places can decrease file sizes (cost precision). convert_wgs84 input converted standard CRS GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. ... args passed internal functions. Spatial* classes, data.frames, regular lists, numerics, passed sf::st_write(). sf classes, geo_lists json classes, passed jsonlite::toJSON().","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert many input types with spatial data to a geojson file — geojson_write","text":"geojson_write class, two elements: path: path file GeoJSON type: type object GeoJSON came , e.g., SpatialPoints","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/geojson_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert many input types with spatial data to a geojson file — geojson_write","text":"","code":"if (FALSE) { # From a data.frame ## to points geojson_write(us_cities[1:2, ], lat = \"lat\", lon = \"long\")  ## to polygons head(states) geojson_write(   input = states, lat = \"lat\", lon = \"long\",   geometry = \"polygon\", group = \"group\" )  ## partial states dataset to points (defaults to points) geojson_write(input = states, lat = \"lat\", lon = \"long\")  ## Lists ### list of numeric pairs poly <- list(   c(-114.345703125, 39.436192999314095),   c(-114.345703125, 43.45291889355468),   c(-106.61132812499999, 43.45291889355468),   c(-106.61132812499999, 39.436192999314095),   c(-114.345703125, 39.436192999314095) ) geojson_write(poly, geometry = \"polygon\")  ### named list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) geojson_write(mylist)  # From a numeric vector of length 2 ## Expected order is lon, lat vec <- c(-99.74, 32.45) geojson_write(vec)  ## polygon from a series of numeric pairs ### this requires numeric class input, so inputting a list will ### dispatch on the list method poly <- c(   c(-114.345703125, 39.436192999314095),   c(-114.345703125, 43.45291889355468),   c(-106.61132812499999, 43.45291889355468),   c(-106.61132812499999, 39.436192999314095),   c(-114.345703125, 39.436192999314095) ) geojson_write(poly, geometry = \"polygon\")  # Write output of geojson_list to file res <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\") class(res) geojson_write(res)  # Write output of geojson_json to file res <- geojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\") class(res) geojson_write(res)  # From SpatialPolygons class library(\"sp\") poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) geojson_write(sp_poly)  # From SpatialPolygonsDataFrame class sp_polydf <- as(sp_poly, \"SpatialPolygonsDataFrame\") geojson_write(input = sp_polydf)  # From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) geojson_write(y)  # From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) geojson_write(sgdf)   # From SpatialPixels library(\"sp\") pixels <- suppressWarnings(SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")]))) summary(pixels) geojson_write(pixels)  # From SpatialPixelsDataFrame library(\"sp\") pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities) ) geojson_write(pixelsdf)   # From sf classes: if (require(sf)) {   file <- system.file(\"examples\", \"feature_collection.geojson\", package = \"geojsonio\")   sf_fc <- st_read(file, quiet = TRUE)   geojson_write(sf_fc) } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/geojsonio.html","id":null,"dir":"Reference","previous_headings":"","what":"I/O for GeoJSON — geojsonio","title":"I/O for GeoJSON — geojsonio","text":"Convert various data formats /GeoJSON TopoJSON. package focuses mostly converting lists, data.frame's, numeric, SpatialPolygons, SpatialPolygonsDataFrame, GeoJSON help sf. can currently read TopoJSON - writing TopoJSON come future version package.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/geojsonio.html","id":"package-organization","dir":"Reference","previous_headings":"","what":"Package organization","title":"I/O for GeoJSON — geojsonio","text":"core functions package organized first around working want get, GeoJSON TopoJSON, convert read various formats: geojson_list() / topojson_list() - convert GeoJSON TopoJSON R list format geojson_json() / topojson_json() - convert GeoJSON TopoJSON JSON geojson_sp() - convert spatial object geojson_list geojson_json geojson_sf() - convert sf object geojson_list geojson_json geojson_read() / topojson_read() - read GeoJSON/TopoJSON file file path URL geojson_write() / topojson_write() - write GeoJSON file locally (TopoJSON coming later) interesting functions: map_gist() - Create GitHub gist (renders interactive map) map_leaf() - Create local interactive map using leaflet package geo2topo() - Convert GeoJSON TopoJSON topo2geo() - Convert TopoJSON GeoJSON functions methods various classes, including numeric vectors, data.frame, list, SpatialPolygons, SpatialLines, SpatialPoints, many - try right thing based data give input.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/geojsonio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"I/O for GeoJSON — geojsonio","text":"Scott Chamberlain Andy Teucher andy.teucher@gmail.com Michael Mahoney mike.mahoney.218@gmail.com","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/map_gist.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish an interactive map as a GitHub gist — map_gist","title":"Publish an interactive map as a GitHub gist — map_gist","text":"two ways authorize work GitHub account: PAT - Generate personal access token (PAT) https://help.github.com/articles/creating--access-token--command-line-use record GITHUB_PAT envar .Renviron file. Interactive - Interactively login GitHub account authorise OAuth. Using PAT method recommended. Using gist_auth() function can authenticate separately first, authenticated, function run internally function call. PAT, used, , OAuth used.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/map_gist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish an interactive map as a GitHub gist — map_gist","text":"","code":"map_gist(   input,   lat = \"lat\",   lon = \"long\",   geometry = \"point\",   group = NULL,   type = \"FeatureCollection\",   file = \"myfile.geojson\",   description = \"\",   public = TRUE,   browse = TRUE,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/map_gist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish an interactive map as a GitHub gist — map_gist","text":"input Input object lat Name latitude variable lon Name longitude variable geometry (character) polygons object group (character) grouping variable perform grouping polygons - apply points type (character) One FeatureCollection GeometryCollection file File name use put gist file description Description GitHub gist, leave default (=description) public (logical) Want gist public ? Default: TRUE browse TRUE (default) map opens default browser. ... arguments passed httr::POST","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/map_gist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish an interactive map as a GitHub gist — map_gist","text":"","code":"if (FALSE) { if (!identical(Sys.getenv(\"GITHUB_PAT\"), \"\")) {    # From file   file <- \"myfile.geojson\"   geojson_write(us_cities[1:20, ], lat = \"lat\", lon = \"long\", file = file)   map_gist(file = as.location(file))    # From SpatialPoints class   library(\"sp\")   x <- c(1, 2, 3, 4, 5)   y <- c(3, 2, 5, 1, 4)   s <- SpatialPoints(cbind(x, y))   map_gist(s)    # from SpatialPointsDataFrame class   x <- c(1, 2, 3, 4, 5)   y <- c(3, 2, 5, 1, 4)   s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ])   map_gist(s)    # from SpatialPolygons class   poly1 <- Polygons(list(Polygon(cbind(     c(-100, -90, -85, -100),     c(40, 50, 45, 40)   ))), \"1\")   poly2 <- Polygons(list(Polygon(cbind(     c(-90, -80, -75, -90),     c(30, 40, 35, 30)   ))), \"2\")   sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2)   map_gist(sp_poly)    # From SpatialPolygonsDataFrame class   sp_polydf <- as(sp_poly, \"SpatialPolygonsDataFrame\")   map_gist(sp_poly)    # From SpatialLines class   c1 <- cbind(c(1, 2, 3), c(3, 2, 2))   c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05)   c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1))   L1 <- Line(c1)   L2 <- Line(c2)   L3 <- Line(c3)   Ls1 <- Lines(list(L1), ID = \"a\")   Ls2 <- Lines(list(L2, L3), ID = \"b\")   sl1 <- SpatialLines(list(Ls1))   sl12 <- SpatialLines(list(Ls1, Ls2))   map_gist(sl1)    # From SpatialLinesDataFrame class   dat <- data.frame(     X = c(\"Blue\", \"Green\"),     Y = c(\"Train\", \"Plane\"),     Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\")   )   sldf <- SpatialLinesDataFrame(sl12, dat)   map_gist(sldf)    # From SpatialGrid   x <- GridTopology(c(0, 0), c(1, 1), c(5, 5))   y <- SpatialGrid(x)   map_gist(y)    # From SpatialGridDataFrame   sgdim <- c(3, 4)   sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim))   sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12))   map_gist(sgdf)    # from data.frame   ## to points   map_gist(us_cities)    ## to polygons   head(states)   map_gist(states[1:351, ], lat = \"lat\", lon = \"long\", geometry = \"polygon\", group = \"group\")    ## From a list   mylist <- list(     list(lat = 30, long = 120, marker = \"red\"),     list(lat = 30, long = 130, marker = \"blue\")   )   map_gist(mylist, lat = \"lat\", lon = \"long\")    # From a numeric vector   ## of length 2 to a point   vec <- c(-99.74, 32.45)   map_gist(vec)    ## this requires numeric class input, so inputting a list will dispatch on the list method   poly <- c(     c(-114.345703125, 39.436192999314095),     c(-114.345703125, 43.45291889355468),     c(-106.61132812499999, 43.45291889355468),     c(-106.61132812499999, 39.436192999314095),     c(-114.345703125, 39.436192999314095)   )   map_gist(poly, geometry = \"polygon\")    # From a json object   (x <- geojson_json(c(-99.74, 32.45)))   map_gist(x)   ## another example   map_gist(geojson_json(us_cities[1:10, ], lat = \"lat\", lon = \"long\"))    # From a geo_list object   (res <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\"))   map_gist(res)    # From SpatialPixels   pixels <- suppressWarnings(SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")])))   summary(pixels)   map_gist(pixels)    # From SpatialPixelsDataFrame   pixelsdf <- suppressWarnings(     SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities)   )   map_gist(pixelsdf)  } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/map_leaf.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an interactive map locally — map_leaf","title":"Make an interactive map locally — map_leaf","text":"Make interactive map locally","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/map_leaf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an interactive map locally — map_leaf","text":"","code":"map_leaf(input, lat = NULL, lon = NULL, basemap = \"Stamen.Toner\", ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/map_leaf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an interactive map locally — map_leaf","text":"input Input object lat Name latitude variable lon Name longitude variable basemap Basemap use. See leaflet::addProviderTiles. Default: Stamen.Toner ... arguments passed leaflet::addPolygons, leaflet::addMarkers, leaflet::addGeoJSON, leaflet::addPolylines","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/map_leaf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an interactive map locally — map_leaf","text":"","code":"if (FALSE) { # We'll need leaflet below library(\"leaflet\")  # From file file <- \"myfile.geojson\" geojson_write(us_cities[1:20, ], lat = \"lat\", lon = \"long\", file = file) map_leaf(as.location(file))  # From SpatialPoints class library(\"sp\") x <- c(1, 2, 3, 4, 20) y <- c(3, 2, 5, 3, 4) s <- SpatialPoints(cbind(x, y)) map_leaf(s)  # from SpatialPointsDataFrame class x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ]) map_leaf(s)  # from SpatialPolygons class poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) map_leaf(sp_poly)  # From SpatialPolygonsDataFrame class sp_polydf <- as(sp_poly, \"SpatialPolygonsDataFrame\") map_leaf(sp_poly)  # From SpatialLines class c1 <- cbind(c(1, 2, 3), c(3, 2, 2)) c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05) c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1)) L1 <- Line(c1) L2 <- Line(c2) L3 <- Line(c3) Ls1 <- Lines(list(L1), ID = \"a\") Ls2 <- Lines(list(L2, L3), ID = \"b\") sl1 <- SpatialLines(list(Ls1)) sl12 <- SpatialLines(list(Ls1, Ls2)) map_leaf(sl1) map_leaf(sl12)  # From SpatialLinesDataFrame class dat <- data.frame(   X = c(\"Blue\", \"Green\"),   Y = c(\"Train\", \"Plane\"),   Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\") ) sldf <- SpatialLinesDataFrame(sl12, dat) map_leaf(sldf)  # From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) map_leaf(y)  # From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) map_leaf(sgdf)  # from data.frame map_leaf(us_cities)  ## another example head(states) map_leaf(states[1:351, ])  ## From a named list mylist <- list(   list(lat = 30, long = 120, marker = \"red\"),   list(lat = 30, long = 130, marker = \"blue\") ) map_leaf(mylist, lat = \"lat\", lon = \"long\")  ## From an unnamed list poly <- list(   c(-114.345703125, 39.436192999314095),   c(-114.345703125, 43.45291889355468),   c(-106.61132812499999, 43.45291889355468),   c(-106.61132812499999, 39.436192999314095),   c(-114.345703125, 39.436192999314095) ) map_leaf(poly) ## NOTE: Polygons from lists aren't supported yet  # From a json object map_leaf(geojson_json(c(-99.74, 32.45))) map_leaf(geojson_json(c(-119, 45))) map_leaf(geojson_json(c(-99.74, 32.45))) ## another example map_leaf(geojson_json(us_cities[1:10, ], lat = \"lat\", lon = \"long\"))  # From a geo_list object (res <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\")) map_leaf(res)  # From SpatialPixels pixels <- suppressWarnings(SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")]))) summary(pixels) map_leaf(pixels)  # From SpatialPixelsDataFrame pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities) ) map_leaf(pixelsdf)  # basemap toggling ------------------------ map_leaf(us_cities, basemap = \"Acetate.terrain\") map_leaf(us_cities, basemap = \"CartoDB.Positron\") map_leaf(us_cities, basemap = \"OpenTopoMap\")  # leaflet options ------------------------ map_leaf(us_cities) %>%   addPopups(-122.327298, 47.597131, \"foo bar\", options = popupOptions(closeButton = FALSE))  ####### not working yet # From a numeric vector ## of length 2 to a point ## vec <- c(-99.74,32.45) ## map_leaf(vec) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.ropensci.org/geojsonio/reference/postgis.html","id":null,"dir":"Reference","previous_headings":"","what":"PostGIS setup — postgis","title":"PostGIS setup — postgis","text":"geojson_read() allows get data PostgreSQL database set PostGIS. steps setting data can end query geojson_read()","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/postgis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PostGIS setup — postgis","text":"already PostgreSQL PostGIS: PostgreSQL installation: https://www.postgresql.org/download/ PostGIS installation: https://postgis.net/install/ installed, can proceed .","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/postgis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PostGIS setup — postgis","text":"","code":"if (FALSE) { if (requireNamespace(\"DBI\") && requireNamespace(\"RPostgres\")) {   library(\"DBI\")   library(\"RPostgres\")    # Create connection   conn <- tryCatch(dbConnect(RPostgres::Postgres()), error = function(e) e)   if (inherits(conn, \"PqConnection\")) {      # Create database     dbSendQuery(conn, \"CREATE DATABASE postgistest\")      # New connection to the created database     conn <- dbConnect(RPostgres::Postgres(), dbname = \"postgistest\")      # Initialize PostGIS in Postgres     dbSendQuery(conn, \"CREATE EXTENSION postgis\")     dbSendQuery(conn, \"SELECT postgis_full_version()\")      # Create table     dbSendQuery(conn, \"CREATE TABLE locations(loc_id integer primary key    , loc_name varchar(70), geog geography(POINT) );\")      # Insert data     dbSendQuery(conn, \"INSERT INTO locations(loc_id, loc_name, geog)  VALUES (1, 'Waltham, MA', ST_GeogFromText('POINT(42.40047 -71.2577)') )    , (2, 'Manchester, NH', ST_GeogFromText('POINT(42.99019 -71.46259)') )    , (3, 'TI Blvd, TX', ST_GeogFromText('POINT(-96.75724 32.90977)') );\")       # Get data (notice warnings of unknown field type for geog)     dbGetQuery(conn, \"SELECT * from locations\")       # Once you're setup, use geojson_read()     conn <- dbConnect(RPostgres::Postgres(), dbname = \"postgistest\")     state <- \"SELECT row_to_json(fc)  FROM (SELECT 'FeatureCollection' As type, array_to_json(array_agg(f)) As features  FROM (SELECT 'Feature' As type     , ST_AsGeoJSON(lg.geog)::json As geometry     , row_to_json((SELECT l FROM (SELECT loc_id, loc_name) As l       )) As properties    FROM locations As lg   ) As f )  As fc;\"     json <- geojson_read(conn, query = state, what = \"json\")      ## map the geojson with map_leaf()     map_leaf(json)   } } }"},{"path":"https://docs.ropensci.org/geojsonio/reference/pretty.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert json input to pretty printed output — pretty","title":"Convert json input to pretty printed output — pretty","text":"Convert json input pretty printed output","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/pretty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert json input to pretty printed output — pretty","text":"","code":"pretty(x, indent = 4)"},{"path":"https://docs.ropensci.org/geojsonio/reference/pretty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert json input to pretty printed output — pretty","text":"x Input, character string indent (integer) Number spaces indent","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/pretty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert json input to pretty printed output — pretty","text":"works json class input. simple wrapper around jsonlite::prettify(), can easily use .","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/projections.html","id":null,"dir":"Reference","previous_headings":"","what":"topojson projections and extensions — projections","title":"topojson projections and extensions — projections","text":"topojson projections extensions","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/projections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"topojson projections and extensions — projections","text":"","code":"projections(   proj,   rotate = NULL,   center = NULL,   translate = NULL,   scale = NULL,   clipAngle = NULL,   precision = NULL,   parallels = NULL,   clipExtent = NULL,   invert = NULL )"},{"path":"https://docs.ropensci.org/geojsonio/reference/projections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"topojson projections and extensions — projections","text":"proj Map projection name. One albers, albersUsa, azimuthalEqualArea, azimuthalEquidistant, conicEqualArea, conicConformal, conicEquidistant, equirectangular, gnomonic, mercator, orthographic, stereographic, transverseMercator. rotate rotation specified, sets projection's three-axis rotation specified angles yaw, pitch roll (equivalently longitude, latitude roll) degrees returns projection. rotation specified, returns current rotation defaults [0, 0, 0]. specified rotation two values, rather three, roll assumed 0. center center specified, sets projection's center specified location, two-element array longitude latitude degrees returns projection. center specified, returns current center defaults (0,0) translate point specified, sets projection's translation offset specified two-element array [x, y] returns projection. point specified, returns current translation offset defaults [480, 250]. translation offset determines pixel coordinates projection's center. default translation offset places (0,0) center 960x500 area. scale scale specified, sets projection's scale factor specified value returns projection. scale specified, returns current scale factor defaults 150. scale factor corresponds linearly distance projected points. However, scale factors consistent across projections. clipAngle angle specified, sets projection's clipping circle radius specified angle degrees returns projection. angle null, switches antimeridian cutting rather small-circle clipping. angle specified, returns current clip angle defaults null. Small-circle clipping independent viewport clipping via clipExtent. precision precision specified, sets threshold projection's adaptive resampling specified value pixels returns projection. value corresponds Douglas-Peucker distance. precision specified, returns projection's current resampling precision defaults Math.SQRT(1/2). parallels Depends projection used! See https://github.com/mbostock/d3/wiki/Geo-Projections#standard-projections help clipExtent extent specified, sets projection's viewport clip extent specified bounds pixels returns projection. extent bounds specified array [[x0, y0], [x1, y1]], x0 left-side viewport, y0 top, x1 right y1 bottom. extent null, viewport clipping performed. extent specified, returns current viewport clip extent defaults null. Viewport clipping independent small-circle clipping via clipAngle. invert Projects backward Cartesian coordinates (pixels) spherical coordinates (degrees). Returns array [longitude, latitude] given input array [x, y].","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/projections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"topojson projections and extensions — projections","text":"","code":"projections(proj = \"albers\") #> [1] \"d3.geo.albers()\" projections(proj = \"albers\", rotate = \"[98 + 00 / 60, -35 - 00 / 60]\", scale = 5700) #> [1] \"d3.geo.albers().rotate([98 + 00 / 60, -35 - 00 / 60]).scale(5700)\" projections(proj = \"albers\", scale = 5700) #> [1] \"d3.geo.albers().scale(5700)\" projections(proj = \"albers\", translate = \"[55 * width / 100, 52 * height / 100]\") #> [1] \"d3.geo.albers().translate([55 * width / 100, 52 * height / 100])\" projections(proj = \"albers\", clipAngle = 90) #> [1] \"d3.geo.albers().clipAngle(90)\" projections(proj = \"albers\", precision = 0.1) #> [1] \"d3.geo.albers().precision(0.1)\" projections(proj = \"albers\", parallels = \"[30, 62]\") #> [1] \"d3.geo.albers().parallels([30, 62])\" projections(proj = \"albers\", clipExtent = \"[[105 - 87, 40], [105 + 87 + 1e-6, 82 + 1e-6]]\") #> [1] \"d3.geo.albers().clipExtent([[105 - 87, 40], [105 + 87 + 1e-6, 82 + 1e-6]])\" projections(proj = \"albers\", invert = 60) #> [1] \"d3.geo.albers().invert(60)\" projections(\"orthographic\") #> [1] \"d3.geo.orthographic()\""},{"path":"https://docs.ropensci.org/geojsonio/reference/states.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the same data set from the ggplot2 library — states","title":"This is the same data set from the ggplot2 library — states","text":"data.frame \"long\", \"lat\", \"group\", \"order\", \"region\", \"subregion\" columns specifying polygons US state.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"Convert many input types spatial data TopoJSON JSON string","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"","code":"topojson_json(   input,   lat = NULL,   lon = NULL,   group = NULL,   geometry = \"point\",   type = \"FeatureCollection\",   convert_wgs84 = FALSE,   crs = NULL,   object_name = \"foo\",   quantization = 0,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"input Input list, data.frame, spatial class, sf class. Inputs can also dplyr tbl_df class since inherits data.frame. lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. group (character) grouping variable perform grouping polygons - apply points geometry (character) One point (Default) polygon. type (character) type collection. One 'auto' (default 'sf' objects), 'FeatureCollection' (default everything else), 'GeometryCollection'. \"skip\" skips coercion package geojson functions; skipping can save significant run time larger geojson objects. Spatial objects can accept \"FeatureCollection\" \"skip\". \"skip\" available option numeric, list, data.frame classes convert_wgs84 input converted standard CRS system GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. object_name (character) name give TopoJSON object created. Default: \"foo\" quantization (numeric) quantization parameter, use quantize geometry prior computing topology. Typical values powers ten (1e4, 1e5, ...), default 0 perform quantization. information quantization, see Mike Bostock https://stackoverflow.com/questions/18900022/topojson-quantization-vs-simplification/18921214#18921214 ... args passed geojson_json(); see geojson_json() help supported ","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"object class geo_json (json)","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"type parameter automatically converted type=\"auto\" sf, sfc, sfg class passed input","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert many input types with spatial data to TopoJSON\nas a JSON string — topojson_json","text":"","code":"if (FALSE) { # From a numeric vector of length 2, making a point type topojson_json(c(-99.74, 32.45), pretty = TRUE) topojson_json(c(-99.74, 32.45), type = \"GeometryCollection\")  ## polygon type ### this requires numeric class input, so inputting a list will dispatch on the list method poly <- c(   c(-114.345703125, 39.436192999314095),   c(-114.345703125, 43.45291889355468),   c(-106.61132812499999, 43.45291889355468),   c(-106.61132812499999, 39.436192999314095),   c(-114.345703125, 39.436192999314095) ) topojson_json(poly, geometry = \"polygon\", pretty = TRUE)  # Lists ## From a list of numeric vectors to a polygon vecs <- list(c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0), c(100.0, 1.0), c(100.0, 0.0)) topojson_json(vecs, geometry = \"polygon\", pretty = TRUE)  ## from a named list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) topojson_json(mylist, lat = \"latitude\", lon = \"longitude\")  # From a data.frame to points topojson_json(us_cities[1:2, ], lat = \"lat\", lon = \"long\", pretty = TRUE) topojson_json(us_cities[1:2, ],   lat = \"lat\", lon = \"long\",   type = \"GeometryCollection\", pretty = TRUE )  # from data.frame to polygons head(states) ## make list for input to e.g., rMaps topojson_json(states[1:351, ], lat = \"lat\", lon = \"long\", geometry = \"polygon\", group = \"group\")  # from a geo_list a <- geojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\") topojson_json(a)  # sp classes  ## From SpatialPolygons class library(\"sp\") poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) topojson_json(sp_poly) topojson_json(sp_poly, pretty = TRUE)  ## data.frame to geojson geojson_write(us_cities[1:2, ], lat = \"lat\", lon = \"long\") %>% as.json()  # From SpatialPoints class x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPoints(cbind(x, y)) topojson_json(s)  ## From SpatialPointsDataFrame class s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ]) topojson_json(s)  ## From SpatialLines class library(\"sp\") c1 <- cbind(c(1, 2, 3), c(3, 2, 2)) c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05) c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1)) L1 <- Line(c1) L2 <- Line(c2) L3 <- Line(c3) Ls1 <- Lines(list(L1), ID = \"a\") Ls2 <- Lines(list(L2, L3), ID = \"b\") sl1 <- SpatialLines(list(Ls1)) sl12 <- SpatialLines(list(Ls1, Ls2)) topojson_json(sl1) topojson_json(sl12)  ## From SpatialLinesDataFrame class dat <- data.frame(   X = c(\"Blue\", \"Green\"),   Y = c(\"Train\", \"Plane\"),   Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\") ) sldf <- SpatialLinesDataFrame(sl12, dat) topojson_json(sldf) topojson_json(sldf, pretty = TRUE)  ## From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) topojson_json(y)  ## From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) topojson_json(sgdf)  # From SpatialPixels library(\"sp\") pixels <- suppressWarnings(SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")]))) summary(pixels) topojson_json(pixels)  # From SpatialPixelsDataFrame library(\"sp\") pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities) ) topojson_json(pixelsdf)  # From sf classes: if (require(sf)) {   ## sfg (a single simple features geometry)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   poly <- rbind(c(1, 1), c(1, 2), c(2, 2), c(1, 1))   poly_sfg <- st_polygon(list(p1))   topojson_json(poly_sfg)    ## sfc (a collection of geometries)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   topojson_json(poly_sfc)    ## sf (collection of geometries with attributes)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   poly_sf <- st_sf(foo = c(\"a\", \"b\"), bar = 1:2, poly_sfc)   topojson_json(poly_sf) }  ## Pretty print a json string topojson_json(c(-99.74, 32.45)) topojson_json(c(-99.74, 32.45)) %>% pretty() }"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"Convert many input types spatial data TopoJSON list","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"","code":"topojson_list(   input,   lat = NULL,   lon = NULL,   group = NULL,   geometry = \"point\",   type = \"FeatureCollection\",   convert_wgs84 = FALSE,   crs = NULL,   object_name = \"foo\",   quantization = 0,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"input Input list, data.frame, spatial class, sf class. Inputs can also dplyr tbl_df class since inherits data.frame lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. group (character) grouping variable perform grouping polygons - apply points geometry (character) One point (Default) polygon. type (character) type collection. One FeatureCollection (default) GeometryCollection. convert_wgs84 input converted standard CRS GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. object_name (character) name give TopoJSON object created. Default: \"foo\" quantization (numeric) quantization parameter, use quantize geometry prior computing topology. Typical values powers ten (1e4, 1e5, ...), default 0 perform quantization. information quantization, see Mike Bostock https://stackoverflow.com/questions/18900022/topojson-quantization-vs-simplification/18921214#18921214 ... args passed topojson_json() geojson_json(); see geojson_json() help supported ","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"list TopoJSON","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"Internally, call topojson_json(), use internal function convert JSON output list type parameter automatically converted type=\"auto\" sf, sfc, sfg class passed input","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert many input types with spatial data to TopoJSON\nas a list — topojson_list","text":"","code":"if (FALSE) { # From a numeric vector of length 2 to a point vec <- c(-99.74, 32.45) topojson_list(vec)  # Lists ## From a list mylist <- list(   list(latitude = 30, longitude = 120, marker = \"red\"),   list(latitude = 30, longitude = 130, marker = \"blue\") ) topojson_list(mylist)  ## From a list of numeric vectors to a polygon vecs <- list(c(100.0, 0.0), c(101.0, 0.0), c(101.0, 1.0), c(100.0, 1.0), c(100.0, 0.0)) topojson_list(vecs, geometry = \"polygon\")  # from data.frame to points (res <- topojson_list(us_cities[1:2, ], lat = \"lat\", lon = \"long\")) as.json(res) ## guess lat/long columns topojson_list(us_cities[1:2, ]) topojson_list(states[1:3, ]) topojson_list(states[1:351, ], geometry = \"polygon\", group = \"group\") topojson_list(canada_cities[1:30, ])  # from data.frame to polygons head(states) topojson_list(states[1:351, ], lat = \"lat\", lon = \"long\", geometry = \"polygon\", group = \"group\")  # From SpatialPolygons class library(\"sp\") poly1 <- Polygons(list(Polygon(cbind(   c(-100, -90, -85, -100),   c(40, 50, 45, 40) ))), \"1\") poly2 <- Polygons(list(Polygon(cbind(   c(-90, -80, -75, -90),   c(30, 40, 35, 30) ))), \"2\") sp_poly <- SpatialPolygons(list(poly1, poly2), 1:2) topojson_list(sp_poly)  # From SpatialPolygonsDataFrame class sp_polydf <- as(sp_poly, \"SpatialPolygonsDataFrame\") topojson_list(input = sp_polydf)  # From SpatialPoints class x <- c(1, 2, 3, 4, 5) y <- c(3, 2, 5, 1, 4) s <- SpatialPoints(cbind(x, y)) topojson_list(s)  # From SpatialPointsDataFrame class s <- SpatialPointsDataFrame(cbind(x, y), mtcars[1:5, ]) topojson_list(s)  # From SpatialLines class library(\"sp\") c1 <- cbind(c(1, 2, 3), c(3, 2, 2)) c2 <- cbind(c1[, 1] + .05, c1[, 2] + .05) c3 <- cbind(c(1, 2, 3), c(1, 1.5, 1)) L1 <- Line(c1) L2 <- Line(c2) L3 <- Line(c3) Ls1 <- Lines(list(L1), ID = \"a\") Ls2 <- Lines(list(L2, L3), ID = \"b\") sl1 <- SpatialLines(list(Ls1)) sl12 <- SpatialLines(list(Ls1, Ls2)) topojson_list(sl1) topojson_list(sl12) as.json(topojson_list(sl12)) as.json(topojson_list(sl12), pretty = TRUE)  # From SpatialLinesDataFrame class dat <- data.frame(   X = c(\"Blue\", \"Green\"),   Y = c(\"Train\", \"Plane\"),   Z = c(\"Road\", \"River\"), row.names = c(\"a\", \"b\") ) sldf <- SpatialLinesDataFrame(sl12, dat) topojson_list(sldf) as.json(topojson_list(sldf)) as.json(topojson_list(sldf), pretty = TRUE)  # From SpatialGrid x <- GridTopology(c(0, 0), c(1, 1), c(5, 5)) y <- SpatialGrid(x) topojson_list(y)  # From SpatialGridDataFrame sgdim <- c(3, 4) sg <- SpatialGrid(GridTopology(rep(0, 2), rep(10, 2), sgdim)) sgdf <- SpatialGridDataFrame(sg, data.frame(val = 1:12)) topojson_list(sgdf)  # From SpatialPixels library(\"sp\") pixels <- suppressWarnings(SpatialPixels(SpatialPoints(us_cities[c(\"long\", \"lat\")]))) summary(pixels) topojson_list(pixels)  # From SpatialPixelsDataFrame library(\"sp\") pixelsdf <- suppressWarnings(   SpatialPixelsDataFrame(points = canada_cities[c(\"long\", \"lat\")], data = canada_cities) ) topojson_list(pixelsdf)  }  # From sf classes: if (require(sf)) {   ## sfg (a single simple features geometry)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   poly <- rbind(c(1, 1), c(1, 2), c(2, 2), c(1, 1))   poly_sfg <- st_polygon(list(p1))   topojson_list(poly_sfg)    ## sfc (a collection of geometries)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   topojson_list(poly_sfc)    ## sf (collection of geometries with attributes)   p1 <- rbind(c(0, 0), c(1, 0), c(3, 2), c(2, 4), c(1, 4), c(0, 0))   p2 <- rbind(c(5, 5), c(5, 6), c(4, 5), c(5, 5))   poly_sfc <- st_sfc(st_polygon(list(p1)), st_polygon(list(p2)))   poly_sf <- st_sf(foo = c(\"a\", \"b\"), bar = 1:2, poly_sfc)   topojson_list(poly_sf) } #> sf/sfc/sfg class detected; using type=\"auto\" #> sf/sfc/sfg class detected; using type=\"auto\" #> sf/sfc/sfg class detected; using type=\"auto\" #> $type #> [1] \"Topology\" #>  #> $objects #> $objects$foo #> $objects$foo$type #> [1] \"GeometryCollection\" #>  #> $objects$foo$geometries #> $objects$foo$geometries[[1]] #> $objects$foo$geometries[[1]]$type #> [1] \"Polygon\" #>  #> $objects$foo$geometries[[1]]$arcs #> $objects$foo$geometries[[1]]$arcs[[1]] #> [1] 0 #>  #>  #> $objects$foo$geometries[[1]]$properties #> $objects$foo$geometries[[1]]$properties$foo #> [1] \"a\" #>  #> $objects$foo$geometries[[1]]$properties$bar #> [1] 1 #>  #>  #>  #> $objects$foo$geometries[[2]] #> $objects$foo$geometries[[2]]$type #> [1] \"Polygon\" #>  #> $objects$foo$geometries[[2]]$arcs #> $objects$foo$geometries[[2]]$arcs[[1]] #> [1] 1 #>  #>  #> $objects$foo$geometries[[2]]$properties #> $objects$foo$geometries[[2]]$properties$foo #> [1] \"b\" #>  #> $objects$foo$geometries[[2]]$properties$bar #> [1] 2 #>  #>  #>  #>  #>  #>  #> $arcs #> $arcs[[1]] #> $arcs[[1]][[1]] #> [1] 0 0 #>  #> $arcs[[1]][[2]] #> [1] 1 0 #>  #> $arcs[[1]][[3]] #> [1] 3 2 #>  #> $arcs[[1]][[4]] #> [1] 2 4 #>  #> $arcs[[1]][[5]] #> [1] 1 4 #>  #> $arcs[[1]][[6]] #> [1] 0 0 #>  #>  #> $arcs[[2]] #> $arcs[[2]][[1]] #> [1] 5 5 #>  #> $arcs[[2]][[2]] #> [1] 5 6 #>  #> $arcs[[2]][[3]] #> [1] 4 5 #>  #> $arcs[[2]][[4]] #> [1] 5 5 #>  #>  #>  #> $bbox #> [1] 0 0 5 6 #>"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read topojson from a local file or a URL — topojson_read","title":"Read topojson from a local file or a URL — topojson_read","text":"Read topojson local file URL","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read topojson from a local file or a URL — topojson_read","text":"","code":"topojson_read(x, ...)"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read topojson from a local file or a URL — topojson_read","text":"x Path local file URL. ... args passed sf::st_read(). Can use args sf::st_read() except quiet, set quiet = TRUE internally already","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read topojson from a local file or a URL — topojson_read","text":"object class sf/data.frame","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read topojson from a local file or a URL — topojson_read","text":"Returns sf class, can easily quickly get geojson, see examples. Note give Topojson, gives sf class - can use turn geojson list json","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read topojson from a local file or a URL — topojson_read","text":"","code":"if (FALSE) { # From a file file <- system.file(\"examples\", \"us_states.topojson\", package = \"geojsonio\") topojson_read(file)  # From a URL url <- \"https://raw.githubusercontent.com/shawnbot/d3-cartogram/master/data/us-states.topojson\" topojson_read(url)  # Use as.location first if you want topojson_read(as.location(file))  # quickly convert to geojson as a list file <- system.file(\"examples\", \"us_states.topojson\", package = \"geojsonio\") tmp <- topojson_read(file) geojson_list(tmp) geojson_json(tmp)  # pass on args topojson_read(file, quiet = TRUE) topojson_read(file, stringsAsFactors = FALSE) }"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write TopoJSON from various inputs — topojson_write","title":"Write TopoJSON from various inputs — topojson_write","text":"Write TopoJSON various inputs","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write TopoJSON from various inputs — topojson_write","text":"","code":"topojson_write(   input,   lat = NULL,   lon = NULL,   geometry = \"point\",   group = NULL,   file = \"myfile.topojson\",   overwrite = TRUE,   precision = NULL,   convert_wgs84 = FALSE,   crs = NULL,   object_name = \"foo\",   quantization = 0,   ... )"},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write TopoJSON from various inputs — topojson_write","text":"input Input list, data.frame, spatial class, sf class. Inputs can  also dplyr tbl_df class since inherits data.frame lat (character) Latitude name. default NULL, attempt guess. lon (character) Longitude name. default NULL, attempt guess. geometry (character) One point (Default) polygon. group (character) grouping variable perform grouping polygons - apply points file (character) path file name (e.g., myfile), .geojson file extension. Default writes current working directory. overwrite (logical) Overwrite file given file input. Default: TRUE. param FALSE file already exists, stop error message. precision desired number decimal places coordinates geojson file. Using fewer decimal places can decrease file sizes (cost precision). convert_wgs84 input converted standard CRS GeoJSON (https://tools.ietf.org/html/rfc7946) (geographic coordinate reference system, using WGS84 datum, longitude latitude units decimal degrees; EPSG: 4326). Default FALSE though may change future package version. work sf Spatial objects CRS already defined. one defined know , may define crs argument . crs CRS input already defined. can epsg code four five digit integer valid proj4 string. argument ignored convert_wgs84 FALSE object already CRS. object_name (character) name give TopoJSON object created. Default: \"foo\" quantization (numeric) quantization parameter, use quantize geometry prior computing topology. Typical values powers ten (1e4, 1e5, ...), default 0 perform quantization. information quantization, see Mike Bostock https://stackoverflow.com/questions/18900022/topojson-quantization-vs-simplification/18921214#18921214 ... args passed internal functions. Spatial* classes, data.frames, regular lists, numerics, passed sf::st_write(). sf classes, geo_lists json classes, passed jsonlite::toJSON().","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write TopoJSON from various inputs — topojson_write","text":"topojson_write class, two elements: path: path file TopoJSON type: type object TopoJSON came , e.g., SpatialPoints","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/topojson_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write TopoJSON from various inputs — topojson_write","text":"hood simply wrap geojson_write(), take GeoJSON output operation, convert TopoJSON geo2topo(), write disk. Unfortunately, process requires number round trips disk, speed ups hopefully come soon. intermediate geojson files cleaned (deleted).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/reference/us_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"This is the same data set from the maps library, named differently — us_cities","title":"This is the same data set from the maps library, named differently — us_cities","text":"database us cities population greater 40,000. Also included state capitals population size.","code":""},{"path":"https://docs.ropensci.org/geojsonio/reference/us_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"This is the same data set from the maps library, named differently — us_cities","text":"list 6 components, namely \"name\", \"country.etc\", \"pop\", \"lat\", \"long\", \"capital\", containing city name, state abbreviation, approximate population (January 2006), latitude, longitude capital status indication (0 non-capital, 1 capital, 2 state capital.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-0113","dir":"Changelog","previous_headings":"","what":"geojsonio 0.11.3","title":"geojsonio 0.11.3","text":"CRAN release: 2023-09-06 Removed unused V8 call geojsonhint Removed remaining references rgeos","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-0112","dir":"Changelog","previous_headings":"","what":"geojsonio 0.11.2","title":"geojsonio 0.11.2","text":"CRAN release: 2023-08-21 tiny patch release user-facing changes. Added \\alias{geojsonio-package} man/geojsonio.rd.","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-0111","dir":"Changelog","previous_headings":"","what":"geojsonio 0.11.1","title":"geojsonio 0.11.1","text":"CRAN release: 2023-05-16 Removed references geojsonlint package nears retirement.","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-0110","dir":"Changelog","previous_headings":"","what":"geojsonio 0.11.0","title":"geojsonio 0.11.0","text":"CRAN release: 2023-03-08","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"breaking-changes-0-11-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"geojsonio 0.11.0","text":"SpatialPolygonsDataFrame inputs now cast sf written fix ring ordering. previously handled maptools, retired. Outputs visually identical, underlying representations may changed. Functions relying rgeos (writing rgeos objects file) defunct. PRs replace using newer geos package welcomed.","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-11-0","dir":"Changelog","previous_headings":"","what":"New features","title":"geojsonio 0.11.0","text":"topojson_write() restored, now supports conversion topoJSON formats. User reports indicate output files might larger anticipated; PRs address welcomed. Huge thanks @Shaunson26 PR!","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"other-changes-0-11-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"geojsonio 0.11.0","text":"rgeos maptools packages removed Imports. (Thanks Roger Bivand Mike Sumner Mastodon!)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-0100","dir":"Changelog","previous_headings":"","what":"geojsonio 0.10.0","title":"geojsonio 0.10.0","text":"CRAN release: 2022-10-07 Deprecated (warning) functions relying rgeos. stop working 2023. Tests updated use testthat 3e, plus number improvements around isolating tests improving test quality. HUGE thanks @czeildi tackling two massive PRs (#187, #186, #183).","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-095","dir":"Changelog","previous_headings":"","what":"geojsonio 0.9.5","title":"geojsonio 0.9.5","text":"CRAN release: 2022-09-13","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-094","dir":"Changelog","previous_headings":"","what":"geojsonio 0.9.4","title":"geojsonio 0.9.4","text":"CRAN release: 2021-01-13","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.9.4","text":"fix sprintf() usage within projections() function; run sprintf particular string length > 0 (#172) fix .json() input output topojson_list() - weren’t constructing TopoJSON arcs correctly (#160) fix geojson_read(): now using package geojsonsf read geojson (#163)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-092","dir":"Changelog","previous_headings":"","what":"geojsonio 0.9.2","title":"geojsonio 0.9.2","text":"CRAN release: 2020-04-07","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.9.2","text":"fix test change stringsAsFactors behavior R v4 (#166) (#167) temporarily make topojson_write() defunct can sort issues new sf version (#168)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-090","dir":"Changelog","previous_headings":"","what":"geojsonio 0.9.0","title":"geojsonio 0.9.0","text":"CRAN release: 2020-02-13","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-9-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.9.0","text":"geojson_sf() geojson_sp() now accept strings addition json, geoson_list geojson_json types (#164)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-9-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.9.0","text":"topojson_json() topojson_list() gain params object_name quantization pass geojson_json() (#158) replace httr crul (#105) rgdal replaced sf throughout package; writeOGR replaced st_write readOGR st_read; create user facing changes, please let us know problems version (#41) (#150) (#157)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-080","dir":"Changelog","previous_headings":"","what":"geojsonio 0.8.0","title":"geojsonio 0.8.0","text":"CRAN release: 2019-10-29","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.8.0","text":"geojson_read() gains new S3 method geojson_read.PqConnection connecting PostgreSQL database set PostGIS. See also ?postgis notes Postgis installation, setting simple data Postgis package (#61) (#155) thanks @fxi","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-8-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.8.0","text":"geojson_read() instead going package sp now goes package sf significant speed , see https://github.com/ropensci/geojsonio/issues/136#issuecomment-546123078 (#136) geojson_list() gains parameter precision adjust number decimal places used. applies classes packages sp rgeos (#152) (related #141) thanks @ChrisJones687 improve dependency installation notes README (#149) (#151) thanks @setgree @nickto move using markdown docs file_to_geojson() now using https protocol instead http online ogre service called using method = \"web\"","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"BUG FIXES","title":"geojsonio 0.8.0","text":"fix geojson_read() fail better using method=\"web\"; update docs note method=\"web\" can result file size issues, method=\"local\" issues (#153) change name print.location method conflict dplyr (#154)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-070","dir":"Changelog","previous_headings":"","what":"geojsonio 0.7.0","title":"geojsonio 0.7.0","text":"CRAN release: 2019-04-25","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.7.0","text":"geo2topo() gains new parameter quantization quantize geometry prior computing topology. topojson_write() uses geo2topo() internally, topojson_write() also gains quantization parameter ’s passed geo2topo() internally (#138) thanks @pvictor","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-7-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.7.0","text":"use package sf instead sp topojson_read(). note return object now class sf instead classes sp package (#144) (#145) type parameter topojson_json() now set type=\"auto\" input sf/sfc/sfg class object (#139) (#146) fix geojson_list.sfc() changes sf >= v0.7, names geometries, ’s valid geojson (#142)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"deprecated-and-defunct-0-7-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"DEPRECATED AND DEFUNCT","title":"geojsonio 0.7.0","text":"two linting functions package, lint() validate() now defunct. marked deprecated since v0.2. See package geojsonlint CRAN linting geojson functionality (#135) (#147)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-060","dir":"Changelog","previous_headings":"","what":"geojsonio 0.6.0","title":"geojsonio 0.6.0","text":"CRAN release: 2018-03-30","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.6.0","text":"topojson_write() gains new parameter object_name. can set name resulting TopoJSON object name created. part geo2topo() also gains new parameter, similarly called object_name, thing topojson_write(). (#129) (thanks @josiekre) PR (#131) part PR (#132) added new function geojson_sf() convert output geojson_list() geojson_json() sf package classes - analog geojson_sp()","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-6-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.6.0","text":"geojson_json() gains option type parameter skip coercion geojson package class geoclass. Using type = \"skip\" can skip geoclass class coercion, cases large datasets performance improvements (#128) PR (#133)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"NEW FEATURES","what":"BUG FIXES","title":"geojsonio 0.6.0","text":"bug arose geojson_sp() newest version rgdal. resolved using sf package instead read GeoJSON. knock-benefit speeding reading GeoJSON. addition, sf now Imports instead Suggests (#130) PR (#132)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-050","dir":"Changelog","previous_headings":"","what":"geojsonio 0.5.0","title":"geojsonio 0.5.0","text":"CRAN release: 2017-11-10","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.5.0","text":"gains new function geojson_atomize “atomize” FeatureCollection features, GeometryCollection geometries (#120) via (#119) thx @SymbolixAU gains new functions topojson_list topojson_json converting many input types spatial data TopoJSON, lists JSON (#117) geojson_json uses brief output provided geojson package - makes less frustrating especially large geojson string prints console - instead prints brief summary GeoJSON object (#86) (#124)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.5.0","text":"much thorough job cleaning temp files necessarily generated due go disk sometimes (#122) @ateucher made improvements geojson_json make type parameter flexible (#125)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.5.0","text":"Fixe bug topojson_write - writing topojson file, also geojson file - now cleanup geojson file (#127)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-042","dir":"Changelog","previous_headings":"","what":"geojsonio 0.4.2","title":"geojsonio 0.4.2","text":"CRAN release: 2017-09-01","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.4.2","text":"Fix package load topojson-server.js within package instead web. makes package doesn’t make web requests load, prevented package loading internet connection available. (#118)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-040","dir":"Changelog","previous_headings":"","what":"geojsonio 0.4.0","title":"geojsonio 0.4.0","text":"CRAN release: 2017-08-20","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.4.0","text":"Gains new functions geo2topo, topo2geo, topojson_write, topojson_read working TopoJSON data - associated , now import geojson package (#24) (#100)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.4.0","text":"Updated vignette details GeoJSON specification new specification https://www.rfc-editor.org/rfc/rfc7946 (#114)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-038","dir":"Changelog","previous_headings":"","what":"geojsonio 0.3.8","title":"geojsonio 0.3.8","text":"CRAN release: 2017-07-24","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-3-8","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.3.8","text":"geojson_write geojson_json now pass ... argument rgdal::writeOGR jsonlite::toJSON depending class/method. methods use latter, now allows setting na argument control NA values represented json, pretty argument control whether resulting json pretty-formated compact (#109) (#111) Spelling/grammar fixes, thanks @patperu ! (#106)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-3-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.3.8","text":"geojson_json geojson_write now convert unsupported classes basic class conversion /writing geojson. commonly occurring fields sf objects calculated sf::st_area sf::st_length class units. (#107) Fixed bug occurring GDAL version >= 2.2.0 layer name geojson file detected properly (#108)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-032","dir":"Changelog","previous_headings":"","what":"geojsonio 0.3.2","title":"geojsonio 0.3.2","text":"CRAN release: 2017-02-06","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.3.2","text":"Fix tests internal fxn convert_wgs84 minimal test output, conditionally test sf available (#103)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-030","dir":"Changelog","previous_headings":"","what":"geojsonio 0.3.0","title":"geojsonio 0.3.0","text":"CRAN release: 2017-01-27","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.3.0","text":"geojson_json, geojson_list, geojson_write gain new S3 methods: sf, sfc, sfg - three classes sf package (#95) geojson_json, geojson_list, geojson_write gain two new parameters : convert_wgs84 (boolean) convert WGS84 (projection assumed GeoJSON) crs assign CRS known (#101) (#102)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.3.0","text":"geojson_json() non-sp classes now keeps seven decimal places coordinates. follows default GDAL uses. Now namespacing base package calls methods/stats/utils instead importing Improved documentation method parameter geojson_read clarifying options (#93) thanks @bhaskarvk Internal fxn to_json now defaults 7 digits, used .json geojson_json (#96)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.3.0","text":"Fix geojson_read read correctly URL - addition file paths (#91) (#92) thanks @lecy Fix geojson_read read non-.geojson extensions (#93) thanks @bhaskarvk","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-020","dir":"Changelog","previous_headings":"","what":"geojsonio 0.2.0","title":"geojsonio 0.2.0","text":"CRAN release: 2016-07-14","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.2.0","text":"Major performance improvement geojson_json() - moved reading json readr::read_file() (#85) thanks @javrucebo ! Now requiring explicit versions package dependencies Removed startup message","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.2.0","text":"Changed file_to_geojson() use httr::write_disk() instead download.file() (#83) thanks @patperu","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"deprecated-and-defunct-0-2-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"geojsonio 0.2.0","text":"two linting functions package, lint() validate() now deprecated, defunct next version package. See new package geojsonlint CRAN linting geojson functionality (#82)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-018","dir":"Changelog","previous_headings":"","what":"geojsonio 0.1.8","title":"geojsonio 0.1.8","text":"CRAN release: 2016-04-10","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-1-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.1.8","text":"New method geojson_sp.json() added geojson_sp() handle json class inputs","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-1-8","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.1.8","text":"Added encodin=\"UTF-8\" httr::content() calls","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-1-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.1.8","text":"geojson_write() didn’t overwrite existing files despite saying . New parameter added function overwrite specify whether overwrite function , defaults TRUE (#81) thanks @Robinlovelace !","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-016","dir":"Changelog","previous_headings":"","what":"geojsonio 0.1.6","title":"geojsonio 0.1.6","text":"CRAN release: 2016-01-15","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-1-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.1.6","text":"New function geojson_sp() convert output geojson_list() geojson_json() spatial classes (e.g., SpatialPointsDataFrame) (#71)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-1-6","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.1.6","text":"Startup message added notify users ideally update rgdal > v1.1-1 given fix make writing multipolygon objects geojson correct (#69) Filled test suite (#46)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.1.6","text":"Fix lint() function, due bug passing data Javascript layer (#73) Fixes .json() (#76)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-014","dir":"Changelog","previous_headings":"","what":"geojsonio 0.1.4","title":"geojsonio 0.1.4","text":"CRAN release: 2015-08-12","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.1.4","text":"New function map_leaf() uses leaflet package make maps, S3 methods spatial classes well R classes, including data.frame’s, lists, vectors, file inputs, (#48) geojson_read() now optionally can give back spatial class object, just convenience case want get back geojson, spatial class (#60)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"minor-improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"geojsonio 0.1.4","text":"Now leaflet R package CRAN, put back examples using make maps (#49) Added linter list inputs comined geometry=\"polygon\" geojson_*() functions .list methods. checks make sure inputs first last coordinate pairs close polygon (#34)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"bug-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"geojsonio 0.1.4","text":"Importing non-base R funtions, including methods, stats utils packages (#62) Fixed bug geojson_write() geojson style names altered accident (#56)","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"geojsonio-010","dir":"Changelog","previous_headings":"","what":"geojsonio 0.1.0","title":"geojsonio 0.1.0","text":"CRAN release: 2015-04-30","code":""},{"path":"https://docs.ropensci.org/geojsonio/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"geojsonio 0.1.0","text":"released CRAN","code":""}]
